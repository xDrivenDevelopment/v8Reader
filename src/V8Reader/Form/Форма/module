//==============================================================================================================================================
// ПЕРЕМЕННЫЕ МОДУЛЯ ФОРМЫ
//==============================================================================================================================================

Перем WshShell;                //Для запуска командной строки
Перем ФайлПрограммыРаспаковки; //в качестве программы распаковки используется программа V8Unpack 2.0 от disa_da из публикации http://infostart.ru/public/15695/
Перем ТекстСтрокой;
Перем Версия;
Перем СтрокаОтчетаОбАнализе;
Перем МакетРасширений;
Перем РегулярноеВыражениеX;     //для получения из текстового файла объекта пары идентификатор/наименование
Перем РегулярноеВыражение0;     //для получения из файла описания конфигурации списка объектов метаданных одного вида
Перем РегулярноеВыражение1;     //для разбивки этого списка на отдельные объекты
Перем РегулярноеВыражениеN;     //для получения из текста объекта метаданных списка его подчиненных объектов (форм/макетов/реквизитов и др.)
Перем РегулярноеВыражениеДляФМ; //для получения из файла описания отчета/обработки списка макетов/форм
Перем РегулярноеВыражениеП;     //для нахождения объектов подсистем в 8.1
Перем РегулярноеВыражениеП1;    //для определения иерархии объектов подсистем в 8.1
Перем РегулярноеВыражениеП2;    //для нахождения объектов подсистем в 8.2
Перем РегулярноеВыражениеК1;    //для нахождения команд
Перем РегулярноеВыражениеР1;    //для нахождения реквизитов
Перем РегулярноеВыражениеР3;    //для нахождения списка реквизитов табличных частей объектов
Перем РегулярноеВыражениеР4;    //для нахождения самих реквизитов табличных частей
Перем СоответствиеСтрокПервогоДерева;
Перем СоответствиеСтрокВторогоДерева;
Перем СоответствиеСтрокТретьегоДерева;
Перем НужноеСоответствие;
Перем ОбъектДляСравнения;
Перем СтрокаИндикатора;

//==============================================================================================================================================
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//==============================================================================================================================================

Процедура ПриОткрытии()
	
	ИнициализацияРегЭкспов();
	
	//Восстановить сохраненные настройки
	ФайлОбновления = ВосстановитьЗначение("V8Reader|ФайлОбновления");
	ФайлКонфигурации = ВосстановитьЗначение("V8Reader|ФайлКонфигурации");
	ФайлТретий = ВосстановитьЗначение("V8Reader|ФайлТретий");
	РежимСравнения = ВосстановитьЗначение("V8Reader|РежимСравнения");
	РежимВыбораОбъекта = ВосстановитьЗначение("V8Reader|РежимВыбораОбъекта");
	РежимРазбора = ВосстановитьЗначение("V8Reader|РежимРазбора");
	ИспользоватьКэш = ВосстановитьЗначение("V8Reader|ИспользоватьКэш");
	КаталогДляРаспаковкиКонфигурации = ВосстановитьЗначение("V8Reader|КаталогДляРаспаковкиКонфигурации");
	КаталогДляРаспаковкиОбновления = ВосстановитьЗначение("V8Reader|КаталогДляРаспаковкиОбновления");
	КаталогТретий = ВосстановитьЗначение("V8Reader|КаталогТретий");
	ВыборDiff = ВосстановитьЗначение("V8Reader|ВыборDiff");
	ПроверятьАктуальнуюВерсиюПриОткрытии = ВосстановитьЗначение("V8Reader|ПроверятьАктуальнуюВерсиюПриОткрытии");
	Если РежимРазбора = 0 Тогда
		СтруктурноеСравнениеМодулей = Истина;
	Иначе
		СтруктурноеСравнениеМодулей = ВосстановитьЗначение("V8Reader|СтруктурноеСравнениеМодулей");
	КонецЕсли;
	РежимРазбора = 1;
	
	//Установка текста гиперссылки программы сравнения
	ИзменитьЗаголовокDiff();
	
	//Управление видимостью-доступностью кнопок
	РежимАнализаПриИзменении();
	
	//В дереве метаданных нужна колонка произвольного типа для хранения соответствия идентификаторов ссылкам объекта
	ДеревоМетаданных.Колонки.Добавить("СсылкиОбъектов");
	ДеревоCf.Колонки.Добавить("СсылкиОбъектов");
	ТретьеДерево.Колонки.Добавить("СсылкиОбъектов");
	
	Если ПроверятьАктуальнуюВерсиюПриОткрытии=Истина Тогда
		ПодключитьОбработчикОжидания("ПроверкаАктуальнойВерсии",5,Истина);
	КонецЕсли;
	
	ЭтаФорма.Заголовок = ЭтаФорма.Заголовок+" v."+Версия();
	ЭтаФорма.КлючУникальности = "КлючУникальности";
	
	Если Не ПустаяСтрока(ПараметрЗапуска) Тогда
		ОбработатьПараметрыЗапуска(ПараметрЗапуска);
	КонецЕсли;
	
	ВыполнитьРазборкуИСборкуДляОтладки();//+Володькин
	
КонецПроцедуры

Процедура ПроверкаАктуальнойВерсии()
	
	Форм=ПолучитьФорму("ФормаНастройки");
	Форм.ПроверитьСейчасНажатие(Неопределено);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если ЗавершитьРаботу1СПослеЗакрытия = Неопределено Тогда
		МассивЗакрываемыхОкон=Новый Массив;
		Для каждого Форм из ЭтотОбъект.Метаданные().Формы цикл
			Если ПолучитьФорму(Форм,ЭтаФорма).Открыта() тогда
				МассивЗакрываемыхОкон.Добавить(ПолучитьФорму(Форм,ЭтаФорма));
			КонецЕсли;
		КонецЦикла;
		Пока МассивЗакрываемыхОкон.Количество()>0 цикл
			ЗакрыватьСЗадержкой=Истина;
			МассивЗакрываемыхОкон[МассивЗакрываемыхОкон.ВГраница()].Закрыть();
			МассивЗакрываемыхОкон.Удалить(МассивЗакрываемыхОкон.ВГраница());
		КонецЦикла;		
		Если ЗакрыватьСЗадержкой=Истина тогда
			Отказ=истина;
			ПодключитьОбработчикОжидания("ЗакрытиеФормы",0.1,истина);
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ЗакрытиеФормы()
	ЭтаФорма.Закрыть();
КонецПроцедуры	

Процедура ПриЗакрытии()
	
	//Сохранение нужных настроек
	Если ЗавершитьРаботу1СПослеЗакрытия <> Ложь Тогда
		СохранитьЗначениеКаталогаРаспаковки(КаталогДляРаспаковкиОбновления,"V8Reader|КаталогДляРаспаковкиОбновления");
		СохранитьЗначениеКаталогаРаспаковки(КаталогДляРаспаковкиКонфигурации,"V8Reader|КаталогДляРаспаковкиКонфигурации");
		СохранитьЗначениеКаталогаРаспаковки(КаталогТретий,"V8Reader|КаталогТретий");
		СохранитьЗначение("V8Reader|ФайлОбновления",ФайлОбновления);
		СохранитьЗначение("V8Reader|ФайлКонфигурации",ФайлКонфигурации);
		СохранитьЗначение("V8Reader|ФайлТретий",ФайлТретий);
		СохранитьЗначение("V8Reader|РежимСравнения",РежимСравнения);
		СохранитьЗначение("V8Reader|РежимВыбораОбъекта",РежимВыбораОбъекта);
		СохранитьЗначение("V8Reader|РежимРазбора",РежимРазбора);
		СохранитьЗначение("V8Reader|ВыборDiff",ВыборDiff);
		СохранитьЗначение("V8Reader|ИспользоватьКэш",ИспользоватьКэш);
		СохранитьЗначение("V8Reader|ПроверятьАктуальнуюВерсиюПриОткрытии",ПроверятьАктуальнуюВерсиюПриОткрытии);
		СохранитьЗначение("V8Reader|СтруктурноеСравнениеМодулей",СтруктурноеСравнениеМодулей);
	КонецЕсли;
	
	//удаление файла программы распаковки
	Если ФайлПрограммыРаспаковки<>Неопределено  тогда
		УдалитьФайлы(ФайлПрограммыРаспаковки.ПолноеИмя);		
	КонецЕсли;
	
	Если ЗавершитьРаботу1СПослеЗакрытия=Истина Тогда
		ЗавершитьРаботуСистемы(Ложь);
	КонецЕсли;
	
КонецПроцедуры

//==============================================================================================================================================
// ОБРАБОТЧИКИ СОБЫТИЙ КНОПОК ФОРМЫ
//==============================================================================================================================================

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Если ПодтвердитьПерезаполнение()=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	//Проверяем поле распаковываемого файла на заполнение и сам файл на существование
	Если  ПроверитьКорректностьЗначения(ФайлОбновления,"файл для анализа!")=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	//Если необходимо, устанавливаем v8Unpack из макета
	Если ФайлПрограммыРаспаковки=Неопределено тогда
		Инициализация();
	КонецЕсли;
	
	//распаковка 
	Если РежимВыбораОбъекта=2 тогда                        
		РаспаковкаОбновления();
	Иначе
		Распаковка(ФайлОбновления, КаталогДляРаспаковкиОбновления);
	КонецЕсли;
	
	//вывод результата
	Если РежимВыбораОбъекта=2 Тогда
		ВыводРезультата("Распаковка");
	ИначеЕсли РежимВыбораОбъекта=4 Тогда	
		ВыводРезультатаДляSSF(ФайлОбновления,КаталогДляРаспаковкиОбновления);    
	Иначе		
		ВыводРезультатаДляCfEpf(ФайлОбновления, КаталогДляРаспаковкиОбновления); 
	КонецЕсли;
	
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.ОткрытьНавигаторФайлов.Доступность=Истина;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие.Доступность=Истина;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие1.Доступность=Истина;
	
КонецПроцедуры

Процедура КнопкаВыполнитьНажатиеКомплекс(Кнопка)
	
	Если ПодтвердитьПерезаполнение()=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	//Проверяем поле первого распаковываемого файла на заполнение и сам файл на существование
	Если  ПроверитьКорректностьЗначения(ФайлКонфигурации,"первый файл для сравнения!")=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	//Определимся, что нужно сделать со вторым и третьим объектами сравнения
	РазбиратьФайлОбновления=Ложь;
	ПроверкаВторогоИТретьегоОбъектов(РазбиратьФайлОбновления);
	
	//Если необходимо, устанавливаем V8Unpack из макета
	Если ФайлПрограммыРаспаковки=Неопределено тогда
		Инициализация();
	КонецЕсли;
	
	//распаковать первый файл
	Распаковка(ФайлКонфигурации,КаталогДляРаспаковкиКонфигурации);
	
	//Сделать все остальное
	ВыводРезультатаКомплекс(РазбиратьФайлОбновления);
	
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.ОткрытьНавигаторФайлов.Доступность=Истина;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие.Доступность=Истина;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие1.Доступность=Истина;
	
КонецПроцедуры

Процедура ВывестиНажатие(Кнопка)
	
	Если ПодтвердитьПерезаполнение()=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимВыбораОбъекта=2 тогда
		ВыводРезультата("ТолькоДерево");
	ИначеЕсли РежимВыбораОбъекта=4 Тогда	
		ВыводРезультатаДляSSF(ФайлОбновления,КаталогДляРаспаковкиОбновления);    
	Иначе
		ВыводРезультатаДляCfEpf(ФайлОбновления,КаталогДляРаспаковкиОбновления);
	КонецЕсли;
	
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.ОткрытьНавигаторФайлов.Доступность=Истина;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие.Доступность=Истина;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие1.Доступность=Истина;
	
КонецПроцедуры

Процедура ВывестиНажатиеКомплекс(Кнопка)
	
	Если ПодтвердитьПерезаполнение()=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	//Определимся, что нужно сделать со вторым и третьим объектами сравнения
	РазбиратьФайлОбновления=Ложь;
	ПроверкаВторогоИТретьегоОбъектов(РазбиратьФайлОбновления);
	
	//вывод результата
	ВыводРезультатаКомплекс(РазбиратьФайлОбновления);	
	
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.ОткрытьНавигаторФайлов.Доступность=Истина;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие.Доступность=Истина;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие1.Доступность=Истина;
	
КонецПроцедуры

Процедура ПерестроитьНажатие(Кнопка)
	
	СравнениеМетаданных.Строки.Очистить();
	ВыводРезультатаСравнения();
	
КонецПроцедуры

Процедура ПерестроитьТрехуровневоеНажатие(Кнопка)
	
	ТрехуровневоеСравнение.Строки.Очистить();
	ВыводТрехуровневогоСравнения();
	
КонецПроцедуры

Процедура НастройкаНажатие(Элемент)
	
	ФормаНастройки = ЭтотОбъект.ПолучитьФорму("ФормаНастройки",ЭтаФорма);
	
	Если Элемент.Имя="НастройкаDiff" Тогда
		ФормаНастройки.ЭлементыФормы.ПанельНастроек.ТекущаяСтраница=ФормаНастройки.ЭлементыФормы.ПанельНастроек.Страницы.Настройка3WayDiff;
	КонецЕсли;
	
	ФормаНастройки.Открыть();
	
КонецПроцедуры

Процедура УправляющаяКоманднаяПанельСравнитьФайлы(Кнопка)
	
	Попытка
		Если ЭлементыФормы.ПанельДляДерева.ТекущаяСтраница=ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu тогда
			ЭлементыФормы.СравнениеМетаданных.ТекущаяСтрока=СравнениеМетаданных.Строки.Найти(ЭлементыФормы.ДеревоМетаданных.ТекущаяСтрока.ПутьТекОбъект,"ПутьТекОбъектcfu",истина);
			ЭлементыФормы.ПанельАнализа.ТекущаяСтраница=ЭлементыФормы.ПанельАнализа.Страницы.СравнениеФайлов;	
		ИначеЕсли ЭлементыФормы.ПанельДляДерева.ТекущаяСтраница=ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf Тогда 
			ЭлементыФормы.СравнениеМетаданных.ТекущаяСтрока=СравнениеМетаданных.Строки.Найти(ЭлементыФормы.ДеревоCf.ТекущаяСтрока.ПутьТекОбъект,"ПутьТекОбъектcf",истина);
			ЭлементыФормы.ПанельАнализа.ТекущаяСтраница=ЭлементыФормы.ПанельАнализа.Страницы.СравнениеФайлов;	
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура УправляющаяКоманднаяПанельОткрытьНавигаторФайлов(Кнопка)
	
	Если ДеревоОбъектовОбновления<>Неопределено и ДеревоОбъектовОбновления.Строки.Количество()<>0 Тогда
		Форм=ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма);
		Форм.ДеревоОбъектов=ДеревоОбъектовОбновления;
		Форм.ДеревоОбъектов1=ДеревоОбъектовКонфигурации;
		Форм.ДеревоОбъектов2=ТретьеДеревоОбъектов;
		Форм.Открытие=истина;
		Если РежимСравнения=0 тогда
			Форм.ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Верх;
			форм.ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
		ИначеЕсли РежимСравнения=1 тогда 				
			форм.ЭлементыФормы.Панель1.Видимость=Истина;
			форм.ЭлементыФормы.Панель2.Видимость=Ложь;
			Форм.ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
			форм.ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
		Иначе
			форм.ЭлементыФормы.Панель1.Видимость=Истина;
			Форм.ЭлементыФормы.Панель2.Видимость=Истина;
			Форм.ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
			форм.ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Нет;
		КонецЕсли;
		Форм.Открыть();
		форм.ЭлементыФормы.ОбъектМетаданных.Заголовок="Выберите файл, чтобы определить его объект";
		Форм.ЭлементыФормы.ОбъектМетаданных.Гиперссылка=ложь;
		Форм.ЭлементыФормы.ОбъектМетаданных1.Заголовок="Выберите файл, чтобы определить его объект";
		Форм.ЭлементыФормы.ОбъектМетаданных1.Гиперссылка=ложь;
		Форм.ЭлементыФормы.ОбъектМетаданных2.Заголовок="Выберите файл, чтобы определить его объект";
		Форм.ЭлементыФормы.ОбъектМетаданных2.Гиперссылка=ложь;
	ИначеЕсли КаталогДляРаспаковкиОбновления<>"" Тогда
		ЗаполнитьДеревоФайлов(КаталогДляРаспаковкиОбновления);
		Если РежимСравнения<>0 Тогда
			ЗаполнитьДеревоФайлов(КаталогДляРаспаковкиКонфигурации);
			Если РежимСравнения=2 Тогда
				ЗаполнитьДеревоФайлов(КаталогТретий);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;	
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.ОткрытьНавигаторФайлов.Доступность=Ложь;
	
КонецПроцедуры

Процедура КомандыСравненияСравнитьОбъекты(Кнопка)
	Если ОбъектДляСравнения=Неопределено Тогда
		Если ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.Имя="ДеревоCf" Тогда
			ПутьОбъектаДляСравнения=КаталогДляРаспаковкиКонфигурации;
		ИначеЕсли ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.Имя="ДеревоМетаданных" Тогда
			ПутьОбъектаДляСравнения=КаталогДляРаспаковкиОбновления;
		ИначеЕсли ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.Имя="ТретьеДерево" Тогда
			ПутьОбъектаДляСравнения=КаталогТретий;
		КонецЕсли;
		ОбъектДляСравнения=Новый Структура();
		ОбъектДляСравнения.Вставить("ВидОбъекта",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Объект);
		ОбъектДляСравнения.Вставить("ПутьОбъекта",ПутьОбъектаДляСравнения+"\"+ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.ПутьТекОбъект);
		Если ОбъектДляСравнения.ВидОбъекта<>"Р" Тогда
			ОбъектДляСравнения.Вставить("Синоним",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Синоним);
		Иначе
			ОбъектДляСравнения.Вставить("Синоним",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Родитель.Наименование);
			ОбъектДляСравнения.Вставить("Дерево",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.Значение);
		КонецЕсли;
		Если ОбъектДляСравнения.ВидОбъекта="Ф" Тогда
			Если ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Родитель.ВидМетаданных="ОбщаяФорма" Тогда
				ОбъектДляСравнения.Вставить("ВидМетаданных","ОбщаяФорма");
			Иначе
				ОбъектДляСравнения.Вставить("ВидМетаданных",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Родитель.Родитель.Родитель.ВидМетаданных);
			КонецЕсли;
		КонецЕсли;
		Если ОбъектДляСравнения.ВидОбъекта="Р" Тогда
			Кнопка.Текст="Добавить к сравнению вторую роль";
		ИначеЕсли ОбъектДляСравнения.ВидОбъекта="Ф" Тогда
			Кнопка.Текст="Добавить к сравнению вторую форму";
		ИначеЕсли ОбъектДляСравнения.ВидОбъекта="М0" Тогда
			Кнопка.Текст="Добавить к сравнению второй табличный макет";
		Иначе
			Кнопка.Текст="Добавить к сравнению второй объект";
		КонецЕсли;
	Иначе
		Если ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.Имя="ДеревоCf" Тогда
			ПутьОбъектаДляСравнения=КаталогДляРаспаковкиКонфигурации;
		ИначеЕсли ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.Имя="ДеревоМетаданных" Тогда
			ПутьОбъектаДляСравнения=КаталогДляРаспаковкиОбновления;
		ИначеЕсли ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.Имя="ТретьеДерево" Тогда
			ПутьОбъектаДляСравнения=КаталогТретий;
		КонецЕсли;
		ВторойОбъектДляСравнения=Новый Структура();
		ВторойОбъектДляСравнения.Вставить("ВидОбъекта",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Объект);
		ВторойОбъектДляСравнения.Вставить("ПутьОбъекта",ПутьОбъектаДляСравнения+"\"+ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.ПутьТекОбъект);
		Если ВторойОбъектДляСравнения.ВидОбъекта<>"Р" Тогда
			ВторойОбъектДляСравнения.Вставить("Синоним",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Синоним);
		Иначе
			ВторойОбъектДляСравнения.Вставить("Синоним",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Родитель.Наименование);
			ВторойОбъектДляСравнения.Вставить("Дерево",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.Значение);;
		КонецЕсли;
		Если ВторойОбъектДляСравнения.ВидОбъекта="Ф" Тогда
			Если ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Родитель.ВидМетаданных="ОбщаяФорма" Тогда
				ВторойОбъектДляСравнения.Вставить("ВидМетаданных","ОбщаяФорма");
			Иначе
				ВторойОбъектДляСравнения.Вставить("ВидМетаданных",ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Родитель.Родитель.Родитель.ВидМетаданных);
			КонецЕсли;
		КонецЕсли;
		Если ОбъектДляСравнения.ВидОбъекта<>ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий.ТекущаяСтрока.Объект Тогда
			Если ОбъектДляСравнения.ВидОбъекта="Р" Тогда
				Предупреждение("Недопустимая операция сравнения (в качестве второго объекта выбрана не роль)", 5);
			ИначеЕсли ОбъектДляСравнения.ВидОбъекта="Ф"  Тогда
				Предупреждение("Недопустимая операция сравнения (в качестве второго объекта выбрана не форма)", 5);
			ИначеЕсли ОбъектДляСравнения.ВидОбъекта="М0" Тогда
				Предупреждение("Недопустимая операция сравнения (в качестве второго объекта выбран не табличный макет)", 5);
			Иначе
				Попытка
					СравнитьОбъекты(ОбъектДляСравнения,ВторойОбъектДляСравнения,Истина);
				Исключение
					Предупреждение("Недопустимая операция сравнения (не соответствующие типы сравниваемых объектов)");
				КонецПопытки;
			КонецЕсли;
		Иначе
			Попытка
				СравнитьОбъекты(ОбъектДляСравнения,ВторойОбъектДляСравнения,Истина);
			Исключение
				Предупреждение("Недопустимая операция сравнения (не соответствующие типы сравниваемых объектов)");
			КонецПопытки;
		КонецЕсли;
		Кнопка.Текст="Запомнить выбранный объект для сравнения";
		ОбъектДляСравнения=Неопределено;
	КонецЕсли;
КонецПроцедуры

//==============================================================================================================================================
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//==============================================================================================================================================

Процедура ДеревоМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	Если Элемент=ЭлементыФормы.ДеревоCf тогда
		НужныйКаталог=КаталогДляРаспаковкиКонфигурации;
	ИначеЕсли Элемент=ЭлементыФормы.ДеревоМетаданных Тогда
		НужныйКаталог=КаталогДляРаспаковкиОбновления;
	Иначе НужныйКаталог=КаталогТретий;
	КонецЕсли;
	Если РежимВыбораОбъекта=4 Тогда
		МодульОбъекта="module";
		Форм=ПолучитьФорму("РазборФормы");
		ФайлФормы=Новый Файл(НужныйКаталог+"\form");
		ТекстФормы=Новый ТекстовыйДокумент;
		ТекстФормы.Прочитать(НужныйКаталог+"\form");
		формаСтрокой=ТекстФормы.ПолучитьТекст();
		ФормаСтрокой="{""#"",5c83cba4-7a20-4102-a5be-add0ee74f6a1,"+Символы.ПС+ФормаСтрокой+Символы.ПС+"}";
		Попытка
			ПолученнаяФорма=ЗначениеИзСтрокиВнутр(ФормаСтрокой);
			Форм.РасширенныйАнализ=истина;
			ФормаКопия=ЗначениеИзСтрокиВнутр(ФормаСтрокой);
		Исключение
			Форм.РасширенныйАнализ=ложь;
		КонецПопытки;
		
		ФайлФормы=Новый Файл(ФайлФормы.Путь);
		Форм.ГиперссылкаФормы=ВыбраннаяСтрока.Синоним;
		
		Форм.МодульФормы=ФайлФормы.ПолноеИмя+"\module";
		Форм.ФормаСтрокой=ФайлФормы.ПолноеИмя+"\form";
		Форм.Открыть();
		Форм.УстановитьТекстМодуляФормы();
		Форм.ПостроитьДерево(ПолученнаяФорма,ФормаКопия,Форм.ДеревоЭлементовФормы);
		Если Форм.РасширенныйАнализ=ложь тогда
			Форм.ПостроитьДеревоXML();
		КонецЕсли;
		Форм.СформироватьСписокРеквизитовФормы(Форм.СписокРеквизитов);
		Текст=Новый ТекстовыйДокумент;
		Текст.Прочитать(НужныйКаталог+"\"+МодульОбъекта, КодировкаТекста.UTF8);
		ЭлементыФормы.ПолеТекстовогоДокумента1.УстановитьТекст(Текст.ПолучитьТекст());
		Возврат;
	КонецЕсли;
	Если ВыбраннаяСтрока.ПутьТекОбъект<>"" Тогда
		ТекКаталог=НайтиФайлы(НужныйКаталог+"\",ВыбраннаяСтрока.ПутьТекОбъект);
		Для к=0 по ТекКаталог.Количество()-1 Цикл
			ТекФайл=ТекКаталог.Получить(к);
			Если ТекФайл.ЭтоФайл() Тогда
				Текст=Новый ТекстовыйДокумент;
				Текст.Прочитать(ТекФайл.ПолноеИмя, КодировкаТекста.UTF8);
				ТекстФайла=Текст.ПолучитьТекст();
				Если ВыбраннаяСтрока.Объект="С"  Тогда
					ОткрытьФайлСправки(Текст);
				ИначеЕсли ВыбраннаяСтрока.Объект="К" Тогда
					ОткрытьКартинку(Текст);
				ИначеЕсли ВыбраннаяСтрока.Объект="Р" Тогда
					ОткрытьРоль(Текст,Элемент.Значение,ВыбраннаяСтрока.Родитель.Наименование);
				ИначеЕсли ВыбраннаяСтрока.Объект="М0" Тогда
					Текст=Новый ТабличныйДокумент;
					Текст.Прочитать(ТекФайл.ПолноеИмя);
					Текст.Показать(ВыбраннаяСтрока.Синоним,ТекФайл.ПолноеИмя);
				ИначеЕсли ВыбраннаяСтрока.Объект="М3" Тогда
					ОткрытьФайлСправки(Текст);
				ИначеЕсли ВыбраннаяСтрока.Объект="М5" Тогда
					Текст=Новый ГеографическаяСхема;
					Текст.Прочитать(ТекФайл.ПолноеИмя);
					Текст.Показать(ВыбраннаяСтрока.Синоним,ТекФайл.ПолноеИмя);
				ИначеЕсли (ВыбраннаяСтрока.Объект="М8")ИЛИ (ВыбраннаяСтрока.Объект="КМ")Тогда
					Текст=Новый ГрафическаяСхема;
					Текст.Прочитать(ТекФайл.ПолноеИмя);
					Текст.Показать(ВыбраннаяСтрока.Синоним,ТекФайл.ПолноеИмя);
				ИначеЕсли ВыбраннаяСтрока.Объект="М4" Тогда
					Текст=Новый ТекстовыйДокумент;
					Текст.Прочитать(ТекФайл.ПолноеИмя);
					Текст.Показать(ВыбраннаяСтрока.Синоним,ТекФайл.ПолноеИмя);
				ИначеЕсли ВыбраннаяСтрока.Объект="М1" Тогда
					ОткрытьФормуДвоичныхДанных(ВыбраннаяСтрока,Текст);
				ИначеЕсли ВыбраннаяСтрока.Объект="Ф" тогда
					Если ТекФайл.Расширение<>"" тогда
						Форм=ПолучитьФорму("РазборФормы");
						Форм.РасширенныйАнализ=ложь;
						Форм.ФормаСтрокой=ТекФайл.ПолноеИмя;
						Форм.ГиперссылкаФормы=ВыбраннаяСтрока.Синоним;
						Если РежимВыбораОбъекта<>4 Тогда
							Если ВыбраннаяСтрока.Родитель.ВидМетаданных="ОбщаяФорма"  Тогда
								Форм.ВидМетаданныхОбъекта="ОбщаяФорма";
							Иначе
								Форм.ВидМетаданныхОбъекта = ВыбраннаяСтрока.Родитель.Родитель.Родитель.ВидМетаданных;
							КонецЕсли;
						КонецЕсли;
						Форм.Открыть();
						Форм.ПостроитьДеревоУправляемойФормы(Форм.ДеревоЭлементовФормы);
					Иначе
						ЭлементыФормы.ПолеТекстовогоДокумента1.УстановитьТекст(Текст.ПолучитьТекст());
					КонецЕсли;
				Иначе
					ЭлементыФормы.ПолеТекстовогоДокумента1.УстановитьТекст(Текст.ПолучитьТекст());
				КонецЕсли;
			Иначе 
				Если (ВыбраннаяСтрока.ИндексКартинки=43)ИЛИ (ВыбраннаяСтрока.ИндексКартинки=41) Тогда
					МодульОбъекта="image";
				ИначеЕсли (ВыбраннаяСтрока.Родитель.ВидМетаданных="ОбщаяФорма") ИЛИ (ВыбраннаяСтрока.Родитель.ВидМетаданных="Форма") Тогда
					МодульОбъекта="module";
					Форм=ПолучитьФорму("РазборФормы");
					ФайлФормы=Новый Файл(ТекФайл.ПолноеИмя+"\form");
					ТекстФормы=Новый ТекстовыйДокумент;
					ТекстФормы.Прочитать(ТекФайл.ПолноеИмя+"\form");
					ФормаСтрокой=ТекстФормы.ПолучитьТекст();
					ФормаСтрокой="{""#"",5c83cba4-7a20-4102-a5be-add0ee74f6a1,"+Символы.ПС+ФормаСтрокой+Символы.ПС+"}";
					Попытка
						ПолученнаяФорма=ЗначениеИзСтрокиВнутр(ФормаСтрокой);
						Форм.РасширенныйАнализ=истина;
						ФормаКопия=ЗначениеИзСтрокиВнутр(ФормаСтрокой);
					Исключение
						Форм.РасширенныйАнализ=ложь;
					КонецПопытки;
					
					ФайлФормы=Новый Файл(ФайлФормы.Путь);
					Форм.ГиперссылкаФормы=ВыбраннаяСтрока.Синоним;
					
					Если РежимВыбораОбъекта<>4 Тогда
						Если ВыбраннаяСтрока.Родитель.ВидМетаданных="ОбщаяФорма"  Тогда
							Форм.ВидМетаданныхОбъекта="ОбщаяФорма";
						Иначе
							Форм.ВидМетаданныхОбъекта = ВыбраннаяСтрока.Родитель.Родитель.Родитель.ВидМетаданных;
						КонецЕсли;
					КонецЕсли;
					
					Форм.МодульФормы=ФайлФормы.ПолноеИмя+"\module";
					Форм.ФормаСтрокой=ФайлФормы.ПолноеИмя+"\form";
					Форм.Открыть();
					Форм.УстановитьТекстМодуляФормы();
					Форм.СформироватьСписокРеквизитовФормы(Форм.СписокРеквизитов,ПолученнаяФорма);
					Форм.ПостроитьДерево(ФормаКопия,ПолученнаяФорма,Форм.ДеревоЭлементовФормы);
					
				Иначе МодульОбъекта="text";
				КонецЕсли;
				Текст=Новый ТекстовыйДокумент;
				Текст.Прочитать(ТекФайл.ПолноеИмя+"\"+МодульОбъекта, КодировкаТекста.UTF8);
				ЭлементыФормы.ПолеТекстовогоДокумента1.УстановитьТекст(Текст.ПолучитьТекст());
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ДеревоМетаданныхПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	ОформлениеСтроки.Ячейки.Наименование.ОтображатьКартинку=истина;
	ОформлениеСтроки.Ячейки.Наименование.ИндексКартинки=ДанныеСтроки.ИндексКартинки;
КонецПроцедуры

Процедура ДеревоМетаданныхПриАктивизацииСтроки(Элемент)
	
	Форм=ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма);
	
	Если Форм.Открыта() И Элемент.ТекущаяСтрока<>Неопределено Тогда
		Если ЭлементыФормы.ПанельДляДерева.ТекущаяСтраница = ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu тогда
			ФайлВыделеннойСтроки = Форм.ЭлементыФормы.ДеревоОбъектов.Значение.Строки.Найти(ЭлементыФормы.ДеревоМетаданных.ТекущаяСтрока.ПутьТекОбъект,"Имя",Истина);	
			Если ФайлВыделеннойСтроки<>Неопределено Тогда
				Форм.ЭлементыФормы.ДеревоОбъектов.ТекущаяСтрока = ФайлВыделеннойСтроки;
			КонецЕсли;
		ИначеЕсли  ЭлементыФормы.ПанельДляДерева.ТекущаяСтраница = ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf тогда
			ФайлВыделеннойСтроки = Форм.ЭлементыФормы.ДеревоОбъектов1.Значение.Строки.Найти(ЭлементыФормы.ДеревоCf.ТекущаяСтрока.ПутьТекОбъект,"Имя",Истина);
			Если ФайлВыделеннойСтроки<>Неопределено Тогда
				Форм.ЭлементыФормы.ДеревоОбъектов1.ТекущаяСтрока = ФайлВыделеннойСтроки;
			КонецЕсли;
		Иначе
			ФайлВыделеннойСтроки = Форм.ЭлементыФормы.ДеревоОбъектов2.Значение.Строки.Найти(ЭлементыФормы.ТретьеДерево.ТекущаяСтрока.ПутьТекОбъект,"Имя",Истина);
			Если ФайлВыделеннойСтроки<>Неопределено Тогда
				Форм.ЭлементыФормы.ДеревоОбъектов2.ТекущаяСтрока = ФайлВыделеннойСтроки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;  
	
КонецПроцедуры

Процедура ФайлНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВключатьОбновления=Ложь;
	Если Элемент=ЭлементыФормы.ФайлОбновления Тогда
		ВключатьОбновления=Истина
	КонецЕсли;
	
	ВыбранныйФайл=ВыборФайлаВДиалоге(Элемент,ВключатьОбновления);
	Если ВыбранныйФайл<>Неопределено Тогда
		Если Элемент=ЭлементыФормы.ФайлКонфигурации тогда
			ФайлКонфигурации=ВыбранныйФайл;
		ИначеЕсли Элемент=ЭлементыФормы.ФайлОбновления тогда
			ФайлОбновления=ВыбранныйФайл;
		ИначеЕсли Элемент=ЭлементыФормы.ФайлТретий тогда
			ФайлТретий=ВыбранныйФайл;
		КонецЕсли;
	Иначе Возврат;
	КонецЕсли;
	
КонецПроцедуры

Функция ВыборФайлаВДиалоге(Элемент,ВключатьОбновления)
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Если Элемент.Значение <> "" Тогда
		ФайлЭлемента = Новый Файл(Элемент.Значение);
		ДиалогВыбора.Каталог = ?(ФайлЭлемента.Существует(),ФайлЭлемента.Путь,"");
	КонецЕсли;
	Если  РежимВыбораОбъекта=1 тогда
		ДиалогВыбора.Фильтр = "Файлы обработок (*.epf)|*.epf"; 
		ДиалогВыбора.Заголовок="Выберите файл обработки";
	ИначеЕсли РежимВыбораОбъекта=2 и ВключатьОбновления=Истина Тогда	
		ДиалогВыбора.Фильтр = "Файлы обновлений конфигураций (*.cfu)|*.cfu"; 
		ДиалогВыбора.Заголовок="Выберите файл обновления конфигурации";
	ИначеЕсли РежимВыбораОбъекта=3 тогда
		ДиалогВыбора.Фильтр = "Файлы отчетов (*.erf)|*.erf"; 
		ДиалогВыбора.Заголовок="Выберите файл отчета";
	ИначеЕсли РежимВыбораОбъекта = 4  Тогда
		ДиалогВыбора.Фильтр = "Файлы форм (*.ssf,*.form)|*.form;*.ssf"; 
		ДиалогВыбора.Заголовок="Выберите файл формы Снегопата";
	Иначе
		ДиалогВыбора.Фильтр = "Файлы конфигураций (*.cf)|*.cf"; 
		ДиалогВыбора.Заголовок="Выберите файл конфигурации";
	КонецЕсли;
	Если ДиалогВыбора.Выбрать() Тогда
		Если ПодтвердитьПерезаполнение()=Ложь Тогда
			Возврат Неопределено;
		КонецЕсли;
		Возврат ДиалогВыбора.ПолноеИмяФайла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Процедура ВыбКаталогНажатие(Элемент,СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	ВыбКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ВыбКаталога.Каталог=Элемент.Подсказка;
	Если ВыбКаталога.Выбрать() = Истина Тогда
		Если ПодтвердитьПерезаполнение()=Ложь Тогда
			Возврат;
		КонецЕсли;
		Если РежимСравнения<>2 тогда
			Элемент.Значение = Лев(ВыбКаталога.Каталог,50)+"..."+Символы.ПС+
			"(файлы этого каталога не будут удалены при закрытии)";
		Иначе
			Элемент.Значение = Лев(ВыбКаталога.Каталог,50)+"...";
		КонецЕсли;
		Элемент.Подсказка=ВыбКаталога.Каталог;
		Если Элемент=ЭлементыФормы.НадписьКаталогРаспаковки тогда
			КаталогДляРаспаковкиОбновления=ВыбКаталога.Каталог;
		ИначеЕсли Элемент=ЭлементыФормы.НадписьКаталогРаспаковки1 тогда
			КаталогДляРаспаковкиКонфигурации=ВыбКаталога.Каталог;
		ИначеЕсли Элемент=ЭлементыФормы.НадписьКаталогРаспаковки2 тогда
			КаталогТретий=ВыбКаталога.Каталог;
		КонецЕсли;
		УправлениеВидимостьюКнопок();
	КонецЕсли;
КонецПроцедуры

Процедура ВыбКаталогОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка=ложь;
	
	Если РежимСравнения<>2 тогда
		Элемент.Значение="Распаковка производится в каталоге временных файлов
		|(при закрытии обработки файлы распаковки будут удалены)";
	Иначе 
		Элемент.Значение="Распаковка производится в каталоге временных файлов";
	КонецЕсли;
	
	Если Элемент=ЭлементыФормы.НадписьКаталогРаспаковки тогда
		КаталогДляРаспаковкиОбновления="";
	ИначеЕсли Элемент=ЭлементыФормы.НадписьКаталогРаспаковки1 тогда
		КаталогДляРаспаковкиКонфигурации="";
	ИначеЕсли Элемент=ЭлементыФормы.НадписьКаталогРаспаковки2 тогда
		КаталогТретий="";
	КонецЕсли;
	
	УправлениеВидимостьюКнопок();
	
КонецПроцедуры      	

Процедура ВыбКаталогОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	Если Элемент=ЭлементыФормы.НадписьКаталогРаспаковки тогда
		Файл=Новый Файл(КаталогДляРаспаковкиОбновления);
	ИначеЕсли Элемент=ЭлементыФормы.НадписьКаталогРаспаковки1 тогда
		Файл=Новый Файл(КаталогДляРаспаковкиКонфигурации);
	Иначе
		Файл=Новый Файл(КаталогТретий);
	КонецЕсли;
	ОткрытьВПроводнике(Файл);
КонецПроцедуры

Процедура РежимАнализаПриИзменении()
	
	Если ПодтвердитьПерезаполнение()=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Файл=Новый Файл(КаталогДляРаспаковкиКонфигурации);
	ФайлВторой=Новый Файл(КаталогДляРаспаковкиОбновления);
	ФайлПоследний=Новый Файл(КаталогТретий);
	Если РежимСравнения=1 тогда
		ЭлементыФормы.НадписьИмяФайла1.Видимость=истина;
		ЭлементыФормы.НадписьИмяФайла2.Видимость=ложь;
		ЭлементыФормы.ФайлКонфигурации.Видимость=Истина;
		ЭлементыФормы.ФайлТретий.Видимость=ложь;
		ЭлементыФормы.НадписьКаталогРаспаковки1.Видимость=истина;
		ЭлементыФормы.НадписьКаталогРаспаковки2.Видимость=ложь;
		ЭлементыФормы.НадписьКаталогРаспаковки1.Высота=35;
		Если КаталогДляРаспаковкиКонфигурации="" тогда
			ЭлементыФормы.НадписьКаталогРаспаковки1.Значение="Распаковка производится в каталоге временных файлов
			|(при закрытии обработки файлы распаковки будут удалены)";
		ИначеЕсли Файл.Существует() тогда
			ЭлементыФормы.НадписьКаталогРаспаковки1.Значение=Лев(Файл.ПолноеИмя,50)+"..."+Символы.ПС+
			"(файлы этого каталога не будут удалены при закрытии)";
			ЭлементыФормы.НадписьКаталогРаспаковки1.Подсказка=Файл.ПолноеИмя;
		КонецЕсли;
		ЭлементыФормы.ФайлОбновления.Верх=86;
		ЭлементыФормы.НадписьИмяФайла.Верх=86;
		ЭлементыФормы.НадписьКаталогРаспаковки.Верх=86;
		ЭлементыФормы.НадписьКаталогРаспаковки.Высота=35;
		Если КаталогДляРаспаковкиОбновления="" тогда
			ЭлементыФормы.НадписьКаталогРаспаковки.Значение="Распаковка производится в каталоге временных файлов
			|(при закрытии обработки файлы распаковки будут удалены)";
		ИначеЕсли ФайлВторой.Существует() тогда
			ЭлементыФормы.НадписьКаталогРаспаковки.Значение=Лев(ФайлВторой.ПолноеИмя,50)+"..."+Символы.ПС+
			"(файлы этого каталога не будут удалены при закрытии)";
			ЭлементыФормы.НадписьКаталогРаспаковки.Подсказка=ФайлВторой.ПолноеИмя;
		КонецЕсли;
		ЭлементыФормы.СравнениеМетаданных.Видимость=Истина;
		ЭлементыФормы.Фильтр.Видимость=Истина;
		ЭлементыФормы.Перестроить.Видимость=Истина;
		ЭлементыФормы.Надпись1.Видимость=Истина;
		ЭлементыФормы.ТрехуровневоеСравнение.Видимость=ложь;
		ЭлементыФормы.Надпись2.Видимость=ложь;
		ЭлементыФормы.ФильтрТрехуровневый.Видимость=ложь;
		ЭлементыФормы.ПерестроитьТрехуровневое.Видимость=ложь;
		ЭлементыФормы.НастройкаDiff.Видимость=ложь;
		
	ИначеЕсли РежимСравнения=0 тогда
		ЭлементыФормы.НадписьИмяФайла1.Видимость=ложь;
		ЭлементыФормы.НадписьИмяФайла2.Видимость=ложь;
		ЭлементыФормы.ФайлКонфигурации.Видимость=ложь;
		ЭлементыФормы.ФайлТретий.Видимость=ложь;
		ЭлементыФормы.НадписьКаталогРаспаковки1.Видимость=ложь;
		ЭлементыФормы.НадписьКаталогРаспаковки2.Видимость=ложь;
		ЭлементыФормы.ФайлОбновления.Верх=86;
		ЭлементыФормы.НадписьИмяФайла.Верх=86;
		ЭлементыФормы.НадписьКаталогРаспаковки.Верх=86;
		ЭлементыФормы.НадписьКаталогРаспаковки.Высота=35;
		Если КаталогДляРаспаковкиОбновления="" тогда
			ЭлементыФормы.НадписьКаталогРаспаковки.Значение="Распаковка производится в каталоге временных файлов
			|(при закрытии обработки файлы распаковки будут удалены)";
		ИначеЕсли ФайлВторой.Существует() тогда
			ЭлементыФормы.НадписьКаталогРаспаковки.Значение=Лев(ФайлВторой.ПолноеИмя,50)+"..."+Символы.ПС+
			"(файлы этого каталога не будут удалены при закрытии)";
			ЭлементыФормы.НадписьКаталогРаспаковки.Подсказка=ФайлВторой.ПолноеИмя;
		КонецЕсли;
	Иначе
		ЭлементыФормы.НадписьИмяФайла1.Видимость=Истина;
		ЭлементыФормы.НадписьИмяФайла2.Видимость=Истина;
		ЭлементыФормы.ФайлКонфигурации.Видимость=Истина;
		ЭлементыФормы.ФайлТретий.Видимость=Истина;
		ЭлементыФормы.НадписьКаталогРаспаковки1.Видимость=Истина;
		ЭлементыФормы.НадписьКаталогРаспаковки2.Видимость=Истина;
		ЭлементыФормы.ФайлКонфигурации.Верх=47;
		ЭлементыФормы.НадписьИмяФайла1.Верх=47;
		ЭлементыФормы.НадписьКаталогРаспаковки1.Верх=47;
		ЭлементыФормы.НадписьКаталогРаспаковки1.Высота=19;
		Если КаталогДляРаспаковкиКонфигурации="" тогда
			ЭлементыФормы.НадписьКаталогРаспаковки1.Значение="Распаковка производится в каталоге временных файлов";
		ИначеЕсли Файл.Существует() тогда
			ЭлементыФормы.НадписьКаталогРаспаковки1.Значение=Лев(Файл.ПолноеИмя,50)+"...";
			ЭлементыФормы.НадписьКаталогРаспаковки1.Подсказка=Файл.ПолноеИмя;
		КонецЕсли;
		ЭлементыФормы.ФайлОбновления.Верх=69;
		ЭлементыФормы.НадписьИмяФайла.Верх=69;
		ЭлементыФормы.НадписьКаталогРаспаковки.Верх=69;
		ЭлементыФормы.НадписьКаталогРаспаковки.Высота=19;
		Если КаталогДляРаспаковкиОбновления="" тогда
			ЭлементыФормы.НадписьКаталогРаспаковки.Значение="Распаковка производится в каталоге временных файлов";
		ИначеЕсли ФайлВторой.Существует() тогда
			ЭлементыФормы.НадписьКаталогРаспаковки.Значение=Лев(ФайлВторой.ПолноеИмя,50)+"...";
			ЭлементыФормы.НадписьКаталогРаспаковки.Подсказка=ФайлВторой.ПолноеИмя;
		КонецЕсли;
		Если КаталогТретий="" тогда
			ЭлементыФормы.НадписьКаталогРаспаковки2.Значение="Распаковка производится в каталоге временных файлов";
		ИначеЕсли ФайлПоследний.Существует() тогда
			ЭлементыФормы.НадписьКаталогРаспаковки2.Значение=Лев(ФайлПоследний.ПолноеИмя,50)+"...";
			ЭлементыФормы.НадписьКаталогРаспаковки2.Подсказка=ФайлПоследний.ПолноеИмя;
		КонецЕсли;
		ЭлементыФормы.СравнениеМетаданных.Видимость=ложь;
		ЭлементыФормы.Фильтр.Видимость=ложь;
		ЭлементыФормы.Перестроить.Видимость=ложь;
		ЭлементыФормы.Надпись1.Видимость=ложь;
		ЭлементыФормы.ТрехуровневоеСравнение.Видимость=Истина;
		ЭлементыФормы.Надпись2.Видимость=Истина;
		ЭлементыФормы.ФильтрТрехуровневый.Видимость=истина;
		ЭлементыФормы.ПерестроитьТрехуровневое.Видимость=Истина;
		ЭлементыФормы.НастройкаDiff.Видимость=Истина;
	КонецЕсли;
	УправлениеВидимостьюКнопок();
	РежимCfПриИзменении();
	Если РежимСравнения=0 тогда
		ЭлементыФормы.ПанельАнализа.ОтображениеЗакладок=ОтображениеЗакладок.НеИспользовать;
		ЭлементыФормы.ПанельАнализа.ТекущаяСтраница=ЭлементыФормы.ПанельАнализа.Страницы.АнализФайлов;
		ЭлементыФормы.ПанельДляДерева.ОтображениеЗакладок=ОтображениеЗакладок.НеИспользовать;
		ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf.Видимость=ложь;
		ЭлементыФормы.ПанельДляДерева.Страницы.ТретьеДерево.Видимость=Ложь;
		ЭлементыФормы.ПанельДляДерева.ТекущаяСтраница=ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu;
		ЭлементыФормы.РежимCfu.Доступность=Истина;
	Иначе
		ЭлементыФормы.ПанельАнализа.ОтображениеЗакладок=ОтображениеЗакладок.Снизу;
		ЭлементыФормы.ПанельАнализа.ТекущаяСтраница=ЭлементыФормы.ПанельАнализа.Страницы.СравнениеФайлов;
		ЭлементыФормы.ПанельДляДерева.ОтображениеЗакладок=ОтображениеЗакладок.Снизу;
		ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf.Видимость=истина;
		ЭлементыФормы.ПанельДляДерева.ТекущаяСтраница=ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf;
		Если РежимСравнения=2 тогда
			ЭлементыФормы.ПанельДляДерева.Страницы.ТретьеДерево.Видимость=Истина;
			ЭлементыФормы.РежимCfu.Доступность=Ложь;
		Иначе 	
			ЭлементыФормы.ПанельДляДерева.Страницы.ТретьеДерево.Видимость=Ложь;
			ЭлементыФормы.РежимCfu.Доступность=Истина;
		КонецЕсли;
	КонецЕсли;
	ПанельДляДереваПриСменеСтраницы(ЭлементыФормы.ПанельДляДерева, 1)
КонецПроцедуры

Процедура РежимCfПриИзменении()
	
	Если ПодтвердитьПерезаполнение()=Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимВыбораОбъекта=2 тогда
		ЭлементыФормы.Режим3WayDiff.Доступность=Ложь;
	Иначе 	
		ЭлементыФормы.Режим3WayDiff.Доступность=Истина;
	КонецЕсли;
	
	УправлениеЗаголовками();
	
КонецПроцедуры

Процедура СравнениеМетаданныхПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ЕстьИзменения=1 Тогда
		ОформлениеСтроки.ЦветФона = Новый Цвет(225,253,253);
	ИначеЕсли ДанныеСтроки.ЕстьИзменения=2 тогда
		ОформлениеСтроки.Ячейки.СтруктураОбновления.ЦветФона=Новый Цвет(192,220,192);
	ИначеЕсли ДанныеСтроки.ЕстьИзменения=3 тогда
		ОформлениеСтроки.Ячейки.СтруктураКонфигурации.ЦветФона=Новый Цвет(255,228,196);
	КонецЕсли;
КонецПроцедуры

Процедура СравнениеМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если РежимВыбораОбъекта = 4 Тогда
		СравнениеФорм(КаталогДляРаспаковкиКонфигурации,КаталогДляРаспаковкиОбновления,"Форма","ПроизвольнаяФорма","ПроизвольнаяФорма", Ложь);
	ИначеЕсли ВыбраннаяСтрока.ПутьТекОбъектCf<>"" тогда
		ПервыйОбъектДляСравнения=Новый Структура("ВидОбъекта,ПутьОбъекта",ВыбраннаяСтрока.Объект,КаталогДляРаспаковкиКонфигурации+"\"+ВыбраннаяСтрока.ПутьТекОбъектCf);
		ВторойОбъектДляСравнения=Новый Структура("ВидОбъекта,ПутьОбъекта",ВыбраннаяСтрока.Объект,КаталогДляРаспаковкиОбновления+"\"+ВыбраннаяСтрока.ПутьТекОбъектCfu);
		СравнитьОбъекты(ПервыйОбъектДляСравнения,ВторойОбъектДляСравнения)
	ИначеЕсли ВыбраннаяСтрока.ПредставлениеПервогоРеквизита<>"" Тогда	
		СравнениеРеквизитов = ТекстовоеСравнениеВоВременныхФайлах(ВыбраннаяСтрока.ПредставлениеПервогоРеквизита,ВыбраннаяСтрока.ПредставлениеВторогоРеквизита);
		СравнениеРеквизитов.ПоказатьРазличия();
	Иначе Предупреждение("Отсутствует объект для сравнения");
	КонецЕсли;
КонецПроцедуры

Процедура ТрехуровневоеСравнениеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.ИзмененияПервыйВторой=1 тогда
		ОформлениеСтроки.Ячейки.СтруктураПервогоФайла.ЦветФона=Новый Цвет(144,238,144);
		ОформлениеСтроки.Ячейки.СтруктураВторогоФайла.ЦветФона=Новый Цвет(255,236,139);
		Если ДанныеСтроки.ИзмененияПервыйТретий=1 и ДанныеСтроки.ИзмененияВторойТретий=1 Тогда
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(255,127,80);
		ИначеЕсли ДанныеСтроки.ИзмененияПервыйТретий=0 тогда
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(144,238,144);
		ИначеЕсли ДанныеСтроки.ИзмененияВторойТретий=0 Тогда
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(255,236,139);
		Иначе
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(214,192,183);
		КонецЕсли;
	ИначеЕсли ДанныеСтроки.ИзмененияПервыйВторой=3 тогда //первый отсутствует
		ОформлениеСтроки.Ячейки.СтруктураПервогоФайла.ЦветФона=Новый Цвет(214,192,183);
		ОформлениеСтроки.Ячейки.СтруктураВторогоФайла.ЦветФона=Новый Цвет(144,238,144);
		Если ДанныеСтроки.ИзмененияВторойТретий=1 тогда
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(255,236,139);
		ИначеЕсли ДанныеСтроки.ИзмененияВторойТретий=0 тогда 
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(144,238,144);
		Иначе 
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(214,192,183);
		КонецЕсли;	
		
	ИначеЕсли ДанныеСтроки.ИзмененияПервыйВторой=2 тогда   //второй отсутствует
		ОформлениеСтроки.Ячейки.СтруктураПервогоФайла.ЦветФона=Новый Цвет(144,238,144);
		ОформлениеСтроки.Ячейки.СтруктураВторогоФайла.ЦветФона=Новый Цвет(214,192,183);
		Если ДанныеСтроки.ИзмененияПервыйТретий=1 тогда
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(255,236,139);
		ИначеЕсли ДанныеСтроки.ИзмененияПервыйТретий=0 тогда
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(144,238,144);
		Иначе
			ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(214,192,183);
		КонецЕсли;	
	Иначе
		Если ДанныеСтроки.ИзмененияПервыйВторой=ДанныеСтроки.ИзмененияПервыйТретий и ДанныеСтроки.ИзмененияПервыйТретий=ДанныеСтроки.ИзмененияВторойТретий тогда
			
		Иначе
			ОформлениеСтроки.Ячейки.СтруктураПервогоФайла.ЦветФона=Новый Цвет(144,238,144);
			ОформлениеСтроки.Ячейки.СтруктураВторогоФайла.ЦветФона=Новый Цвет(144,238,144);
			Если ДанныеСтроки.ИзмененияПервыйТретий=1 тогда
				ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(255,236,139);
			ИначеЕсли ДанныеСтроки.ИзмененияПервыйТретий=2 тогда
				ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(214,192,183);
			Иначе
				ОформлениеСтроки.Ячейки.СтруктураТретьегоФайла.ЦветФона=Новый Цвет(214,192,183);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ТрехуровневоеСравнениеВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если ВыборDiff=Неопределено тогда
		Предупреждение("Сначала выберите внешнюю программу для трехуровневого сравнения");
		Возврат;
	КонецЕсли;
	
	Если ВыбраннаяСтрока.ПутьТекОбъектПервый<>"" тогда
		ФайлСтроки=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+ВыбраннаяСтрока.ПутьТекОбъектПервый);
		Если ФайлСтроки.ЭтоФайл() тогда
			ПервыйФайлСравнения=КаталогДляРаспаковкиКонфигурации+"\"+ВыбраннаяСтрока.ПутьТекОбъектПервый;
			ВторойФайлСравнения=КаталогДляРаспаковкиОбновления+"\"+ВыбраннаяСтрока.ПутьТекОбъектВторой;
			ТретийФайлСравнения=КаталогТретий+"\"+ВыбраннаяСтрока.ПутьТекОбъектТретий;
		Иначе
			Если (ВыбраннаяСтрока.КартинкаПервогоФайла=43)ИЛИ (ВыбраннаяСтрока.КартинкаПервогоФайла=41) Тогда
				модульОбъекта="image";
			ИначеЕсли (ВыбраннаяСтрока.КартинкаПервогоФайла=115) Тогда
				МодульОбъекта="module";
			Иначе МодульОбъекта="text";
			КонецЕсли;
			ПервыйФайлСравнения=КаталогДляРаспаковкиКонфигурации+"\"+ВыбраннаяСтрока.ПутьТекОбъектПервый+"\"+МодульОбъекта;
			ВторойФайлСравнения=КаталогДляРаспаковкиОбновления+"\"+ВыбраннаяСтрока.ПутьТекОбъектВторой+"\"+МодульОбъекта;
			ТретийФайлСравнения=КаталогТретий+"\"+ВыбраннаяСтрока.ПутьТекОбъектТретий+"\"+МодульОбъекта;
		КонецЕсли;
		СтрокаЗапуска = ""+ВыборDiff.СтрокаЗапуска;
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "синоним%1", ВыбраннаяСтрока.СтруктураПервогоФайла);
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "синоним%2", ВыбраннаяСтрока.СтруктураВторогоФайла);
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "синоним%3", ВыбраннаяСтрока.СтруктураТретьегоФайла);
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "%1", ПервыйФайлСравнения); СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "%2", ВторойФайлСравнения); СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "%3", ТретийФайлСравнения);
		
		Попытка
			ЗапуститьПриложение(СтрокаЗапуска);
		Исключение
		КонецПопытки;
	ИначеЕсли РежимВыбораОбъекта=4  Тогда 
		СтрокаЗапуска = ""+ВыборDiff.СтрокаЗапуска;
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "синоним%1", "Форма");
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "синоним%2", "Форма");
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "синоним%3", "Форма");
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "%1", КаталогДляРаспаковкиКонфигурации+"\module"); СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "%2", КаталогДляРаспаковкиОбновления+"\module"); СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "%3", КаталогТретий+"\module");
		Попытка
			ЗапуститьПриложение(СтрокаЗапуска);
		Исключение
		КонецПопытки;
	Иначе
		Предупреждение("Отсутствует объект для сравнения");
	КонецЕсли;
КонецПроцедуры

Процедура ПанельДляДереваПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ЭлементыФормы.ПанельДляДерева.ТекущаяСтраница=ЭлементыФормы.ПанельДляДерева.Страницы[0] Тогда
		ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий=ЭлементыФормы.ДеревоCf;
	ИначеЕсли ЭлементыФормы.ПанельДляДерева.ТекущаяСтраница=ЭлементыФормы.ПанельДляДерева.Страницы[1] Тогда
		ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий=ЭлементыФормы.ДеревоМетаданных;
	ИначеЕсли ЭлементыФормы.ПанельДляДерева.ТекущаяСтраница=ЭлементыФормы.ПанельДляДерева.Страницы[2] Тогда
		ЭлементыФормы.УправляющаяКоманднаяПанель.ИсточникДействий=ЭлементыФормы.ТретьеДерево;
	КонецЕсли;
	
КонецПроцедуры

//==============================================================================================================================================
// ПРОЦЕДУРЫ ДЛЯ ВЫВОДА РАСПАКОВКИ И ВЫВОДА РЕЗУЛЬТАТА
//==============================================================================================================================================

Процедура РаспаковкаОбновления()
	ФайлДляРаспаковки = Новый Файл(ФайлОбновления);
	Если КаталогДляРаспаковкиОбновления="" тогда
		КаталогДляРаспаковкиОбновления=КаталогВременныхФайлов()+ФайлДляРаспаковки.Имя+".und";
	ИначеЕсли		НайтиФайлы(КаталогДляРаспаковкиОбновления,"*.*").Количество()>0 тогда
		Предупреждение("Указанный каталог не пустой. В каталоге будет создан подкаталог"+Символы.ПС+КаталогДляРаспаковкиОбновления+"\"+ФайлДляРаспаковки.Имя+".und");
		КаталогДляРаспаковкиОбновления=КаталогДляРаспаковкиОбновления+"\"+ФайлДляРаспаковки.Имя+".und";
	КонецЕсли;
	Если ФайлПрограммыРаспаковки=Неопределено тогда
		Инициализация();
	КонецЕсли;
	// распакуем файл
	Состояние("Чтение файла обновления...");
	СтрокаЗапуска = """"+ФайлПрограммыРаспаковки.ПолноеИмя+""" -inflate """+ФайлОбновления+""" """+ФайлДляРаспаковки.Путь+"tempfile""";
	WshShell.Run(СтрокаЗапуска, 0, Истина);
	СтрокаЗапуска = """"+ФайлПрограммыРаспаковки.ПолноеИмя+""" -parse """+ФайлДляРаспаковки.Путь+"tempfile"" """+КаталогДляРаспаковкиОбновления+"""";
	WshShell.Run(СтрокаЗапуска, 0, Истина);
	// удалим временный файл промежуточного преобразования
	УдалитьФайлы(ФайлДляРаспаковки.Путь+"tempfile");
КонецПроцедуры

Процедура Распаковка(ФайлРаспаковки,КаталогРаспаковки)
	ФайлДляРаспаковки=Новый файл(ФайлРаспаковки);
	Если КаталогРаспаковки="" тогда
		ИнтересующийКаталог=Новый файл(КаталогВременныхФайлов()+ФайлДляРаспаковки.Имя+".und");
		Если  ИнтересующийКаталог.Существует() тогда
			ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяДата()-Дата('00010101'));
			КаталогРаспаковки=КаталогВременныхФайлов()+ФайлДляРаспаковки.Имя+Строка(ГСЧ.СлучайноеЧисло(0, 1000)) +".und";
		Иначе
			КаталогРаспаковки=КаталогВременныхФайлов()+ФайлДляРаспаковки.Имя+".und";
		КонецЕсли;
	ИначеЕсли		НайтиФайлы(КаталогРаспаковки,"*.*").Количество()>0 тогда
		Предупреждение("Указанный каталог не пустой. В каталоге будет создан подкаталог"+Символы.ПС+КаталогРаспаковки+"\"+ФайлДляРаспаковки.Имя+".und");
		КаталогРаспаковки=КаталогРаспаковки+"\"+ФайлДляРаспаковки.Имя+".und";
	КонецЕсли;
	Если ФайлПрограммыРаспаковки=Неопределено тогда
		Инициализация();
	КонецЕсли;
	
	// распакуем файл
	Состояние("Чтение файла...");
	СтрокаЗапуска = """"+ФайлПрограммыРаспаковки.ПолноеИмя+""" -parse """+ФайлДляРаспаковки.ПолноеИмя+""" """+КаталогРаспаковки+"""";
	WshShell.Run(СтрокаЗапуска, 0, Истина);
	
КонецПроцедуры

Процедура ВыводРезультата(Режим)
	//вывести результат в дерево объектов
	Файл=Новый файл(КаталогДляРаспаковкиОбновления+"\UpdateInfo.inf");
	Если Не Файл.Существует() тогда
		Предупреждение("Выбранный файл не является файлом обновления");
		Возврат;                                            
	КонецЕсли;
	Текст=Новый ТекстовыйДокумент;
	Текст.Прочитать(Файл.ПолноеИмя);
	ТекстСтрокой=Текст.ПолучитьТекст();
	СтрокаСВерсией=СтрПолучитьСтроку(ТекстСтрокой,СтрЧислоСтрок(ТекстСтрокой));
	ВерсияСтрока=Сред(СтрокаСВерсией,2,3);
	Если ВерсияСтрока="6,0" Тогда 
		Версия="v8_0";
	ИначеЕсли ВерсияСтрока="106" Тогда 
		Версия="v8_1";
	Иначе 
		Версия="v8_2";
	КонецЕсли;
	ОбъектОбновления=ОпределитьОбъектОбновления();
	ФайлОписанияКонфигурации=Лев(Прав(СтрокаСВерсией,37),36);
	ФайлОписания=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+ФайлОписанияКонфигурации);
	ТекстОписания=Новый ТекстовыйДокумент;
	ТекстОписания.Прочитать(ФайлОписания.ПолноеИмя);
	ОписаниеКонфигурацииСтрокой=ТекстОписания.ПолучитьТекст();
	м=1;
	НужноеСоответствие=СоответствиеСтрокВторогоДерева;
	ПостроитьДеревоОбновляемойКонфигурации(ФайлОписанияКонфигурации,ОбъектОбновления,м,Режим,ФайлОписания.Путь,"Новый");
	ПостроитьДеревоОбновляемойКонфигурацииНов(м,Режим,ОписаниеКонфигурацииСтрокой,КаталогДляРаспаковкиОбновления);
	ЭлементыФормы.ДеревоМетаданных.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
	Попытка
		ЭлементыФормы.ДеревоМетаданных.ТекущаяСтрока=ЭлементыФормы.ДеревоМетаданных.Значение.Строки.Найти(ОбъектОбновления,"Наименование",Истина);	
		Строка=ЭлементыФормы.ДеревоМетаданных.ТекущаяСтрока;
		ЭлементыФормы.ДеревоМетаданных.Развернуть(Строка);
		ЭлементыФормы.ДеревоМетаданных.ВыделенныеСтроки.Очистить();
		ЭлементыФормы.ДеревоМетаданных.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
	Исключение;
	КонецПопытки;
	ЭлементыФормы.ДеревоМетаданных.ОбновитьСтроки();
	Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() Тогда
		ЗаполнитьДеревоФайлов(КаталогДляРаспаковкиОбновления);
	КонецЕсли;
	Макет=ЭтотОбъект.ПолучитьМакет("МакетСтруктурыКонфигурации");
	ОбластьМакета=Макет.Область("СоответствиеИдентификаторов");
	НомерСтроки=ОбластьМакета.Верх;
	Пока НомерСтроки<=ОбластьМакета.Низ Цикл
		СоответствиеИдентификаторов.Вставить(СокрЛП(Макет.Область(НомерСтроки,1).Текст),СокрЛП(Макет.Область(НомерСтроки,3).Текст));
		НомерСтроки=НомерСтроки+1
	КонецЦикла;
КонецПроцедуры

Процедура ВыводРезультатаДляCfEpf(ФайлРаспаковки,КаталогРаспаковки)
	
	Если РежимСравнения=0 Тогда
		НужноеСоответствие=СоответствиеСтрокПервогоДерева;
	Иначе
		Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации Тогда
			НужноеСоответствие=СоответствиеСтрокПервогоДерева;
		ИначеЕсли КаталогРаспаковки=КаталогДляРаспаковкиОбновления Тогда
			НужноеСоответствие=СоответствиеСтрокВторогоДерева;
		Иначе
			НужноеСоответствие=СоответствиеСтрокТретьегоДерева;
		КонецЕсли;
	КонецЕсли;
	
	ТекстРут = Новый ТекстовыйДокумент;
	ФайлРут=НайтиФайлы(КаталогРаспаковки+"\root");
	Если ФайлРут.Количество()=0 Тогда
		Попытка
			ТекстРут.Прочитать(КаталогРаспаковки + "\metadata\root");
			КаталогМетаданных=КаталогРаспаковки+"\metadata";
		Исключение
			Предупреждение("Результат распаковки не является результатом распаковки для файла "+?(РежимВыбораОбъекта=1,"обработки",?(РежимВыбораОбъекта=3,"отчета","конфигурации")));
			СоответствиеИдентификаторов.Вставить(0,0);
			Возврат;
		КонецПопытки;
	Иначе КаталогМетаданных=КаталогРаспаковки;	
	КонецЕсли;
	ТекстРут.Прочитать(КаталогМетаданных+"\root");
	Строка = ТекстРут.ПолучитьСтроку(1);
	Строка = Сред(Строка, Найти(Строка, ",") + 1);
	Если Найти(Строка, ",") > 0 Тогда
		Строка = Лев(Строка, Найти(Строка, ",") - 1);
	Иначе
		Строка = Лев(Строка, СтрДлина(Строка) - 1);
	КонецЕсли; 
	ИмяФайлаОписания = Строка;
	ТекстОписания = Новый ТекстовыйДокумент();
	ТекстОписания.Прочитать(КаталогМетаданных + "\" + ИмяФайлаОписания);
	Текст=ТекстОписания.ПолучитьТекст();
	Если СтрЧислоВхождений(Текст,"9cd510ce-abfc-11d4-9434-004095e12fc7")=0 тогда
		Если РежимВыбораОбъекта=0 или РежимВыбораОбъекта=2 тогда
			Предупреждение("Результат распаковки не является результатом распаковки для файла конфигурации");
			СоответствиеИдентификаторов.Вставить(0,0);
			Возврат;
		КонецЕсли;
	Иначе
		Если РежимВыбораОбъекта=1 или РежимВыбораОбъекта=3 тогда
			Предупреждение("Результат распаковки не является результатом распаковки для файла "+?(РежимВыбораОбъекта=1,"обработки","отчета"));
			СоответствиеИдентификаторов.Вставить(0,0);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТекстВерсия= Новый ТекстовыйДокумент;
	ТекстВерсия.Прочитать(КаталогРаспаковки+"\version");
	ВерсияСтрока=Сред(ТекстВерсия.ПолучитьТекст(),4,3);
	Если ВерсияСтрока="6,0" Тогда  
		Версия="v8_0";
	ИначеЕсли ВерсияСтрока="106" Тогда   
		Версия="v8_1";
	Иначе   
		Версия="v8_2";
	КонецЕсли;
	
	МассивЗначений=Новый Массив(2);
	ъ=1;
	ПолучитьДанныеМассиваЗначений(Текст,МассивЗначений);
	ИдентификаторМодулейПриложения=МассивЗначений[0];
	НаименованиеКонфигурации=МассивЗначений[1];
	ВывестиИнформациюНаПанель(КаталогРаспаковки,?(РежимВыбораОбъекта=1,"Внешняя обработка "+НаименованиеКонфигурации,?(РежимВыбораОбъекта=3,"Внешний отчет "+НаименованиеКонфигурации,"Конфигурация "+НаименованиеКонфигурации)));
	Если РежимВыбораОбъекта<>1 и РежимВыбораОбъекта<>3 тогда
		ТекстVersions=Новый ТекстовыйДокумент;
		ТекстVersions.Прочитать(КаталогРаспаковки+"\versions");
		ТекстVersions=ТекстVersions.ПолучитьТекст();
		РегулярноеВыражениеV=Новый COMОбъект("VBScript.RegExp");
		РегулярноеВыражениеV.Multiline=истина;
		РегулярноеВыражениеV.IgnoreCase=истина;
		РегулярноеВыражениеV.Pattern=""""",(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})";
		РезультатVersions=РегулярноеВыражениеV.Execute(ТекстVersions);
		Для Каждого НайденныйРезультат из РезультатVersions Цикл 
			ИдентификаторВерсии=НайденныйРезультат.SubMatches(0);
		КонецЦикла;
		Если ИдентификаторВерсии<>Неопределено тогда
			Если ИспользоватьКэш=1 Тогда
				КаталогДляЗаписи=Новый Файл(КаталогВременныхФайлов()+"\VersionTree");
				ПутьКаталогаДляЗаписи=КаталогДляЗаписи.ПолноеИмя;
			ИначеЕсли ИспользоватьКэш=2 Тогда	
				КаталогДляЗаписи=Новый Файл(КаталогРаспаковки);
				Если КаталогДляЗаписи.Путь=КаталогВременныхФайлов() Тогда
					КаталогДляЗаписи=Новый Файл(ФайлРаспаковки);
				КонецЕсли;
				ПутьКаталогаДляЗаписи=КаталогДляЗаписи.Путь;
				КаталогДляЗаписи=Новый Файл(ПутьКаталогаДляЗаписи);
			КонецЕсли;
			
			Если ИспользоватьКэш<>0 Тогда
				
				ФайлДереваВерсии=Новый файл(ПутьКаталогаДляЗаписи+"\"+ИдентификаторВерсии+?(РежимРазбора=1,"hard","light")+".tree");
				Если ФайлДереваВерсии.Существует() тогда
					Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации тогда
						ДеревоCf=ЗначениеИзФайла(ФайлДереваВерсии.ПолноеИмя);
						ЭлементыФормы.ДеревоCf.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
						Попытка
							ЭлементыФормы.ДеревоCf.ТекущаяСтрока=ЭлементыФормы.ДеревоCf.Значение.Строки[0];	
							Строка=ЭлементыФормы.ДеревоCf.ТекущаяСтрока;
							ЭлементыФормы.ДеревоCf.Развернуть(Строка);
							ЭлементыФормы.ДеревоCf.ВыделенныеСтроки.Очистить();
						Исключение;
						КонецПопытки;
						ЭлементыФормы.ДеревоCf.ОбновитьСтроки();
						ЭлементыФормы.ДеревоCf.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
					ИначеЕсли КаталогРаспаковки=КаталогДляРаспаковкиОбновления тогда 
						ДеревоМетаданных=ЗначениеИзФайла(ФайлДереваВерсии.ПолноеИмя);
						ЭлементыФормы.ДеревоМетаданных.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
						Попытка
							ЭлементыФормы.ДеревоМетаданных.ТекущаяСтрока=ЭлементыФормы.ДеревоМетаданных.Значение.Строки[0];	
							Строка=ЭлементыФормы.ДеревоМетаданных.ТекущаяСтрока;
							ЭлементыФормы.ДеревоМетаданных.Развернуть(Строка);
							ЭлементыФормы.ДеревоМетаданных.ВыделенныеСтроки.Очистить();
						Исключение;
						КонецПопытки;
						ЭлементыФормы.ДеревоМетаданных.ОбновитьСтроки();
						ЭлементыФормы.ДеревоМетаданных.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
					Иначе
						ТретьеДерево=ЗначениеИзФайла(ФайлДереваВерсии.ПолноеИмя);
						ЭлементыФормы.ТретьеДерево.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
						Попытка
							ЭлементыФормы.ТретьеДерево.ТекущаяСтрока=ЭлементыФормы.ТретьеДерево.Значение.Строки[0];	
							Строка=ЭлементыФормы.ТретьеДерево.ТекущаяСтрока;
							ЭлементыФормы.ТретьеДерево.Развернуть(Строка);
							ЭлементыФормы.ТретьеДерево.ВыделенныеСтроки.Очистить();
						Исключение;
						КонецПопытки;
						ЭлементыФормы.ТретьеДерево.ОбновитьСтроки();
						ЭлементыФормы.ТретьеДерево.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
					КонецЕсли;
					Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() Тогда
						ЗаполнитьДеревоФайлов(КаталогРаспаковки);
					КонецЕсли;
					Макет=ЭтотОбъект.ПолучитьМакет("МакетСтруктурыКонфигурации");
					ОбластьМакета=Макет.Область("СоответствиеИдентификаторов");
					НомерСтроки=ОбластьМакета.Верх;
					Пока НомерСтроки<=ОбластьМакета.Низ Цикл
						СоответствиеИдентификаторов.Вставить(СокрЛП(Макет.Область(НомерСтроки,1).Текст),СокрЛП(Макет.Область(НомерСтроки,3).Текст));
						НомерСтроки=НомерСтроки+1
					КонецЦикла;
					ЗаполнитьСоответствиеИдентификаторов(КаталогРаспаковки);
					
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации тогда
		СтрокаКонфигурацииВДереве=ДеревоCf.Строки.Добавить();
	ИначеЕсли КаталогРаспаковки=КаталогДляРаспаковкиОбновления тогда 
		СтрокаКонфигурацииВДереве=ДеревоМетаданных.Строки.Добавить();
	Иначе
		СтрокаКонфигурацииВДереве=ТретьеДерево.Строки.Добавить();
	КонецЕсли;
	СтрокаКонфигурацииВДереве.Идентификатор=ИмяФайлаОписания;
	//СтрокаКонфигурацииВДереве.Объект="О";
	СтрокаКонфигурацииВДереве.ПутьТекОбъект=ИмяФайлаОписания;
	СтрокаКонфигурацииВДереве.Наименование=НаименованиеКонфигурации;
	Если РежимВыбораОбъекта<>1 и РежимВыбораОбъекта<>3 тогда
		СтрокаКонфигурацииВДереве.ВидМетаданных="Конфигурация";
		СтрокаКонфигурацииВДереве.ИндексКартинки=0;
		
		СтрокаКонфигурацииВДереве.Синоним="Конфигурация."+НаименованиеКонфигурации;
		СоответствиеИдентификаторов.Вставить(ИмяФайлаОписания,СтрокаКонфигурацииВДереве.Синоним);
		НужноеСоответствие.Вставить(ИмяФайлаОписания,СтрокаКонфигурацииВДереве);
		КаталогФайла=НайтиФайлы(КаталогРаспаковки+"\", ИмяФайлаОписания+".*");
		Для к=0 по КаталогФайла.Количество()-1 цикл
			ТекКаталог=КаталогФайла.Получить(к);
			Если ТекКаталог.Расширение<>"" Тогда
				ПодчиненнаяСтрока=СтрокаКонфигурацииВДереве.Строки.Добавить();
				ПодчиненнаяСтрока.Наименование="Конфигурация поставщика(файл образуется при включении возможности редактирования)";
				ПодчиненнаяСтрока.Синоним="КонфигурацияПоставщика";
				ПодчиненнаяСтрока.ПутьТекОбъект=ТекКаталог.Имя;
				ПодчиненнаяСтрока.ИндексКартинки=0;
				ъ=ъ+1;
			КонецЕсли;
			
		КонецЦикла;
		ПостроитьДеревоОбновляемойКонфигурации(ИмяФайлаОписания,НаименованиеКонфигурации,ъ,"ТолькоДерево",КаталогРаспаковки,"НеОбновлять");
		Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации тогда
			СтрокаМодулейПриложения=ДеревоCf.Строки.Найти("Модули задачи","Наименование", истина);
		ИначеЕсли КаталогРаспаковки=КаталогДляРаспаковкиОбновления тогда 
			СтрокаМодулейПриложения=ДеревоМетаданных.Строки.Найти("Модули задачи","Наименование", истина);
		Иначе
			СтрокаМодулейПриложения=ТретьеДерево.Строки.Найти("Модули задачи","Наименование", истина);
		КонецЕсли;
		СтрокаМодулейПриложения.Идентификатор=ИдентификаторМодулейПриложения;
		//СтрокаМодулейПриложения.ПутьТекОбъект=ИдентификаторМодулейПриложения;
		ы=ъ;
		КаталогФайла=НайтиФайлы(КаталогРаспаковки+"\", ИдентификаторМодулейПриложения+".*");
		Для к=0 по КаталогФайла.Количество()-1 цикл
			ТекКаталог=КаталогФайла.Получить(к);
			Если ТекКаталог.Расширение="" Тогда
				Продолжить;
			КонецЕсли;
			ОбработатьФайлПоРасширению(ТекКаталог,СтрокаМодулейПриложения,ъ,"ТолькоДерево",ы);
		КонецЦикла;
		ПостроитьДеревоОбновляемойКонфигурацииНов(ъ,"ТолькоДерево",Текст,КаталогРаспаковки);
	Иначе
		ы=ъ;
		Если РежимВыбораОбъекта=1 тогда
			СтрокаКонфигурацииВДереве.ВидМетаданных="ВнешняяОбработка";
			СтрокаКонфигурацииВДереве.ИндексКартинки=64;
			СтрокаКонфигурацииВДереве.Синоним="ВнешняяОбработка";
		Иначе
			СтрокаКонфигурацииВДереве.ВидМетаданных="ВнешнийОтчет";
			СтрокаКонфигурацииВДереве.ИндексКартинки=63;
			СтрокаКонфигурацииВДереве.Синоним="ВнешнийОтчет";
		КонецЕсли;
		СоответствиеИдентификаторов.Вставить(ИмяФайлаОписания,СтрокаКонфигурацииВДереве.Синоним);
		КаталогФайла=НайтиФайлы(КаталогРаспаковки+"\", ИдентификаторМодулейПриложения+".*");
		Для к=0 по КаталогФайла.Количество()-1 цикл
			ТекКаталог=КаталогФайла.Получить(к);
			Если ТекКаталог.Расширение="" Тогда
				Продолжить;
			КонецЕсли;
			ОбработатьФайлПоРасширению(ТекКаталог,СтрокаКонфигурацииВДереве,ъ,"ТолькоДерево",ы);
		КонецЦикла;
		ч=0;
		МассивFM=Новый Массив;
		Если РежимРазбора<>0 тогда
			Если РежимВыбораОбъекта=1 тогда
				МассивFM.Добавить(Новый структура("Название,Поле,Индекс,ИндексПодч,Объект,Идентификатор","Реквизиты","Реквизит","77","80","РО","ec6bb5e5-b7a8-4d75-bec9-658107a699cf"));
				МассивFM.Добавить(Новый структура("Название,Поле,Индекс,ИндексПодч,Объект,Идентификатор","Табличные части","ТабличнаяЧасть","78","79","РО","2bcef0d1-0981-11d6-b9b8-0050bae0a95d"));
			Иначе
				МассивFM.Добавить(Новый структура("Название,Поле,Индекс,ИндексПодч,Объект,Идентификатор","Реквизиты","Реквизит","77","80","РО","7e7123e0-29e2-11d6-a3c7-0050bae0a776"));
				МассивFM.Добавить(Новый структура("Название,Поле,Индекс,ИндексПодч,Объект,Идентификатор","Табличные части","ТабличнаяЧасть","78","79","РО","b077d780-29e2-11d6-a3c7-0050bae0a776"));
			КонецЕсли;
		КонецЕсли;
		Если РежимВыбораОбъекта=1 тогда
			МассивFM.Добавить(Новый структура("Название,Поле,Индекс,ИндексПодч,Объект,Идентификатор","Формы","Форма","16","51","Ф","d5b0e5ed-256d-401c-9c36-f630cafd8a62"));
		Иначе
			МассивFM.Добавить(Новый структура("Название,Поле,Индекс,ИндексПодч,Объект,Идентификатор","Формы","Форма","16","51","Ф","a3b368c0-29e2-11d6-a3c7-0050bae0a776"));
		КонецЕсли;
		МассивFM.Добавить(Новый структура("Название,Поле,Индекс,ИндексПодч,Объект,Идентификатор","Макеты","Макет","18","53","М","3daea016-69b7-4ed4-9453-127911372fe6"));
		Для ж=0 по МассивFM.ВГраница() цикл
			ОбъектСтроки=МассивFM[ж]["Объект"];
			ВидОбъектаСтроки=МассивFM[ж]["Поле"];
			СтрокаФорм=СтрокаКонфигурацииВДереве.Строки.Добавить();
			СтрокаФорм.Наименование=МассивFM[ж]["Название"];
			СтрокаФорм.Идентификатор=МассивFM[ж]["Идентификатор"];
			СтрокаФорм.ВидМетаданных=ВидОбъектаСтроки;
			СтрокаФорм.ИндексКартинки=МассивFM[ж]["Индекс"];
			СтрокаФорм.Синоним=МассивFM[ж]["Название"];
			СтрокаФорм.ИндексКартинкиПодчиненных=МассивFM[ж]["ИндексПодч"];
			СтрокаФорм.Объект=ОбъектСтроки;
			Если ОбъектСтроки<>"РО" тогда
				
				РегулярноеВыражениеДляФМ.Pattern=СтрокаФорм.Идентификатор+",\d+((,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12}))*)";
			Иначе  РегулярноеВыражениеДляФМ.Pattern=СтрокаФорм.Идентификатор+НайтиПаттерн(ВидОбъектаСтроки,?(РежимВыбораОбъекта=1,"Обработка","Отчет"));
			КонецЕсли;
			MatchesFM=РегулярноеВыражениеДляФМ.Execute(Текст);
			Если   MatchesFM.Count=0 тогда
				Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации тогда
					ДеревоCf.Строки.Очистить();
				ИначеЕсли КаталогРаспаковки=КаталогДляРаспаковкиОбновления тогда 
					ДеревоМетаданных.Строки.Очистить();
				Иначе
					ТретьеДерево.Строки.Очистить();
				КонецЕсли;
				Предупреждение("Результат распаковки не является результатом распаковки для файла "+?(РежимВыбораОбъекта=1,"обработки","отчета"));
				СоответствиеИдентификаторов.Вставить(0,0);
				Возврат;	
			Иначе
				Для каждого MatchFM Из MatchesFM Цикл
					ТекстПараметра=MatchFM.SubMatches(0);
				КонецЦикла;
				Если MatchFM.SubMatches(1)<>Неопределено и ОбъектСтроки<>"РО" тогда
					ЗаполнитьФМ(ъ,ТекстПараметра,СтрокаФорм,"ТолькоДерево",ч,КаталогРаспаковки);
				ИначеЕсли MatchFM.SubMatches(1)<>Неопределено тогда
					ЗаполнитьРО(ъ,ТекстПараметра,СтрокаФорм,"ТолькоДерево",ч,КаталогРаспаковки,ВидОбъектаСтроки,?(РежимВыбораОбъекта=1,"Обработка","Отчет"));
				Иначе СтрокаФорм.Родитель.Строки.Удалить(СтрокаФорм);	
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		СтрокаСсылок=СтрПолучитьСтроку(Текст,5);
		СсылкиОбъектов=Сред(СтрокаСсылок,Найти(СтрокаСсылок,",")+1);
		ПозицияЗапятой=Найти(СсылкиОбъектов,",");
		Если СтрДлина(СсылкиОбъектов)>=36 Тогда
			СсылкиОбъектовПС=СтрЗаменить(СсылкиОбъектов,",",Символы.ПС);
			КоличествоСсылок=СтрЧислоСтрок(СсылкиОбъектовПС);
			Для НомерСсылки=1 по КоличествоСсылок Цикл
				СсылкаОбъекта=СтрПолучитьСтроку(СсылкиОбъектовПС,НомерСсылки);
				СоответствиеИдентификаторов.Вставить(СсылкаОбъекта, СтрокаКонфигурацииВДереве.ВидМетаданных+"Ссылка"+НомерСсылки+"."+СтрокаКонфигурацииВДереве.Наименование);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации тогда
		ЭлементыФормы.ДеревоCf.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
		Попытка
			ЭлементыФормы.ДеревоCf.ТекущаяСтрока=ЭлементыФормы.ДеревоCf.Значение.Строки.Найти(НаименованиеКонфигурации,"Наименование",Истина);	
			Строка=ЭлементыФормы.ДеревоCf.ТекущаяСтрока;
			ЭлементыФормы.ДеревоCf.Развернуть(Строка);
			ЭлементыФормы.ДеревоCf.ВыделенныеСтроки.Очистить();
		Исключение;
		КонецПопытки;
		ЭлементыФормы.ДеревоCf.ОбновитьСтроки();
		ЭлементыФормы.ДеревоCf.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
	ИначеЕсли КаталогРаспаковки=КаталогДляРаспаковкиОбновления тогда
		ЭлементыФормы.ДеревоМетаданных.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
		Попытка
			ЭлементыФормы.ДеревоМетаданных.ТекущаяСтрока=ЭлементыФормы.ДеревоМетаданных.Значение.Строки.Найти(НаименованиеКонфигурации,"Наименование",Истина);	
			Строка=ЭлементыФормы.ДеревоМетаданных.ТекущаяСтрока;
			ЭлементыФормы.ДеревоМетаданных.Развернуть(Строка);
			ЭлементыФормы.ДеревоМетаданных.ВыделенныеСтроки.Очистить();
		Исключение;
		КонецПопытки;
		ЭлементыФормы.ДеревоМетаданных.ОбновитьСтроки();
		ЭлементыФормы.ДеревоМетаданных.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
	Иначе
		ЭлементыФормы.ТретьеДерево.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
		Попытка
			ЭлементыФормы.ТретьеДерево.ТекущаяСтрока=ЭлементыФормы.ТретьеДерево.Значение.Строки.Найти(НаименованиеКонфигурации,"Наименование",Истина);	
			Строка=ЭлементыФормы.ТретьеДерево.ТекущаяСтрока;
			ЭлементыФормы.ТретьеДерево.Развернуть(Строка);
			ЭлементыФормы.ТретьеДерево.ВыделенныеСтроки.Очистить();
		Исключение;
		КонецПопытки;
		ЭлементыФормы.ТретьеДерево.ОбновитьСтроки();
		ЭлементыФормы.ТретьеДерево.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
	КонецЕсли;
	СтрокаОтчетаОбАнализе="";
	Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() Тогда
		ЗаполнитьДеревоФайлов(КаталогРаспаковки);
	КонецЕсли;
	Макет=ЭтотОбъект.ПолучитьМакет("МакетСтруктурыКонфигурации");
	ОбластьМакета=Макет.Область("СоответствиеИдентификаторов");
	НомерСтроки=ОбластьМакета.Верх;
	Пока НомерСтроки<=ОбластьМакета.Низ Цикл
		СоответствиеИдентификаторов.Вставить(СокрЛП(Макет.Область(НомерСтроки,1).Текст),СокрЛП(Макет.Область(НомерСтроки,3).Текст));
		НомерСтроки=НомерСтроки+1
	КонецЦикла;
	Если РежимВыбораОбъекта<>1 и РежимВыбораОбъекта<>3 тогда
		
		Если ИдентификаторВерсии<>Неопределено тогда
			Если ИспользоватьКэш=1 Тогда
				КаталогДляЗаписи=Новый Файл(КаталогВременныхФайлов()+"\VersionTree");
				ПутьКаталогаДляЗаписи=КаталогДляЗаписи.ПолноеИмя;
			ИначеЕсли ИспользоватьКэш=2 Тогда	
				КаталогДляЗаписи=Новый Файл(КаталогРаспаковки);
				Если КаталогДляЗаписи.Путь=КаталогВременныхФайлов() Тогда
					КаталогДляЗаписи=Новый Файл(ФайлРаспаковки);
				КонецЕсли;
				ПутьКаталогаДляЗаписи=КаталогДляЗаписи.Путь;
				КаталогДляЗаписи=Новый Файл(ПутьКаталогаДляЗаписи);
			КонецЕсли;
			
			Если ИспользоватьКэш<>0 Тогда
				
				Если НЕ КаталогДляЗаписи.Существует() тогда
					СоздатьКаталог(ПутьКаталогаДляЗаписи);
				КонецЕсли;
				
				Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации тогда
					ДеревоСохранено=ЗначениеВФайл(ПутьКаталогаДляЗаписи+"\"+ИдентификаторВерсии+?(РежимРазбора=1,"hard","light")+".tree",ДеревоCf);
				ИначеЕсли КаталогРаспаковки=КаталогДляРаспаковкиОбновления тогда
					ДеревоСохранено=ЗначениеВФайл(ПутьКаталогаДляЗаписи+"\"+ИдентификаторВерсии+?(РежимРазбора=1,"hard","light")+".tree",ДеревоМетаданных);
				Иначе
					ДеревоСохранено=ЗначениеВФайл(ПутьКаталогаДляЗаписи+"\"+ИдентификаторВерсии+?(РежимРазбора=1,"hard","light")+".tree",ТретьеДерево);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыводРезультатаДляSSF(ФайлРаспаковки,КаталогРаспаковки)
	ФайлForm=НайтиФайлы(КаталогРаспаковки+"\form");
	Если ФайлForm.Количество()=0 Тогда
		Предупреждение("Результат распаковки не является результатом распаковки для файла форм");
		СоответствиеИдентификаторов.Вставить(0,0);
		Возврат;
	КонецЕсли;
	Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации тогда
		СтрокаКонфигурацииВДереве=ДеревоCf.Строки.Добавить();
		ЭлементыФормы.ДеревоCf.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
	ИначеЕсли КаталогРаспаковки=КаталогДляРаспаковкиОбновления тогда 
		СтрокаКонфигурацииВДереве=ДеревоМетаданных.Строки.Добавить();
		ЭлементыФормы.ДеревоМетаданных.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
	Иначе
		СтрокаКонфигурацииВДереве=ТретьеДерево.Строки.Добавить();
		ЭлементыФормы.ТретьеДерево.КонтекстноеМеню=ЭлементыФормы.КомандыСравнения;
	КонецЕсли;
	//СтрокаКонфигурацииВДереве.Идентификатор=ИмяФайлаОписания;
	ФайлКаталогаРаспаковки=Новый Файл(КаталогРаспаковки);
	СтрокаКонфигурацииВДереве.Объект="Ф";
	//СтрокаКонфигурацииВДереве.ПутьТекОбъект=ФайлКаталогаРаспаковки.Имя;
	СтрокаКонфигурацииВДереве.Наименование="Форма";
	СтрокаКонфигурацииВДереве.ИндексКартинки=115;
	СоответствиеИдентификаторов.Вставить(0,0);
	Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() Тогда
		ЗаполнитьДеревоФайлов(КаталогРаспаковки);
	КонецЕсли;
	Макет=ЭтотОбъект.ПолучитьМакет("МакетСтруктурыКонфигурации");
	ОбластьМакета=Макет.Область("СоответствиеИдентификаторов");
	НомерСтроки=ОбластьМакета.Верх;
	Пока НомерСтроки<=ОбластьМакета.Низ Цикл
		СоответствиеИдентификаторов.Вставить(СокрЛП(Макет.Область(НомерСтроки,1).Текст),СокрЛП(Макет.Область(НомерСтроки,3).Текст));
		НомерСтроки=НомерСтроки+1
	КонецЦикла;	
КонецПроцедуры

Процедура ВыводРезультатаКомплекс(РазбиратьФайлОбновления)
	
	Если РежимВыбораОбъекта = 4 Тогда
		ВыводРезультатаДляSSF(ФайлКонфигурации,КаталогДляРаспаковкиКонфигурации);
	Иначе
		ВыводРезультатаДляCfEpf(ФайлКонфигурации,КаталогДляРаспаковкиКонфигурации);	
	КонецЕсли;
	
	Если РазбиратьФайлОбновления=Истина  тогда
		Если РежимВыбораОбъекта=2 тогда
			РаспаковкаОбновления();
			ВыводРезультата("Распаковка");
		Иначе 
			Распаковка(ФайлОбновления,КаталогДляРаспаковкиОбновления);
		КонецЕсли;
	ИначеЕсли РежимВыбораОбъекта=2 Тогда
		ВыводРезультата("ТолькоДерево");
	КонецЕсли;
	
	Если РежимВыбораОбъекта = 4 Тогда
		ВыводРезультатаДляSSF(ФайлОбновления,КаталогДляРаспаковкиОбновления);
	ИначеЕсли РежимВыбораОбъекта<>2 Тогда
		ВыводРезультатаДляCfEpf(ФайлОбновления,КаталогДляРаспаковкиОбновления);
	КонецЕсли;
	
	
	Если РежимСравнения=1 тогда
		
		Если РежимВыбораОбъекта=2 тогда
			Фильтр=2;
		Иначе 
			Фильтр=1;
		КонецЕсли;
		
		ВыводРезультатаСравнения();
		
	Иначе
		
		Если КаталогТретий<>"" и РежимВыбораОбъекта<>4 тогда
			ФайлОписанияОбъекта=Новый Файл(КаталогТретий+"\root");
			Если ФайлОписанияОбъекта.Существует() тогда
				РазбиратьТретийФайл=Ложь;
			Иначе
				Если Не ЗначениеЗаполнено(ФайлТретий) тогда
					Предупреждение("Не выбран файл "+?(РежимВыбораОбъекта=0,"конфигурации!",?(РежимВыбораОбъекта=3,"отчета!","обработки!")));
					Возврат;
				Иначе ФайлДляРаспаковки= Новый Файл(ФайлТретий);
					Если ФайлДляРаспаковки.Существует()=Ложь тогда
						Предупреждение("Файл "+ФайлДляРаспаковки.ПолноеИмя+" не существует!");
					КонецЕсли;
				КонецЕсли;
				РазбиратьТретийФайл=Истина;
			КонецЕсли; 
		Иначе 
			РазбиратьТретийФайл=истина;
		КонецЕсли;
		
		Если РазбиратьТретийФайл=Истина тогда
			Распаковка(ФайлТретий,КаталогТретий);
		КонецЕсли;
		
		Если РежимВыбораОбъекта = 4 Тогда
			ВыводРезультатаДляSSF(ФайлТретий,КаталогТретий);
		Иначе
			ВыводРезультатаДляCfEpf(ФайлТретий,КаталогТретий);
		КонецЕсли;
		
		ВыводТрехуровневогоСравнения();
		
	КонецЕсли;	
	
КонецПроцедуры

//==============================================================================================================================================
// ПРОЦЕДУРЫ ДЛЯ ВЫВОДА ДЕРЕВА МЕТАДАННЫХ
//==============================================================================================================================================

Процедура ПостроитьДеревоОбновляемойКонфигурации(ФайлОписанияКонфигурации,ОбъектОбновления,м,Режим,НужныйКаталог,РежимОбновления)
	Макет = ЭтотОбъект.ПолучитьМакет("МакетСтруктурыКонфигурации");
	ОбластьМакета = Макет.Область("Область1"); 
	
	Если РежимОбновления<>"НеОбновлять" тогда
		ТекущийУзел=ЭлементыФормы.ДеревоМетаданных.Значение.Строки;
		Дерево=ДеревоМетаданных;
		ТекущаяСтрока=ТекущийУзел.Добавить();
		ТекущаяСтрока.Наименование=ОбъектОбновления;
		ТекущаяСтрока.Синоним="Конфигурация."+ОбъектОбновления;
		ТекущаяСтрока.Идентификатор = ФайлОписанияКонфигурации;
		ТекущаяСтрока.ПутьТекОбъект=ФайлОписанияКонфигурации;
		СоответствиеИдентификаторов.Вставить(ФайлОписанияКонфигурации,ТекущаяСтрока.Синоним);
		НужноеСоответствие.Вставить(ФайлОписанияКонфигурации,ТекущаяСтрока);
	Иначе
		Если РежимВыбораОбъекта=2 или НужныйКаталог=КаталогДляРаспаковкиКонфигурации тогда
			Дерево=ДеревоCf;
			ТекущийУзел=ЭлементыФормы.ДеревоCf.Значение.Строки;
			ТекущаяСтрока=ТекущийУзел.Найти(ФайлОписанияКонфигурации,"Идентификатор");
		ИначеЕсли НужныйКаталог=КаталогТретий тогда
			Дерево=ТретьеДерево;
			ТекущийУзел=ЭлементыФормы.ТретьеДерево.Значение.Строки;
			ТекущаяСтрока=ТекущийУзел.Найти(ФайлОписанияКонфигурации,"Идентификатор");
		Иначе
			Дерево=ДеревоМетаданных;
			ТекущийУзел=ЭлементыФормы.ДеревоМетаданных.Значение.Строки;
			ТекущаяСтрока=ТекущийУзел.Найти(ФайлОписанияКонфигурации,"Идентификатор");
		КонецЕсли;
	КонецЕсли;
	НомерСтроки=2;
	НомерКолонки=1;
	Строка="";
	НомерКолонкиВерсии=Макет.Области.Найти(Версия).Лево;
	Пока НомерСтроки<=ОбластьМакета.Низ Цикл
		Строка=СокрЛП(Макет.Область(НомерСтроки,НомерКолонки).Текст);
		Если ПустаяСтрока(Строка) тогда
			НомерКолонки=НомерКолонки-1;
			Строка=СокрЛП(Макет.Область(НомерСтроки,НомерКолонки).Текст);
			Если ПустаяСтрока(Строка) Тогда
				НомерКолонки=НомерКолонки+2;
				Строка=СокрЛП(Макет.Область(НомерСтроки,НомерКолонки).Текст);
			КонецЕсли;
		КонецЕсли;
		Состояние ("Номер обрабатываемой строки:"+НомерСтроки);
		Если СокрЛП(Макет.Область(НомерСтроки, НомерКолонкиВерсии).Текст) = "-" Тогда
			НомерСтроки=НомерСтроки+1;
			Продолжить;
		КонецЕсли;
		Если НомерКолонки=1 Тогда 
			ТекущийУзел=ТекущаяСтрока.Строки;
			СтрокиПервогоУровня=ТекущийУзел.Добавить();
			СтрокиПервогоУровня.Наименование=Строка;
			СтрокиПервогоУровня.Идентификатор=СокрЛП(Макет.Область(НомерСтроки,5).Текст);
			СтрокиПервогоУровня.ВидМетаданных=СокрЛП(Макет.Область(НомерСтроки,6).Текст);
			СтрокиПервогоУровня.ИндексКартинки=СокрЛП(Макет.Область(НомерСтроки,8).Текст);
			СтрокиПервогоУровня.ИндексКартинкиПодчиненных=СокрЛП(Макет.Область(НомерСтроки,9).Текст);
			СтрокиПервогоУровня.Синоним=СокрЛП(Макет.Область(НомерСтроки,7).Текст)
		ИначеЕсли НомерКолонки=2 Тогда
			ТекущийУзел=СтрокиПервогоУровня.Строки;
			СтрокиВторогоУровня=ТекущийУзел.Добавить();
			СтрокиВторогоУровня.Наименование=Строка;
			СтрокиВторогоУровня.Идентификатор=СокрЛП(Макет.Область(НомерСтроки,5).Текст);
			СтрокиВторогоУровня.ВидМетаданных=СокрЛП(Макет.Область(НомерСтроки,6).Текст);
			СтрокиВторогоУровня.ИндексКартинки=СокрЛП(Макет.Область(НомерСтроки,8).Текст);
			СтрокиВторогоУровня.ИндексКартинкиПодчиненных=СокрЛП(Макет.Область(НомерСтроки,9).Текст);
			СтрокиВторогоУровня.Синоним=СокрЛП(Макет.Область(НомерСтроки,7).Текст)
		ИначеЕсли НомерКолонки=3 Тогда
			ТекущийУзел=СтрокиВторогоУровня.Строки;
			СтрокиТретьегоУровня=ТекущийУзел.Добавить();
			СтрокиТретьегоУровня.Наименование=Строка;
			СтрокиТретьегоУровня.Идентификатор=СокрЛП(Макет.Область(НомерСтроки,5).Текст);
			СтрокиТретьегоУровня.ВидМетаданных=СокрЛП(Макет.Область(НомерСтроки,6).Текст);
			СтрокиТретьегоУровня.ИндексКартинки=СокрЛП(Макет.Область(НомерСтроки,8).Текст);
			СтрокиТретьегоУровня.ИндексКартинкиПодчиненных=СокрЛП(Макет.Область(НомерСтроки,9).Текст);
			СтрокиТретьегоУровня.Синоним=СокрЛП(Макет.Область(НомерСтроки,7).Текст)
		ИначеЕсли НомерКолонки=4 Тогда
			ТекущийУзел=СтрокиТретьегоУровня.Строки;
			СтрокиЧетвертогоУровня=ТекущийУзел.Добавить();
			СтрокиЧетвертогоУровня.Наименование=Строка;
			СтрокиЧетвертогоУровня.Идентификатор=СокрЛП(Макет.Область(НомерСтроки,5).Текст);
			СтрокиЧетвертогоУровня.ВидМетаданных=СокрЛП(Макет.Область(НомерСтроки,6).Текст);
			СтрокиЧетвертогоУровня.ИндексКартинки=СокрЛП(Макет.Область(НомерСтроки,8).Текст);
			СтрокиЧетвертогоУровня.ИндексКартинкиПодчиненных=СокрЛП(Макет.Область(НомерСтроки,9).Текст);
			СтрокиЧетвертогоУровня.Синоним=СокрЛП(Макет.Область(НомерСтроки,7).Текст)
		КонецЕсли;
		НомерСтроки=НомерСтроки+1;
		Если НомерСтроки=4000 тогда
			Прервать;
		КонецЕсли;
		ОбработкаПрерыванияПользователя();
	КонецЦикла;
	МассивЗначений=Новый Массив(2);
	ТекстНов=Новый ТекстовыйДокумент;
	ТекстНов.Прочитать(НужныйКаталог+"\"+файлОписанияКонфигурации);
	ТекстНовСтрокой=ТекстНов.ПолучитьТекст();
	ПолучитьДанныеМассиваЗначений(ТекстНовСтрокой,МассивЗначений);
	СтрокаМодулейПриложения=Дерево.Строки.Найти("Модули задачи","Наименование", истина);
	СтрокаМодулейПриложения.Идентификатор=МассивЗначений[0];
	ч=1;
	КаталогФайла=НайтиФайлы(НужныйКаталог+"\", МассивЗначений[0]+".*");
	Для к=0 по КаталогФайла.Количество()-1 цикл
		ТекКаталог=КаталогФайла.Получить(к);
		Если ТекКаталог.Расширение="" Тогда
			Продолжить;
		КонецЕсли;
		ОбработатьФайлПоРасширению(ТекКаталог,СтрокаМодулейПриложения,м,Режим,ч);
	КонецЦикла;
	СтрокаОтчетаОбАнализе=СтрокаОтчетаОбАнализе+Символы.ПС+"Файлы конфигурации: "+ч+" измененных объектов";
КонецПроцедуры

Процедура ПостроитьДеревоОбновляемойКонфигурацииНов(м,Режим,СтрокаОписания,НужныйКаталог)
	Если НужныйКаталог=КаталогДляРаспаковкиКонфигурации тогда
		Дерево=ДеревоCf;
	ИначеЕсли НужныйКаталог=КаталогТретий тогда
		Дерево=ТретьеДерево;
	Иначе
		Дерево=ДеревоМетаданных;
	КонецЕсли;	
	НомерМетаданных=0;
	Если Версия="v8_1" тогда
		КоличествоМетаданных=38;
	Иначе КоличествоМетаданных=43;
	КонецЕсли;
	Если РежимРазбора<>0 и Версия="v8_2" тогда
		НачальныйИндекс=10;
	Иначе НачальныйИндекс=19;
	КонецЕсли;
	МассивЗначений=Новый Массив(2);
	МассивОбъектов=Новый Массив;
	Если РежимРазбора<>0 и Версия="v8_2" тогда
		МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Значения","Значение","81","82","РО"));
		МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Графы","Графа","87","88","РО"));
		МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Измерения","Измерение","83","84","РО"));
		МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Ресурсы","Ресурс","85","86","РО"));
		МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Реквизиты адресации","РеквизитАдресации","95","96","РО"));
		МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Реквизиты","Реквизит","77","80","РО"));
		МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Признаки учета","ПризнакУчета","89","90","РО"));
		МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Признаки учета субконто","ПризнакУчетаСубконто","91","92","РО"));
		МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Табличные части","ТабличнаяЧасть","78","79","РО"));
	КонецЕсли;
	МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Перерасчеты","Перерасчет","93","94","ПР"));
	МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Формы","Форма","16","51","Ф"));
	МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Команды","Команда","106","111","КОМ"));
	МассивОбъектов.Добавить(Новый Структура("Название,Поле,Индекс,ИндексПодч,Объект","Макеты","Макет","18","53","М"));
	МассивМетаданных=Новый Массив;
	МассивМетаданных.Добавить("РегистрСведений");
	МассивМетаданных.Добавить("Обработка");
	МассивМетаданных.Добавить("ЖурналДокументов");
	МассивМетаданных.Добавить("Отчет");
	МассивМетаданных.Добавить("РегистрНакопления");
	МассивМетаданных.Добавить("РегистрБухгалтерии");
	МассивМетаданных.Добавить("РегистрРасчета");
	Макет=ПолучитьМакет("МакетСтруктурыКонфигурации");
	Для НомерСтроки=1 по СтрЧислоСтрок(СтрокаОписания) цикл
		ОбработкаПрерыванияПользователя();
		Строка=СтрПолучитьСтроку(СтрокаОписания,НомерСтроки);
		Если Сред(Строка,2,36)="09736b02-9cac-4e3f-b4f7-d3e9576ab948" тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Для НомерСтроки=НомерСтроки по СтрЧислоСтрок(СтрокаОписания)  цикл
		СтрокаНазванияМетаданных="                                   ";
		ОбработкаПрерыванияПользователя();
		Строка=стрПолучитьСтроку(СтрокаОписания,НомерСтроки);
		Matches0=РегулярноеВыражение0.Execute(Строка);
		Для каждого Match0 из  Matches0 цикл
			НомерМетаданных=НомерМетаданных+1;
			НомерЭлемента=0;
			ч=0;
			щ=0;
			Если  (Match0.Submatches(0)="37f2fa9a-b276-11d4-9435-004095e12fc7") И (Версия<>"v8_2") Тогда
				СтрокаДереваМетаданных=Дерево.Строки.Найти(Match0.Submatches(0),"Идентификатор",истина);
				ЗагрузитьДеревоПодсистем(СтрокаОписания,Строка,НомерСтроки,СтрокаДереваМетаданных,м,Режим,ч,НужныйКаталог);
			ИначеЕсли Match0.Submatches(0)="37f2fa9a-b276-11d4-9435-004095e12fc7" и Версия="v8_2" тогда
				СтрокаДереваМетаданных=Дерево.Строки.Найти(Match0.Submatches(0),"Идентификатор",истина);
				НомерЭлементаПодсистемV8_2=0;
				ЗагрузитьДеревоПодсистемV8_2(СтрокаОписания,СтрокаДереваМетаданных,НомерЭлементаПодсистемV8_2,м,Режим,ч,НужныйКаталог);
				Если ч<>0 тогда
					СтрокаОтчетаОбАнализе=СтрокаОтчетаОбАнализе+Символы.ПС+СтрокаДереваМетаданных.Наименование+": "+ч+" измененных объектов";
				Иначе СтрокаДереваМетаданных.Родитель.Строки.Удалить(СтрокаДереваМетаданных);
				КонецЕсли;
			ИначеЕсли Match0.Submatches(1)="0" и Match0.Submatches(0)<>"37f2fa9a-b276-11d4-9435-004095e12fc7" тогда	
				СтрокаДереваМетаданных=Дерево.Строки.Найти(Match0.Submatches(0),"Идентификатор",истина);
				Если СтрокаДереваМетаданных<>Неопределено  тогда
					СтрокаДереваМетаданных.Родитель.Строки.Удалить(СтрокаДереваМетаданных);	
				КонецЕсли;
			ИначеЕсли Match0.Submatches(1)<>"0" и Match0.Submatches(0)<>"37f2fa9a-b276-11d4-9435-004095e12fc7" тогда
				СтрокаДереваМетаданных=Дерево.Строки.Найти(Match0.Submatches(0),"Идентификатор",истина);
				ВидМетаданныхОбъекта=СтрокаДереваМетаданных.ВидМетаданных;
				Результат=РегулярноеВыражение1.Execute(Match0.Submatches(2));
				Для Каждого Match1 Из Результат цикл
					ОбработкаПрерыванияПользователя();
					НомерЭлемента=НомерЭлемента+1;
					СтрокаДляВыводаСостояния="п."+НомерМетаданных+" из "+КоличествоМетаданных+" - "+СтрокаДереваМетаданных.Наименование+":"+Лев(СтрокаНазванияМетаданных,34-СтрДлина(СтрокаДереваМетаданных.Наименование));
					ИзобразитьИндикаторВСтрокеСостояния(СтрокаДляВыводаСостояния,НомерЭлемента,Результат.Count);
					//Состояние(СтрокаДереваМетаданных.Наименование + ": " + НомерЭлемента + " из " + Результат.Count);
					///////////////////////////////////////////////////
					ФайлыОбъекта=НайтиФайлы(НужныйКаталог+"\",Match1.Submatches(0)+"*.*");
					Для ц=0 по ФайлыОбъекта.Количество()-1 цикл
						ФайлОбъекта=ФайлыОбъекта.Получить(ц);
						Если ФайлОбъекта.Расширение="" тогда
							СтрокаОбъекта=СтрокаДереваМетаданных.Строки.Добавить();
							СтрокаОбъекта.ИндексКартинки=СтрокаДереваМетаданных.ИндексКартинкиПодчиненных;
							ТекстФайла=Новый ТекстовыйДокумент;
							ТекстФайла.Прочитать(ФайлОбъекта.ПолноеИмя);
							ТекстФайлаСтрокой=ТекстФайла.ПолучитьТекст();
							ПолучитьДанныеМассиваЗначений(ТекстФайлаСтрокой,МассивЗначений);
							СтрокаОбъекта.Наименование=МассивЗначений[1];
							СтрокаОбъекта.Идентификатор=МассивЗначений[0];
							СтрокаОбъекта.ВидМетаданных=ВидМетаданныхОбъекта;
							СтрокаОбъекта.Объект="О";
							СтрокаОбъекта.ПутьТекОбъект=ФайлОбъекта.Имя;
							СтрокаОбъекта.Синоним=ВидМетаданныхОбъекта+"."+МассивЗначений[1]+".Объект";
							СоответствиеИдентификаторов.Вставить(МассивЗначений[0],видМетаданныхОбъекта+"."+МассивЗначений[1]+".Объект");
							НужноеСоответствие.Вставить(МассивЗначений[0],СтрокаОбъекта);
							щ=щ+1;
							ч=ч+1;
							м=м+1;
							ПодчиненныеФайлыОбъекта=НайтиФайлы(НужныйКаталог+"\",ФайлОбъекта.Имя+".*");
							Для б=0 по ПодчиненныеФайлыОбъекта.Количество()-1 цикл
								ПодчиненныйФайл=ПодчиненныеФайлыОбъекта.Получить(б);
								Если ПодчиненныйФайл.Расширение="" тогда
									Продолжить;
								КонецЕсли;
								ОбработатьФайлПоРасширению(ПодчиненныйФайл,СтрокаОбъекта,м,Режим,ч);
							КонецЦикла;
							Если Макет.Области.Найти(ВидМетаданныхОбъекта)<>Неопределено Тогда
								ОбластьМакета=Макет.Область(ВидМетаданныхОбъекта);
								Для н=0 по МассивОбъектов.ВГраница() цикл
									Если СокрЛП(Макет.Область(ОбластьМакета.Верх,НачальныйИндекс+н).Текст)<>"" тогда
										ОбъектСтроки=МассивОбъектов[н]["Объект"];
										ВидОбъектаСтроки=МассивОбъектов[н]["Поле"];
										СтрокаФорм=СтрокаОбъекта.Строки.Добавить();
										СтрокаФорм.Наименование=МассивОбъектов[н]["Название"];
										СтрокаФорм.Идентификатор=СокрЛП(Макет.Область(ОбластьМакета.Верх,НачальныйИндекс+н).Текст);
										СтрокаФорм.ВидМетаданных=ВидОбъектаСтроки;
										СтрокаФорм.ИндексКартинки=МассивОбъектов[н]["Индекс"];
										СтрокаФорм.Синоним=МассивОбъектов[н]["Название"];
										СтрокаФорм.ИндексКартинкиПодчиненных=МассивОбъектов[н]["ИндексПодч"];
										СтрокаФорм.Объект=ОбъектСтроки;
										
										Если ОбъектСтроки="КОМ" и МассивМетаданных.Найти(видМетаданныхОбъекта)<>Неопределено тогда
											РегулярноеВыражениеN.Pattern=СтрокаФорм.Идентификатор+",\d+((,\n\{\n\{\d,\n\{\d,\n\{\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12}},\n\{\d,\n\{\d,\d,\n\{(-\d|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\},"".*"",-?[\d]+,-?\d,\d,\d\},\d,\n\{\d(,[^,]*,""(""""|[^""]*)*"")*\},\d,\n\{([\d]+,[\d]+,[\d]+)\},\d,\n.*\n\{""Pattern""(,\n\{.*\})*\n?\},\n\{\d,\n\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?\{\d(,[^,]*,"".*"")*\},"".*""\},\d,\d\}\n\}\n\},\d\})*)";
											УпрощенныйПаттерн=Истина;
										ИначеЕсли ОбъектСтроки="КОМ" тогда
											РегулярноеВыражениеN.Pattern=СтрокаФорм.Идентификатор+",\d+((,\n\{\n\{\d,\n\{\d,\d,\d,\n\{\d,\n\{\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12}},\n\{\d,\n\{\d,\d,\n\{(-\d|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\},"".*"",-?[\d]+,-?\d,\d,\d\},\d,\n\{\d(,[^,]*,""(""""|[^""]*)*"")*\},\d,\n\{([\d]+,[\d]+,[\d]+)\},\d,\n.*\n\{""Pattern""(,\n\{.*\})*\n?\},\n\{\d,\n\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?\{\d(,[^,]*,"".*"")*\},"".*""\},\d,\d\}\n\}\n\}\n\},\d\})*)";
											УпрощенныйПаттерн=ложь;	
										ИначеЕсли ОбъектСтроки<>"РО" тогда
											РегулярноеВыражениеN.Pattern=СтрокаФорм.Идентификатор+",\d+((,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12}))*)";
										Иначе
											РегулярноеВыражениеN.Pattern=СтрокаФорм.Идентификатор+НайтиПаттерн(ВидОбъектаСтроки,ВидМетаданныхОбъекта);
										КонецЕсли;
										MatchesN=РегулярноеВыражениеN.Execute(ТекстФайлаСтрокой);
										Для каждого MatchN из MatchesN Цикл
											ТекстПараметра=MatchN.SubMatches(0);
										КонецЦикла;
										Если MatchN.SubMatches(1)<>Неопределено и ОбъектСтроки="КОМ" Тогда
											ЗаполнитьКом(м,ТекстПараметра,СтрокаФорм,УпрощенныйПаттерн,Режим,ч,НужныйКаталог)
										ИначеЕсли MatchN.SubMatches(1)<>Неопределено и ОбъектСтроки<>"РО" тогда
											ЗаполнитьФМ(м,ТекстПараметра,СтрокаФорм,Режим,ч,НужныйКаталог);
										ИначеЕсли MatchN.SubMatches(1)<>Неопределено тогда
											ЗаполнитьРО(м,ТекстПараметра,СтрокаФорм,Режим,ч,НужныйКаталог,ВидОбъектаСтроки,ВидМетаданныхОбъекта);
										Иначе СтрокаФорм.Родитель.Строки.Удалить(СтрокаФорм);	
										КонецЕсли;
									КонецЕсли;  
								КонецЦикла;
							КонецЕсли;
							СтрокаСсылок=ТекстФайла.ПолучитьСтроку(2);
							СсылкиОбъектов=Сред(СтрокаСсылок,Найти(СтрокаСсылок,",")+1);
							ПозицияЗапятой=Найти(СсылкиОбъектов,",");
							Если СтрДлина(СсылкиОбъектов)<36 Тогда
								Продолжить;
							Иначе
								СсылкиОбъектовПС=СтрЗаменить(СсылкиОбъектов,",",Символы.ПС);
								КоличествоСсылок=СтрЧислоСтрок(СсылкиОбъектовПС);
								Если КоличествоСсылок>0 Тогда
									СтрокаОбъекта.СсылкиОбъектов=Новый Соответствие;
								КонецЕсли;
								Для НомерСсылки=1 по КоличествоСсылок Цикл
									СсылкаОбъекта=СтрПолучитьСтроку(СсылкиОбъектовПС,НомерСсылки);
									СоответствиеИдентификаторов.Вставить(СсылкаОбъекта, СтрокаОбъекта.ВидМетаданных+"Ссылка"+НомерСсылки+"."+СтрокаОбъекта.Наименование);
									СтрокаОбъекта.СсылкиОбъектов.Вставить(СсылкаОбъекта,СтрокаОбъекта.ВидМетаданных+"Ссылка"+НомерСсылки+"."+СтрокаОбъекта.Наименование);
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла
					//
					//		
					//СоответствиеИдентификаторов.Вставить(Match.Submatches(0),ВидМетаданныхОбъекта);
				КонецЦикла;
				Если ч<>0 тогда
					СтрокаОтчетаОбАнализе=СтрокаОтчетаОбАнализе+Символы.ПС+СтрокаДереваМетаданных.Наименование+": "+щ+" измененных объектов из "+Результат.Count+" (включая изменения в подчиненных элементах - всего "+ч+" изменений)";
				ИначеЕсли Match0.Submatches(0)<>"3e5404af-6ef8-4c73-ad11-91bd2dfac4c8" и Match0.Submatches(0)<>"061d872a-5787-460e-95ac-ed74ea3a3e84" тогда
					Если  Match0.Submatches(0)="58848766-36ea-4076-8800-e91eb49590d7" и Версия<>"v8_2" тогда
						Если СтрокаДереваМетаданных.Родитель.Строки.Количество()=1 тогда
							СтрокаДереваМетаданных.Родитель.Родитель.Строки.Удалить(СтрокаДереваМетаданных.Родитель);
						Иначе СтрокаДереваМетаданных.Родитель.Строки.Удалить(СтрокаДереваМетаданных);	
						КонецЕсли;
					ИначеЕсли 	Match0.Submatches(0)="bc587f20-35d9-11d6-a3c7-0050bae0a776" тогда
						Если СтрокаДереваМетаданных.Родитель.Строки.Количество()=1 тогда
							СтрокаДереваМетаданных.Родитель.Родитель.Строки.Удалить(СтрокаДереваМетаданных.Родитель);
						Иначе СтрокаДереваМетаданных.Родитель.Строки.Удалить(СтрокаДереваМетаданных);	
						КонецЕсли;
					Иначе СтрокаДереваМетаданных.Родитель.Строки.Удалить(СтрокаДереваМетаданных);
					КонецЕсли;
				ИначеЕсли Match0.Submatches(0)="3e5404af-6ef8-4c73-ad11-91bd2dfac4c8" и Версия="v8_2" тогда
					СтрокаДереваМетаданных.Родитель.Строки.Удалить(СтрокаДереваМетаданных);
				КонецЕсли;
			КонецЕсли;			
		КонецЦикла;
	КонецЦикла;
	Если Версия= "v8_2" тогда
		СтрокаОбщихРеквизитов=Дерево.Строки.Найти("15794563-ccec-41f6-a83c-ec5f7b9a5bc1","Идентификатор",истина);
		Если СтрокаОбщихРеквизитов<>Неопределено тогда
			Если СтрокаОбщихРеквизитов.Строки.Количество()=0 тогда
				СтрокаОбщихРеквизитов.Родитель.Строки.Удалить(СтрокаОбщихРеквизитов);
			КонецЕсли;
		КонецЕсли;
		СтрокаВнешнихИсточниковДанных=Дерево.Строки.Найти("5274d9fc-9c3a-4a71-8f5e-a0db8ab23de5","Идентификатор",истина);
		Если СтрокаВнешнихИсточниковДанных<>Неопределено тогда
			Если СтрокаВнешнихИсточниковДанных.Строки.Количество()=0 тогда
				СтрокаВнешнихИсточниковДанных.Родитель.Строки.Удалить(СтрокаВнешнихИсточниковДанных);
			КонецЕсли;
		КонецЕсли;
		СтрокаHTTPСервисов=Дерево.Строки.Найти("0fffc09c-8f4c-47cc-b41c-8d5c5a221d79","Идентификатор",истина);
		Если СтрокаHTTPСервисов<>Неопределено тогда
			Если СтрокаHTTPСервисов.Строки.Количество()=0 тогда
				СтрокаHTTPСервисов.Родитель.Строки.Удалить(СтрокаHTTPСервисов);
			КонецЕсли;
		КонецЕсли;
		СтрокаОпределяемыхТипов=Дерево.Строки.Найти("c045099e-13b9-4fb6-9d50-fca00202971e","Идентификатор",истина);
		Если СтрокаОпределяемыхТипов<>Неопределено тогда
			Если СтрокаОпределяемыхТипов.Строки.Количество()=0 тогда
				СтрокаОпределяемыхТипов.Родитель.Строки.Удалить(СтрокаОпределяемыхТипов);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	СтрокаМодулейЗадачи=Дерево.Строки.Найти("Модули задачи","Наименование",истина);
	Если СтрокаМодулейЗадачи.Строки.Количество()=0 тогда
		СтрокаМодулейЗадачи.Родитель.Строки.Удалить(СтрокаМодулейЗадачи);
	КонецЕсли;
	СтрокаОтчетаОбАнализе=СтрокаОтчетаОбАнализе+Символы.ПС+"Всего изменено "+м+" объектов";
КонецПроцедуры

Процедура ЗагрузитьДеревоПодсистем(СтрокаОписания,Строка,НомерСтроки,СтрокаДереваМетаданных,м,Режим,ч,НужныйКаталог)
	НомерЭлемента=0;
	ТекущаяСтрока=СтрокаДереваМетаданных;
	ТекущийУзел=ТекущаяСтрока.Строки;
	Попытка
		Matches=РегулярноеВыражениеП.Execute(СтрокаОписания);
		Для каждого Match из Matches Цикл
			НомерЭлемента=НомерЭлемента+1;
			СтрокаДляВыводаСостояния="п.6 из 38 - Подсистемы:                       ";
			ИзобразитьИндикаторВСтрокеСостояния(СтрокаДляВыводаСостояния,НомерЭлемента,Matches.Count);
			//Состояние("Подсистемы: "+НомерЭлемента+" из "+Matches.Count);
			Если Match.SubMatches(0)<>Неопределено Тогда
				ТекущаяСтрока=ТекущийУзел.Добавить();
				ТекущаяСтрока.Наименование=Match.SubMatches(2);
				ТекущаяСтрока.Идентификатор=Match.SubMatches(1);
				ТекущаяСтрока.ВидМетаданных="Подсистема";
				ТекущаяСтрока.Объект="О";
				ТекущаяСтрока.ИндексКартинки=44;
				ТекущаяСтрока.Синоним="Подсистема."+ТекущаяСтрока.Наименование;
				КаталогФайла=НайтиФайлы(НужныйКаталог+"\", ТекущаяСтрока.Идентификатор+".*");
				Если КаталогФайла.Количество()<>0 тогда
					Для к=0 по КаталогФайла.Количество()-1 цикл
						м=м+1;
						ч=ч+1;
						ТекКаталог=КаталогФайла.Получить(к);
						Если ТекКаталог.Расширение="" Тогда
							ТекущаяСтрока.ПутьТекОбъект=ТекКаталог.Имя;
							Продолжить;
						КонецЕсли;
						ОбработатьФайлПоРасширению(ТекКаталог,ТекущаяСтрока,м,Режим,ч);
					КонецЦикла;
				КонецЕсли;
				Если Match.SubMatches(9)=Неопределено Тогда
					ТекущийУзел=ТекущаяСтрока.Строки;
					НомерСтроки=НомерСтроки+6;
				Иначе 	
					Matches1=РегулярноеВыражениеП1.Execute(Match.SubMatches(8));
					Сч=0;
					Для каждого Match1 из Matches1 Цикл
						Сч=Сч+1;
					КонецЦикла;
					Если (Сч>2) И (Сч<5) тогда
						ТекущийУзел=ТекущийУзел.Родитель.Родитель.Строки;
						НомерСтроки=НомерСтроки+9;
					ИначеЕсли (Сч>4) И (Сч<7) Тогда
						ТекущийУзел=ТекущийУзел.Родитель.Родитель.Родитель.Строки;
						НомерСтроки=НомерСтроки+11;
					Иначе НомерСтроки=НомерСтроки+7;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если Сч<>Неопределено тогда 
			НомерСтроки=НомерСтроки-1;	
		КонецЕсли;
	Исключение Возврат;
	КонецПопытки;
КонецПроцедуры

Процедура ЗагрузитьДеревоПодсистемV8_2(Текст,СтрокаДереваМетаданных,НомерЭлементаПодсистемV8_2,м,Режим,ч,НужныйКаталог)
	МассивЗначений=Новый Массив(2);
	Matches1=РегулярноеВыражениеП2.Execute(Текст);
	Для каждого Match1 Из Matches1 Цикл
		НомерЭлементаПодсистемV8_2=НомерЭлементаПодсистемV8_2+1;
		СтрокаДляВыводаСостояния="п.7 из 43 - Подсистемы:                       ";
		ИзобразитьИндикаторВСтрокеСостояния(СтрокаДляВыводаСостояния,НомерЭлементаПодсистемV8_2,НомерЭлементаПодсистемV8_2);
		//Состояние("Подсистемы: "+НомерЭлементаПодсистемV8_2);
		Если Match1.SubMatches(1)<>Неопределено Тогда
			ИдентификаторыПараметров=Match1.Value;
			СсылкиПараметров=Сред(ИдентификаторыПараметров,38);
			СсылкиПараметров=Сред(СсылкиПараметров, Найти(СсылкиПараметров,",")+1);
			СсылкиПараметровПС=СтрЗаменить(СсылкиПараметров,",",Символы.ПС);
			КоличествоСсылокПараметров=СтрЧислоСтрок(СсылкиПараметровПС);
			Для  НомерСсылкиПараметров=1 По КоличествоСсылокПараметров Цикл
				ИдентификаторПараметра=СтрПолучитьСтроку(СсылкиПараметровПС,НомерСсылкиПараметров);
				КаталогФайла=НайтиФайлы(НужныйКаталог+"\", ИдентификаторПараметра+".*");
				Если КаталогФайла.Количество()<>0 тогда
					м=м+1;
					ч=ч+1;
					СтрокиПодсистем=СтрокаДереваМетаданных.Строки.Добавить();
					СтрокиПодсистем.Идентификатор=ИдентификаторПараметра;
					СтрокиПодсистем.ВидМетаданных="Подсистема";
					СтрокиПодсистем.Объект="О";
					СтрокиПодсистем.ИндексКартинки=44;
					Для к=0 по КаталогФайла.Количество()-1 цикл
						ТекКаталог=КаталогФайла.Получить(к);
						Если ТекКаталог.Расширение="" Тогда
							СтрокиПодсистем.ПутьТекОбъект=ТекКаталог.Имя;
							ТекстОписанияПодчиненнойПодсистемы=Новый ТекстовыйДокумент;
							ТекстОписанияПодчиненнойПодсистемы.Прочитать(ТекКаталог.ПолноеИмя);
							ТекстОписания=ТекстОписанияПодчиненнойПодсистемы.ПолучитьТекст();
							ПолучитьДанныеМассиваЗначений(ТекстОписания,МассивЗначений);
							СоответствиеИдентификаторов.Вставить(ИдентификаторПараметра,МассивЗначений[1]);
							НужноеСоответствие.Вставить(ИдентификаторПараметра,СтрокиПодсистем);
							СтрокиПодсистем.Наименование=МассивЗначений[1];
							СтрокиПодсистем.Синоним="Подсистема."+СтрокиПодсистем.Наименование;
							Продолжить;
						КонецЕсли;
						ОбработатьФайлПоРасширению(ТекКаталог,СтрокиПодсистем,м,Режим,ч);
					КонецЦикла;
					ЗагрузитьДеревоПодсистемV8_2(ТекстОписания,СтрокиПодсистем,НомерЭлементаПодсистемV8_2,м,Режим,ч,НужныйКаталог)
				Иначе
				КонецЕсли;				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьКом(м,ТекстПараметров,СтрокиПараметров,УпрощенныйПаттерн,Режим,ч,НужныйКаталог)
	Если УпрощенныйПаттерн тогда
		РегулярноеВыражениеК1.Pattern=",\n\{\n\{\d,\n\{\d,\n\{\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12}},\n\{\d,\n\{\d,\d,\n\{(-\d|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\},"".*"",-?[\d]+,-?\d,\d,\d\},\d,\n\{\d(,[^,]*,""(""""|[^""]*)*"")*\},\d,\n\{([\d]+,[\d]+,[\d]+)\},\d,\n.*\n\{""Pattern""(,\n\{.*\})*\n?\},\n\{\d,\n\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?\{\d(,[^,]*,"".*"")*\},"".*""\},\d,\d\}\n\}\n\},\d\}";
	Иначе РегулярноеВыражениеК1.Pattern=",\n\{\n\{\d,\n\{\d,\d,\d,\n\{\d,\n\{\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12}},\n\{\d,\n\{\d,\d,\n\{(-\d|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\},"".*"",-?[\d]+,-?\d,\d,\d\},\d,\n\{\d(,[^,]*,""(""""|[^""]*)*"")*\},\d,\n\{([\d]+,[\d]+,[\d]+)\},\d,\n.*\n\{""Pattern""(,\n\{.*\})*\n?\},\n\{\d,\n\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?\{\d(,[^,]*,"".*"")*\},"".*""\},\d,\d\}\n\}\n\}\n\},\d\}";
	КонецЕсли;
	р=0;
	Matches1=РегулярноеВыражениеК1.Execute(текстПараметров);
	Для каждого Match1 из Matches1 Цикл
		СтрокиКоманд=СтрокиПараметров.Строки.Добавить();
		СтрокиКоманд.Наименование=Match1.SubMatches(7);
		СтрокиКоманд.Идентификатор=Match1.SubMatches(6);
		СтрокиКоманд.ВидМетаданных=СтрокиПараметров.ВидМетаданных;
		СтрокиКоманд.Объект="КОМ";
		СтрокиКоманд.ИндексКартинки=СтрокиПараметров.ИндексКартинкиПодчиненных;
		СтрокиКоманд.Синоним=СтрокиПараметров.Родитель.Синоним+"."+СтрокиПараметров.ВидМетаданных+"."+СтрокиКоманд.Наименование;
		//СтрокиКоманд.ПутьТекОбъект=СтрокиКоманд.Идентификатор;
		КаталогФайла=НайтиФайлы(НужныйКаталог+"\", СтрокиКоманд.Идентификатор+".*");
		Для к=0 по КаталогФайла.Количество()-1 цикл
			р=р+1;
			ТекКаталог=КаталогФайла.Получить(к);
			Если ТекКаталог.Расширение="" Тогда
				Продолжить;
			КонецЕсли;
			ОбработатьФайлПоРасширению(ТекКаталог,СтрокиКоманд,м,Режим,ч);
		КонецЦикла;
	КонецЦикла;
	Если р=0 тогда
		СтрокиПараметров.Родитель.Строки.Удалить(СтрокиПараметров);
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьФМ(м,ИдентификаторыПараметров,СтрокиПараметров,Режим,ч,НужныйКаталог)
	
	СсылкиПараметров=Сред(ИдентификаторыПараметров,1);
	СсылкиПараметров=Сред(СсылкиПараметров, Найти(СсылкиПараметров,",")+1);
	СсылкиПараметровПС=СтрЗаменить(СсылкиПараметров,",",Символы.ПС);
	КоличествоСсылокПараметров=СтрЧислоСтрок(СсылкиПараметровПС);
	р=0;
	Для  НомерСсылкиПараметров=1 По КоличествоСсылокПараметров Цикл
		ИдентификаторПараметра=СтрПолучитьСтроку(СсылкиПараметровПС,НомерСсылкиПараметров);
		Файл=Новый файл(НужныйКаталог + "\" + ИдентификаторПараметра);
		Если файл.Существует() тогда
			р=р+1;
			м=м+1;
			ч=ч+1;
			СтрокиФМ=СтрокиПараметров.Строки.Добавить();
			СтрокиФМ.Идентификатор=ИдентификаторПараметра;
			СтрокиФМ.ВидМетаданных=СтрокиПараметров.ВидМетаданных;
			СтрокиФМ.Объект=СтрокиПараметров.Объект;
			СтрокиФМ.ИндексКартинки=СтрокиПараметров.ИндексКартинкиПодчиненных;
			СтрокиФМ.Наименование=ПолучитьНазваниеПараметра(ИдентификаторПараметра,СтрокиФМ,НужныйКаталог);
			Если РежимВыбораОбъекта=0 или РежимВыбораОбъекта=2 Тогда
				СтрокиФМ.Синоним=СтрокиПараметров.Родитель.ВидМетаданных+"."+СтрокиПараметров.Родитель.Наименование+"."+СтрокиФМ.Наименование;
			Иначе
				СтрокиФМ.Синоним=СтрокиПараметров.Родитель.Синоним+"."+СтрокиФМ.Наименование;
			КонецЕсли;
			СтрокиФМ.ПутьТекОбъект=ИдентификаторПараметра;
			СоответствиеИдентификаторов.Вставить(ИдентификаторПараметра,СтрокиФМ.Синоним);
			НужноеСоответствие.Вставить(ИдентификаторПараметра,СтрокиФМ);
			КаталогФайла=НайтиФайлы(НужныйКаталог+"\", ИдентификаторПараметра+".*");
			Для к=0 по КаталогФайла.Количество()-1 цикл
				ТекКаталог=КаталогФайла.Получить(к);
				Если ТекКаталог.Расширение="" Тогда
					Продолжить;
				КонецЕсли;
				ОбработатьФайлПоРасширению(ТекКаталог,СтрокиФМ,м,Режим,ч);
				
			КонецЦикла;
			СтрокиФМ.Синоним=СтрокиФМ.Синоним+".Объект";
		КонецЕсли;
	КонецЦикла;
	Если р=0 тогда
		СтрокиПараметров.Родитель.Строки.Удалить(СтрокиПараметров);
	КонецЕсли;
КонецПроцедуры

Функция НайтиПаттерн(ВидОбъектаСтроки,ВидМетаданныхОбъекта)
	
	Если ВидОбъектаСтроки="Измерение" и ВидМетаданныхОбъекта="Последовательность" тогда
		Паттерн=",[\d]+((,\n\{\n\{\d,\n\{2,\n\{\d,\n\{0,0,\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\},""\S+?"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{""Pattern""(,\n\{""[#DSNBU]"".*\})*\n?\}\n\},\n\{(0,[\d]+(,\n\{[^\}]+(,\n)+\{[^\{\}]+\}\n\})*)[\n]*\},\n\{(0,[\d]+(,\n\{[^\}]+(,\n)+\{[^\{\}]+\}\n\})*)[\n]*\}\n\},\d\})*)";
	ИначеЕсли ВидОбъектаСтроки="Значение" тогда
		Паттерн=",\d+((,\n?\{\n?\{0,\n?\{\d,\n?\{0,0,\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\},""\S+?"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\}\n?\},\d\})*)";
	ИначеЕсли ВидОбъектаСтроки="Графа" тогда
		Паттерн=",\d+((,\n\{\n\{\d,\n\{\d,\n\{0,0,\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\},""\S+?"",\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{(\d,[\d]+(,\n\{[^\}]+(,\n)+\{[^\{\}]+\}\n\})*)[\n]*\},(\d)\},(\d)\})*)";
	ИначеЕсли ВидОбъектаСтроки="ТабличнаяЧасть" тогда
		Если ВидМетаданныхОбъекта="Обработка" тогда
			ИдентификаторРеквизитов="5d24a9d1-098e-11d6-b9b8-0050bae0a95d";
		ИначеЕсли ВидМетаданныхОбъекта="Отчет" тогда
			ИдентификаторРеквизитов="c339c860-29e2-11d6-a3c7-0050bae0a776";
		Иначе ИдентификаторРеквизитов="888744e1-b616-11d4-9436-004095e12fc7";
		КонецЕсли;
		Паттерн=",[\d]+((,\n\{\n\{\d,\n\{[\d]+,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{0,\n\{\d,\n\{0,0,\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\},""\S+?"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\}\n\}(\n\}\n|,\d,\n\{(0|\d,\n\{\d,\d(,\n\{-[\d]+\},\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{[\d]+,[\d]+(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{(""[DSNBU]"".*|""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},(\d|\n.*\n|\n.*\n.*\n|\n.*\n.*\n.*\n|\n.*\n.*\n.*\n.*\n|\n.*\n.*\n.*\n.*\n.*\n|\n.*\n.*\n.*\n.*\n.*\n\}\n))?\})+\n\})+\n)\},\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\}\n\}[^\}]*)\},\d,\n\{"+ИдентификаторРеквизитов+",(0\}|[\d]+(,\n\{\n\{\d,\n\{[12]\d,\n\{2,\n\{\d,\n\{0,0,\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\},""\S+?"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{""Pattern""(,\n\{""[#DSNBU]"".*\})*\n?\}\n\}(\n\}\n?|,\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\d,"".*"",\d,\n\{""[#DSNBU]"".*\},\n\{""[#DSNBU]"".*\},\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\d,\d,\n\{5004(,0|,\d+(,"".*"",\d(,\n\{(-\d+|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\})+,\d)+)\},\n\{3,(0,0|\d(,\n\{.*\})*,\d)\},\n\{0,(0|\d(,"".*"",\n(\{""[DSNBU]"".*|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{\d+(,\n\{""[DSNBU]"".*|,\n\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})+\n\}\n)\})+\n)\},\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n(\{""[DSNBU]"".*\}|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})(,\d)+\}[^\}]*)(,\d)*\},\d\})*)\n\}\n\})*)";
	Иначе
		Паттерн=",[\d]+((,\n\{\n\{\d,\n\{[12]\d,\n\{2,\n\{\d,\n\{0,\d+,\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\},""\S+?"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{""Pattern""(,\n\{""[#DSNBU]"".*\})*\n?\}\n\}(\n\}\n?|,\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\d,"".*"",\d,\n\{""[#DSNBU]"".*\},\n\{""[#DSNBU]"".*\},\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\d,\d,\n\{5004(,0|,\d+(,"".*"",\d(,\n\{(-\d+|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\})+,\d)+)\},\n\{3,(0,0|\d(,\n\{.*\})*,\d)\},\n\{0,(0|\d(,"".*"",\n(\{""[DSNBU]"".*|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{\d+(,\n\{""[DSNBU]"".*|,\n\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})+\n\}\n)\})+\n)\},\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n(\{""[DSNBU]"".*\}|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})(,\d)+\}[^\}]*)(,\d)*\},\d\})*)";
	КонецЕсли;
	
	Возврат Паттерн;
КонецФункции

Процедура ЗаполнитьРО(м,ТекстПараметра,СтрокиПараметров,Режим,ч,НужныйКаталог,ВидОбъектаСтроки,ВидМетаданныхОбъекта)
	Если ВидОбъектаСтроки<>"ТабличнаяЧасть" тогда        
		Если ВидОбъектаСтроки="Измерение" и ВидМетаданныхОбъекта="Последовательность" тогда
			РегулярноеВыражениеР1.Pattern=",\n\{\n\{\d,\n\{2,\n\{\d,\n\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{""Pattern""(,\n\{""[#DSNBU]"".*\})*\n?\}\n\},\n\{(0,[\d]+(,\n\{[^\}]+(,\n)+\{[^\{\}]+\}\n\})*)[\n]*\},\n\{(0,[\d]+(,\n\{[^\}]+(,\n)+\{[^\{\}]+\}\n\})*)[\n]*\}\n\},\d\}";
		ИначеЕсли ВидОбъектаСтроки="Значение" тогда
			РегулярноеВыражениеР1.Pattern=",\n?\{\n?\{0,\n?\{\d,\n?\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},""(""""|[^""]*)*""(,0,0)?\}\n?\},\d\}";
		ИначеЕсли ВидОбъектаСтроки="Графа" тогда
			РегулярноеВыражениеР1.Pattern=",\n\{\n\{\d,\n\{\d,\n\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{(\d,[\d]+(,\n\{[^\}]+(,\n)+\{[^\{\}]+\}\n\})*)[\n]*\},(\d)\},(\d)\}";
		Иначе
			РегулярноеВыражениеР1.Pattern=",\n\{\n\{\d,\n\{[12]\d,\n\{2,\n\{\d,\n\{0,\d+,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{""Pattern""(,\n\{""[#DSNBU]"".*\})*\n?\}\n\}(\n\}\n?|,\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\d,"".*"",\d,\n\{""[#DSNBU]"".*\},\n\{""[#DSNBU]"".*\},\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\d,\d,\n\{5004(,0|,\d+(,"".*"",\d(,\n\{(-\d+|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\})+,\d)+)\},\n\{3,(0,0|\d(,\n\{.*\})*,\d)\},\n\{0,(0|\d(,"".*"",\n(\{""[DSNBU]"".*|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{\d+(,\n\{""[DSNBU]"".*|,\n\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})+\n\}\n)\})+\n)\},\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n(\{""[DSNBU]"".*\}|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})(,\d)+\}[^\}]*)(,\d)*\},\d\}";
		КонецЕсли;
		Matches1=РегулярноеВыражениеР1.Execute(ТекстПараметра);
		Для каждого Match1 из Matches1 Цикл
			СтрокиРО=СтрокиПараметров.Строки.Добавить();
			СтрокиРО.Наименование=Match1.SubMatches(1);
			СтрокиРО.Идентификатор=Match1.SubMatches(0);
			СтрокиРО.ВидМетаданных=СтрокиПараметров.ВидМетаданных;
			СтрокиРО.Объект="РО";
			СтрокиРО.ПредставлениеРеквизита=Match1.Value;
			СтрокиРО.ИндексКартинки=СтрокиПараметров.ИндексКартинкиПодчиненных;
			СтрокиРО.Синоним=СтрокиПараметров.Родитель.Синоним+"."+СтрокиПараметров.ВидМетаданных+"."+СтрокиРО.Наименование;
			СоответствиеИдентификаторов.Вставить(СтрокиРО.Идентификатор, СтрокиРО.Синоним);
			НужноеСоответствие.Вставить(СтрокиРО.Идентификатор, СтрокиРО);
		КонецЦикла;
	Иначе
		Если ВидМетаданныхОбъекта="Обработка" тогда
			ИдентификаторРеквизитов="5d24a9d1-098e-11d6-b9b8-0050bae0a95d";
		ИначеЕсли ВидМетаданныхОбъекта="Отчет" тогда
			ИдентификаторРеквизитов="c339c860-29e2-11d6-a3c7-0050bae0a776";
		Иначе ИдентификаторРеквизитов="888744e1-b616-11d4-9436-004095e12fc7";
		КонецЕсли;
		РегулярноеВыражениеР1.Pattern=",\n\{\n\{\d,\n\{[\d]+,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\w{8}-\w{4}-\w{4}-\w{4}-\w{12}),\n\{0,\n\{\d,\n\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\}\n\}(\n\}\n|,\d,\n\{(0|\d,\n\{\d,\d(,\n\{-[\d]+\},\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{[\d]+,[\d]+(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{(""[DSNBU]"".*|""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},(\d|\n.*\n|\n.*\n.*\n|\n.*\n.*\n.*\n|\n.*\n.*\n.*\n.*\n|\n.*\n.*\n.*\n.*\n.*\n|\n.*\n.*\n.*\n.*\n.*\n\}\n))?\})+\n\})+\n)\},\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\}\n\}[^\}]*)\},\d,\n\{("+ИдентификаторРеквизитов+",(0\}|[\d]+(,\n\{\n\{\d,\n\{[12]\d,\n\{2,\n\{\d,\n\{0,0,\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\},""\S+?"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{""Pattern""(,\n\{""[#DSNBU]"".*\})*\n?\}\n\}(\n\}\n?|,\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\d,"".*"",\d,\n\{""[#DSNBU]"".*\},\n\{""[#DSNBU]"".*\},\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\d,\d,\n\{5004(,0|,\d+(,"".*"",\d(,\n\{(-\d+|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\})+,\d)+)\},\n\{3,(0,0|\d(,\n\{.*\})*,\d)\},\n\{0,(0|\d(,"".*"",\n(\{""[DSNBU]"".*|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{\d+(,\n\{""[DSNBU]"".*|,\n\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})+\n\}\n)\})+\n)\},\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n(\{""[DSNBU]"".*\}|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})(,\d)+\}[^\}]*)(,\d)*\},\d\})*)\n\}\n\})";
		Matches1=РегулярноеВыражениеР1.Execute(ТекстПараметра);
		Для каждого Match1 из Matches1 Цикл
			СтрокиТЧ=СтрокиПараметров.Строки.Добавить();
			СтрокиТЧ.Наименование=Match1.SubMatches(2);
			СтрокиТЧ.Идентификатор=Match1.SubMatches(1);
			СтрокиТЧ.ВидМетаданных=СтрокиПараметров.ВидМетаданных;
			СтрокиТЧ.Объект="РО";
			СтрокиТЧ.ИндексКартинки=СтрокиПараметров.ИндексКартинкиПодчиненных;
			СтрокиТЧ.Синоним=СтрокиПараметров.Родитель.Синоним+"."+СтрокиПараметров.ВидМетаданных+"."+СтрокиТЧ.Наименование;
			СоответствиеИдентификаторов.Вставить(СтрокиТЧ.Идентификатор, СтрокиТЧ.Синоним);
			НужноеСоответствие.Вставить(СтрокиТЧ.Идентификатор, СтрокиТЧ);
			СтрокаСсылок=Match1.SubMatches(0);
			Matches2=РегулярноеВыражение1.Execute(СтрокаСсылок);
			ш=0;
			Для каждого Match2 из Matches2 Цикл
				ш=ш+1;
				СоответствиеИдентификаторов.Вставить(Match2.SubMatches(0), СтрокиТЧ.ВидМетаданных+"Ссылка"+ш+"."+СтрокиТЧ.Наименование);
				//СтрокиРеквизитов["Ссылка"+Ш]=Match2.SubMatches(0);
			КонецЦикла;
			Если Match1.SubMatches(17)<>"0}" Тогда
				РегулярноеВыражениеР3.Pattern=ИдентификаторРеквизитов+",[\d]+((,\n\{\n\{\d,\n\{[12]\d,\n\{2,\n\{\d,\n\{0,0,\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\},""\S+?"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{""Pattern""(,\n\{""[#DSNBU]"".*\})*\n?\}\n\}(\n\}\n?|,\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\d,"".*"",\d,\n\{""[#DSNBU]"".*\},\n\{""[#DSNBU]"".*\},\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\d,\d,\n\{5004(,0|,\d+(,"".*"",\d(,\n\{(-\d+|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\})+,\d)+)\},\n\{3,(0,0|\d(,\n\{.*\})*,\d)\},\n\{0,(0|\d(,"".*"",\n(\{""[DSNBU]"".*|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{\d+(,\n\{""[DSNBU]"".*|,\n\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})+\n\}\n)\})+\n)\},\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n(\{""[DSNBU]"".*\}|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})(,\d)+\}[^\}]*)(,\d)*\},\d\})*\n\}\n\})";
				Matches3=РегулярноеВыражениеР3.Execute(Match1.SubMatches(16));
				Для каждого Match3 из Matches3 Цикл
					Matches4=РегулярноеВыражениеР4.Execute(Match3.SubMatches(0));
					Для каждого Match4 из Matches4 Цикл
						СтрокиРТЧ=СтрокиТЧ.Строки.Добавить();
						СтрокиРТЧ.Наименование=Match4.SubMatches(1);
						СтрокиРТЧ.Идентификатор=Match4.SubMatches(0);
						СтрокиРТЧ.ВидМетаданных="РеквизитТабличнойЧасти";
						СтрокиРТЧ.Синоним=СтрокиТЧ.Синоним+".Реквизит."+СтрокиРТЧ.Наименование;
						СтрокиРТЧ.Объект="РО";
						СтрокиРТЧ.ПредставлениеРеквизита=Match4.Value;
						СтрокиРТЧ.ИндексКартинки=80;
						СоответствиеИдентификаторов.Вставить(СтрокиРТЧ.Идентификатор, СтрокиРТЧ.Синоним);
						НужноеСоответствие.Вставить(СтрокиРТЧ.Идентификатор, СтрокиРТЧ);
					КонецЦикла;
				КонецЦикла ;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

//==============================================================================================================================================
// ПРОЦЕДУРЫ ДЛЯ ПОСТРОЕНИЯ ДЕРЕВА ФАЙЛОВ
//==============================================================================================================================================

Процедура ЗаполнитьДеревоФайлов(НужныйКаталог)
	Форм=ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма);
	Если РежимСравнения=1 тогда
		Если НужныйКаталог=КаталогДляРаспаковкиКонфигурации тогда
			ДеревоФайлов=Форм.ДеревоОбъектов1;
			Форм.ЭлементыФормы.Панель1.Видимость=Истина;
			Форм.ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
			Форм.ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
			Гиперссылка=Форм.ЭлементыФормы.ОбъектМетаданных1;
			Если РежимВыбораОбъекта=0 тогда
				Форм.ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первой конфигурации";
				Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второй конфигурации";
			ИначеЕсли РежимВыбораОбъекта=1 тогда
				Форм.ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первой обработки";
				Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второй обработки";
			ИначеЕсли РежимВыбораОбъекта=3 тогда
				Форм.ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первого отчета";
				Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второго отчета";
			ИначеЕсли РежимВыбораОбъекта = 4 Тогда
				Форм.ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первой формы";
				Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второй формы";
			Иначе
				Форм.ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы конфигурации";
				Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы обновления конфигурации";
			КонецЕсли;
		Иначе ДеревоФайлов=Форм.ДеревоОбъектов;
			Гиперссылка=Форм.ЭлементыФормы.ОбъектМетаданных;
		КонецЕсли;
	ИначеЕсли РежимСравнения=0 тогда
		Форм.ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Верх;
		Форм.ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
		ДеревоФайлов=Форм.ДеревоОбъектов;
		Гиперссылка=Форм.ЭлементыФормы.ОбъектМетаданных;
		Если РежимВыбораОбъекта=0 тогда
			Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы конфигурации";
		ИначеЕсли РежимВыбораОбъекта=1 тогда
			Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы обработки";
		ИначеЕсли РежимВыбораОбъекта=3 тогда
			Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы отчета";
		ИначеЕсли РежимВыбораОбъекта=4 тогда
			Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы формы";
		Иначе
			Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы обновления конфигурации";
		КонецЕсли;
	Иначе
		Если НужныйКаталог=КаталогТретий тогда
			ДеревоФайлов=Форм.ДеревоОбъектов2;
			Гиперссылка=Форм.ЭлементыФормы.ОбъектМетаданных2;
		ИначеЕсли НужныйКаталог=КаталогДляРаспаковкиОбновления тогда
			
			ДеревоФайлов=Форм.ДеревоОбъектов;
			Гиперссылка=Форм.ЭлементыФормы.ОбъектМетаданных;
		Иначе
			Форм.ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
			Форм.ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Нет;
			Если РежимВыбораОбъекта=0 тогда
				Форм.ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первой конфигурации";
				Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второй конфигурации";
				Форм.ЭлементыФормы.НадписьФайлыОбновления2.Заголовок="Файлы третьей конфигурации";
			ИначеЕсли РежимВыбораОбъекта=1 тогда
				Форм.ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первой обработки";
				Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второй обработки";
				Форм.ЭлементыФормы.НадписьФайлыОбновления2.Заголовок="Файлы третьей обработки";
			ИначеЕсли РежимВыбораОбъекта=3 тогда
				Форм.ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первого отчета";
				Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второго отчета";
				Форм.ЭлементыФормы.НадписьФайлыОбновления2.Заголовок="Файлы третьего отчета";
			ИначеЕсли РежимВыбораОбъекта=4 тогда
				Форм.ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первой формы";
				Форм.ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второй формы";
				Форм.ЭлементыФормы.НадписьФайлыОбновления2.Заголовок="Файлы третьей формы";
			КонецЕсли;
			ДеревоФайлов=Форм.ДеревоОбъектов1;
			Гиперссылка=Форм.ЭлементыФормы.ОбъектМетаданных1;
		КонецЕсли;
	КонецЕсли;
	ДеревоФайлов.Строки.Очистить();
	МассивНайденных = НайтиФайлы(НужныйКаталог, "*.*");
	НомерФайла=1;
	МассивСтрок=Новый Массив(МассивНайденных.Количество());
	Для каждого Файл из МассивНайденных цикл
		НовСтрока = ДеревоФайлов.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, файл,"Имя, ПолноеИмя"); 
		Если Файл.ЭтоКаталог() тогда
			НовСтрока.ИндексКартинки=1;
			МассивПодфайлов=НайтиФайлы(Файл.ПолноеИмя, "*.*");
			РазмерПодфайлов=0;
			ПереборПодфайлов(МассивПодфайлов,РазмерПодфайлов,НовСтрока);
			НовСтрока.Размер=РазмерПодфайлов;
		Иначе НовСтрока.ИндексКартинки=0;
			НовСтрока.Размер=Файл.Размер();
		КонецЕсли;
		ОбработкаПрерыванияПользователя();
		
		Строка="Вывод дерева папок:               ";
		ИзобразитьИндикаторВСтрокеСостояния(Строка,НомерФайла, МассивНайденных.Количество());
		НомерФайла=НомерФайла+1;
	КонецЦикла;
	ДеревоФайлов.Строки.Сортировать("ИндексКартинки убыв, Имя возр");
	Если Форм.Открыта()=Ложь тогда
		Форм.Открытие=истина;
		форм.Открыть();
	КонецЕсли;
	Если НужныйКаталог=КаталогДляРаспаковкиКонфигурации тогда
		ДеревоОбъектовКонфигурации=ДеревоФайлов;
	ИначеЕсли НужныйКаталог=КаталогДляРаспаковкиОбновления Тогда
		ДеревоОбъектовОбновления=ДеревоФайлов;
	Иначе
		ТретьеДеревоОбъектов=ДеревоФайлов;
	КонецЕсли;
	Гиперссылка.Заголовок="Выберите файл, чтобы определить его объект";
	Гиперссылка.Гиперссылка=ложь;
	Форм.ЭлементыФормы.ДеревоОбъектов1.ОбновитьСтроки();
	Форм.ЭлементыФормы.ДеревоОбъектов2.ОбновитьСтроки();
	Форм.ЭлементыФормы.ДеревоОбъектов.ОбновитьСтроки();
КонецПроцедуры

Процедура ПереборПодфайлов(МассивПодфайлов, РазмерПодФайлов,НовСтрока)
	Для каждого ПодФайл из МассивПодфайлов цикл
		ПодНовСтрока = НовСтрока.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(ПодНовСтрока, ПодФайл, "Имя, ПолноеИмя");
		Если ПодФайл.ЭтоКаталог() Тогда
			ПодНовСтрока.ИндексКартинки=1;
			МассивФайлов=НайтиФайлы(ПодФайл.ПолноеИмя, "*.*");
			РазмерФайлов=0;
			ПереборПодфайлов(МассивФайлов,РазмерФайлов,ПодНовСтрока);
			ПодНовСтрока.Размер=РазмерФайлов;
		Иначе
			ПодНовСтрока.Размер=ПодФайл.Размер();
			ПодНовСтрока.ИндексКартинки=0;
			РазмерПодфайлов=РазмерПодфайлов+ПодФайл.Размер();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//==============================================================================================================================================
// ПРОЦЕДУРЫ ДЛЯ ВЫВОДА ДЕРЕВА СРАВНЕНИЯ
//==============================================================================================================================================

Процедура ВыводРезультатаСравнения()
	НомерСтроки=2;
	МассивСтрок = ДеревоCf.Строки.НайтиСтроки(Новый Структура("Счетчик",""),Истина);
	ВсегоСтрок=МассивСтрок.Количество()-1;
	Если Фильтр=3 или Фильтр=4 тогда
		ВывестиРезультатСписком();
	ИначеЕсли РежимВыбораОбъекта<>4 Тогда
		Для каждого ТекущаяСтрока из ДеревоCf.Строки Цикл
			НоваяСтрока=СравнениеМетаданных.Строки.Добавить();
			НоваяСтрока.СтруктураКонфигурации=ТекущаяСтрока.Наименование;
			НоваяСтрока.КартинкаКонфигурации=ТекущаяСтрока.ИндексКартинки;
			СтрокаСравнения=ДеревоМетаданных.Строки[0];
			НоваяСтрока.СтруктураОбновления=СтрокаСравнения.Наименование;
			НоваяСтрока.КартинкаОбновления=СтрокаСравнения.ИндексКартинки;
			ДвоичныеДанныеПервогоФайла=Новый ДвоичныеДанные(КаталогДляРаспаковкиКонфигурации+"\"+ТекущаяСтрока.ПутьТекОбъект);
			ДвоичныеДанныеВторогоФайла=Новый ДвоичныеДанные(КаталогДляРаспаковкиОбновления+"\"+СтрокаСравнения.ПутьТекОбъект);
			Если  ДвоичныеДанныеПервогоФайла<>ДвоичныеДанныеВторогоФайла тогда
				НоваяСтрока.ЕстьИзменения=1;
			КонецЕсли;
			НоваяСтрока.ПутьТекОбъектCf=ТекущаяСтрока.ПутьТекОбъект;
			НоваяСтрока.ПутьТекОбъектCfu=СтрокаСравнения.ПутьТекОбъект;
			Уровень=ТекущаяСтрока.Уровень();
			ПереборДерева(ТекущаяСтрока,Уровень,НоваяСтрока,СтрокаСравнения,Фильтр,НомерСтроки,ВсегоСтрок);
		КонецЦикла;
	Иначе 
		НоваяСтрока=СравнениеМетаданных.Строки.Добавить();
		НоваяСтрока.СтруктураКонфигурации=ДеревоCf.Строки[0].Наименование;
		НоваяСтрока.КартинкаКонфигурации=ДеревоCf.Строки[0].ИндексКартинки;
		СтрокаСравнения=ДеревоМетаданных.Строки[0];
		НоваяСтрока.СтруктураОбновления=СтрокаСравнения.Наименование;
		НоваяСтрока.КартинкаОбновления=СтрокаСравнения.ИндексКартинки;
		ПервыйФайл=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\form");
		ФайлМодуляПервойФормы=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\module");
		РазмерПервогоФайла=ПервыйФайл.Размер()+ФайлМодуляПервойФормы.Размер();
		
		ВторойФайл=Новый Файл(КаталогДляРаспаковкиОбновления+"\form");
		ФайлМодуляВторойФормы=Новый Файл(КаталогДляРаспаковкиОбновления+"\module");
		РазмерВторогоФайла=ВторойФайл.Размер()+ФайлМодуляВторойФормы.Размер();
		
		Если РазмерПервогоФайла<>РазмерВторогоФайла тогда
			НоваяСтрока.ЕстьИзменения=1;
		КонецЕсли;
		СравнениеФорм(КаталогДляРаспаковкиКонфигурации,КаталогДляРаспаковкиОбновления,"Форма","ПроизвольнаяФорма","ПроизвольнаяФорма", Ложь);
	КонецЕсли;
	ЭлементыФормы.СравнениеМетаданных.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
КонецПроцедуры

Процедура ПереборДерева (СтрокаДерева,Уровень,СтрокаНовогоДерева,СтрокаСравнения,Фильтр,НомерСтроки,ВсегоСтрок)
	Для каждого Стр Из СтрокаДерева.Строки Цикл
		НоваяСтрокаСравнения = Неопределено;
		ОбработкаПрерыванияПользователя();
		СтрокаДляВыводаСостояния = "Заполнение дерева сравнения                   ";
		ИзобразитьИндикаторВСтрокеСостояния(СтрокаДляВыводаСостояния,НомерСтроки,ВсегоСтрок);
		НомерСтроки = НомерСтроки + 1;
		Если Фильтр <> 2 Тогда
			НоваяСтрока = СтрокаНовогоДерева.Строки.Добавить();
			НоваяСтрока.СтруктураКонфигурации = Стр.Наименование;
			НоваяСтрока.КартинкаКонфигурации  = Стр.ИндексКартинки;
			НоваяСтрока.Объект                = Стр.Объект;
		КонецЕсли;
		Если  СтрокаСравнения <> Неопределено Тогда
			НоваяСтрокаСравнения = СтрокаСравнения.Строки.Найти(Стр.Синоним,"Синоним");
			Если НоваяСтрокаСравнения<>Неопределено Тогда
				Если Фильтр = 2 Тогда
					НоваяСтрока                       = СтрокаНовогоДерева.Строки.Добавить();
					НоваяСтрока.СтруктураКонфигурации = Стр.Наименование;
					НоваяСтрока.КартинкаКонфигурации  = Стр.ИндексКартинки;
					НоваяСтрока.Объект                = Стр.Объект;
				КонецЕсли;
				НоваяСтрока.СтруктураОбновления = НоваяСтрокаСравнения.Наименование;
				НоваяСтрока.КартинкаОбновления  = НоваяСтрокаСравнения.ИндексКартинки;
				НоваяСтрока.ПутьТекОбъектCf     = Стр.ПутьТекОбъект;
				НоваяСтрока.ПутьТекОбъектCfu    = НоваяСтрокаСравнения.ПутьТекОбъект;
				
				Если Стр.ПутьТекОбъект <> "" и НоваяСтрокаСравнения.ПутьТекОбъект <> "" Тогда
					ПервыйФайл = Новый Файл(КаталогДляРаспаковкиКонфигурации + "\" + Стр.ПутьТекОбъект);
					ФайлМодуляПервойФормы = Неопределено;
					Если ПервыйФайл.ЭтоКаталог() Тогда
						ПервыйФайл = Новый Файл(КаталогДляРаспаковкиКонфигурации + "\" + Стр.ПутьТекОбъект+?(Стр.ИндексКартинки=42,"\text",?(Стр.ИндексКартинки=115,"\form","\image")));
						Если ПервыйФайл.Имя = "form" Тогда
							ФайлМодуляПервойФормы = Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект+"\module");
						КонецЕсли;
					Иначе РазмерПервогоФайла = ПервыйФайл.Размер();	
					КонецЕсли;
					ВторойФайл = Новый Файл(КаталогДляРаспаковкиОбновления + "\" + НоваяСтрокаСравнения.ПутьТекОбъект);
					ФайлМодуляВторойФормы = Неопределено;
					Если ВторойФайл.ЭтоКаталог() Тогда
						ВторойФайл = Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект+?(НоваяСтрокаСравнения.ИндексКартинки=42,"\text",?(НоваяСтрокаСравнения.ИндексКартинки=115,"\form","\image")));
						Если ВторойФайл.Имя = "form" Тогда
							ФайлМодуляВторойФормы = Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект+"\module");
						КонецЕсли;
					КонецЕсли;
					НоваяСтрока.ЕстьИзменения = НайтиИзмененияВОбъектах(ПервыйФайл,ВторойФайл,ФайлМодуляПервойФормы,ФайлМодуляВторойФормы);
				ИначеЕсли Стр.Объект="РО" Тогда
					Если Стр.ПредставлениеРеквизита<>НоваяСтрокаСравнения.ПредставлениеРеквизита Тогда	
						НоваяСтрока.ПредставлениеПервогоРеквизита=Стр.ПредставлениеРеквизита;
						НоваяСтрока.ПредставлениеВторогоРеквизита=НоваяСтрокаСравнения.ПредставлениеРеквизита;
						НоваяСтрока.ЕстьИзменения = 1;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Фильтр <> 2 Тогда
				НоваяСтрока.СтруктураОбновления = "<Отсутствует>";
				НоваяСтрока.КартинкаОбновления  = 117;
				НоваяСтрока.ЕстьИзменения       = 3;
			КонецЕсли;
		ИначеЕсли Фильтр <> 2 Тогда
			НоваяСтрока.СтруктураОбновления = "<Отсутствует>";
			НоваяСтрока.КартинкаОбновления  = 117;
			НоваяСтрока.ЕстьИзменения       = 3;
		КонецЕсли;
		ПереборДерева(Стр,Уровень+1,НоваяСтрока,НоваяСтрокаСравнения,Фильтр,НомерСтроки,ВсегоСтрок);
		Если НоваяСтрока <> Неопределено и НоваяСтрока.Строки.Количество() = 0 и НоваяСтрока.ЕстьИзменения=0 и Фильтр=1 тогда
			НоваяСтрока.Родитель.Строки.Удалить(НоваяСтрока);
		КонецЕсли;
	КонецЦикла;
	Если СтрокаСравнения<>Неопределено  Тогда
		Для каждого Пр Из СтрокаСравнения.Строки Цикл
			Если СтрокаДерева.Строки.Найти(Пр.Синоним,"Синоним") = Неопределено Тогда
				НоваяСтрока = СтрокаНовогоДерева.Строки.Добавить();
				НоваяСтрока.СтруктураКонфигурации = "<Отсутствует>"; 				
				НоваяСтрока.КартинкаКонфигурации  = 117;
				НоваяСтрока.ЕстьИзменения         = 2;
				НоваяСтрока.СтруктураОбновления   = Пр.Наименование;
				НоваяСтрока.КартинкаОбновления    = Пр.ИндексКартинки;
				ОбратныйПеребор(Пр,НоваяСтрока);	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры  

Функция НайтиИзмененияВОбъектах(ПервыйФайл,ВторойФайл,ФайлМодуляПервойФормы,ФайлМодуляВторойФормы)
	Если РежимВыбораОбъекта=0 ИЛИ РежимВыбораОбъекта=2 Тогда
		РазмерПервогоФайла = ПервыйФайл.Размер()+?(ФайлМодуляПервойФормы<>Неопределено,ФайлМодуляПервойФормы.Размер(),0);
		РазмерВторогоФайла = ВторойФайл.Размер()+?(ФайлМодуляВторойФормы<>Неопределено,ФайлМодуляВторойФормы.Размер(),0);
		Если РазмерПервогоФайла <> РазмерВторогоФайла Тогда
			Возврат 1;
		КонецЕсли;
	Иначе
		Сравнение=Новый СравнениеФайлов;
		Если ФайлМодуляПервойФормы<>Неопределено И ФайлМодуляВторойФормы<>Неопределено Тогда
			Сравнение.ПервыйФайл=ФайлМодуляПервойФормы.ПолноеИмя;
			Сравнение.ВторойФайл=ФайлМодуляВторойФормы.ПолноеИмя;
			Сравнение.СпособСравнения=СпособСравненияФайлов.ТекстовыйДокумент;
			Сравнение.ИгнорироватьПустоеПространство=Истина;
			Сравнение.УчитыватьРегистр=Истина;
			Если НЕ Сравнение.Сравнить() Тогда
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
		Сравнение.ПервыйФайл=ПервыйФайл.ПолноеИмя;
		Сравнение.ВторойФайл=ВторойФайл.ПолноеИмя;
		Сравнение.ИгнорироватьПустоеПространство=Истина;
		Сравнение.УчитыватьРегистр=Истина;
		Попытка
			Сравнение.СпособСравнения=СпособСравненияФайлов.ТекстовыйДокумент;
			Если НЕ Сравнение.Сравнить() Тогда
				Возврат 1;
			КонецЕсли;
		Исключение
			Попытка
				Сравнение.СпособСравнения=СпособСравненияФайлов.ТабличныйДокумент;
				Если НЕ Сравнение.Сравнить() Тогда
					Возврат 1;
				КонецЕсли;			
			Исключение
				Сравнение.СпособСравнения=СпособСравненияФайлов.Двоичное;
				Если НЕ Сравнение.Сравнить() Тогда
					Возврат 1;
				КонецЕсли;				
			КонецПопытки;
			
		КонецПопытки;
		
		
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

Процедура ОбратныйПеребор(СтрокаДерева,СтрокаНовогоДерева)
	Для Каждого Стр Из СтрокаДерева.Строки Цикл
		ОбработкаПрерыванияПользователя();
		НоваяСтрока = СтрокаНовогоДерева.Строки.Добавить();
		НоваяСтрока.СтруктураКонфигурации = "<Отсутствует>"; 				
		НоваяСтрока.КартинкаКонфигурации  = 117;
		НоваяСтрока.ЕстьИзменения         = 2;
		НоваяСтрока.СтруктураОбновления   = Стр.Наименование;
		НоваяСтрока.КартинкаОбновления    = Стр.ИндексКартинки;
		ОбратныйПеребор(Стр,НоваяСтрока);	
	КонецЦикла;
КонецПроцедуры

Процедура ВывестиРезультатСписком()
	НомерСтроки=2;
	МассивСтрок = ДеревоCf.Строки.НайтиСтроки(Новый Структура("Счетчик",""),Истина);
	ВсегоСтрок=МассивСтрок.Количество()-1;
	Для каждого ТекущаяСтрока из ДеревоCf.Строки Цикл
		СтрокаСравнения=ДеревоМетаданных.Строки[0];
		ПервыйФайл=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+ТекущаяСтрока.ПутьТекОбъект);
		ВторойФайл=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+СтрокаСравнения.ПутьТекОбъект);
		Если ПервыйФайл.Размер()<>ВторойФайл.Размер() тогда
			НоваяСтрока=СравнениеМетаданных.Строки.Добавить();
			НоваяСтрока.СтруктураКонфигурации=ТекущаяСтрока.Синоним;
			НоваяСтрока.КартинкаКонфигурации=ТекущаяСтрока.ИндексКартинки;
			НоваяСтрока.СтруктураОбновления=СтрокаСравнения.Синоним;
			НоваяСтрока.КартинкаОбновления=СтрокаСравнения.ИндексКартинки;
			НоваяСтрока.ЕстьИзменения=1;
			НоваяСтрока.ПутьТекОбъектCf=ТекущаяСтрока.ПутьТекОбъект;
			НоваяСтрока.ПутьТекОбъектCfu=СтрокаСравнения.ПутьТекОбъект;
		КонецЕсли;
		Уровень=ТекущаяСтрока.Уровень();
		ПереборДляПостроенияСписка(ТекущаяСтрока,Уровень,СтрокаСравнения,НомерСтроки,ВсегоСтрок);
	КонецЦикла;
КонецПроцедуры

Процедура ПереборДляПостроенияСписка(СтрокаДерева,Уровень,СтрокаСравнения,НомерСтроки,ВсегоСтрок)
	Для Каждого Стр Из СтрокаДерева.Строки Цикл
		НоваяСтрокаСравнения=Неопределено;
		ОбработкаПрерыванияПользователя();
		СтрокаДляВыводаСостояния="Заполнение дерева сравнения                   ";
		ИзобразитьИндикаторВСтрокеСостояния(СтрокаДляВыводаСостояния,НомерСтроки,ВсегоСтрок);
		НомерСтроки=НомерСтроки+1;
		Если  СтрокаСравнения<>Неопределено тогда
			НоваяСтрокаСравнения=СтрокаСравнения.Строки.Найти(Стр.Синоним,"Синоним");
			Если НоваяСтрокаСравнения<>Неопределено тогда
				
				Если Стр.ПутьТекОбъект<>"" и НоваяСтрокаСравнения.ПутьТекОбъект<>"" тогда
					
					ПервыйФайл=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект);
					Если ПервыйФайл.ЭтоКаталог() тогда
						ПервыйФайл=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект+?(Стр.ИндексКартинки=42,"\text",?(Стр.ИндексКартинки=115,"\form","\image")));
						Если ПервыйФайл.Имя<>"form" тогда
							РазмерПервогоФайла=ПервыйФайл.Размер();
						Иначе ФайлМодуляПервойФормы=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект+"\module");
							РазмерПервогоФайла=ПервыйФайл.Размер()+ФайлМодуляПервойФормы.Размер();
						КонецЕсли;
					Иначе РазмерПервогоФайла=ПервыйФайл.Размер();	
					КонецЕсли;
					
					ВторойФайл=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект);
					Если ВторойФайл.ЭтоКаталог() тогда
						ВторойФайл=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект+?(НоваяСтрокаСравнения.ИндексКартинки=42,"\text",?(НоваяСтрокаСравнения.ИндексКартинки=115,"\form","\image")));
						Если ВторойФайл.Имя<>"form" тогда
							РазмерВторогоФайла=ВторойФайл.Размер();
						Иначе ФайлМодуляВторойФормы=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект+"\module");
							РазмерВторогоФайла=ВторойФайл.Размер()+ФайлМодуляВторойФормы.Размер();
						КонецЕсли;
					Иначе РазмерВторогоФайла=ВторойФайл.Размер();	
					КонецЕсли;
					
					Если РазмерПервогоФайла<>РазмерВторогоФайла тогда
						НоваяСтрока=СравнениеМетаданных.Строки.Добавить();
						НоваяСтрока.СтруктураКонфигурации=Стр.Синоним;
						НоваяСтрока.КартинкаКонфигурации=Стр.ИндексКартинки;
						НоваяСтрока.СтруктураОбновления=НоваяСтрокаСравнения.Синоним;
						НоваяСтрока.КартинкаОбновления=НоваяСтрокаСравнения.ИндексКартинки;
						НоваяСтрока.ЕстьИзменения=1;
						НоваяСтрока.ПутьТекОбъектCf=Стр.ПутьТекОбъект;
						НоваяСтрока.ПутьТекОбъектCfu=НоваяСтрокаСравнения.ПутьТекОбъект;
					КонецЕсли;
					
				КонецЕсли;
			ИначеЕсли Фильтр=3 и Стр.ПутьТекОбъект<>"" тогда 
				НоваяСтрока=СравнениеМетаданных.Строки.Добавить();
				НоваяСтрока.СтруктураКонфигурации=Стр.Синоним;
				НоваяСтрока.КартинкаКонфигурации=Стр.ИндексКартинки;
				НоваяСтрока.СтруктураОбновления="<Отсутствует>";
				НоваяСтрока.КартинкаОбновления=117;
				НоваяСтрока.ЕстьИзменения=3;
			КонецЕсли;
		ИначеЕсли Фильтр=3 и Стр.ПутьТекОбъект<>""тогда
			НоваяСтрока=СравнениеМетаданных.Строки.Добавить();
			НоваяСтрока.СтруктураКонфигурации=Стр.Синоним;
			НоваяСтрока.КартинкаКонфигурации=Стр.ИндексКартинки;
			НоваяСтрока.СтруктураОбновления="<Отсутствует>";
			НоваяСтрока.КартинкаОбновления=117;
			НоваяСтрока.ЕстьИзменения=3;
		КонецЕсли;
		ПереборДляПостроенияСписка(Стр,Уровень+1,НоваяСтрокаСравнения,НомерСтроки,ВсегоСтрок);
	КонецЦикла;
	Если СтрокаСравнения<>Неопределено  тогда
		Для каждого Пр из СтрокаСравнения.Строки цикл
			Если СтрокаДерева.Строки.Найти(Пр.Синоним,"Синоним")=Неопределено тогда
				Если Пр.ПутьТекОбъект<>"" тогда
					НоваяСтрока=СравнениеМетаданных.Строки.Добавить();
					НоваяСтрока.СтруктураКонфигурации="<Отсутствует>"; 				
					НоваяСтрока.КартинкаКонфигурации=117;
					НоваяСтрока.ЕстьИзменения=2;
					НоваяСтрока.СтруктураОбновления=Пр.Синоним;
					НоваяСтрока.КартинкаОбновления=Пр.ИндексКартинки;
				КонецЕсли;
				ОбратныйПереборДляПостроенияСписка(Пр);	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбратныйПереборДляПостроенияСписка(СтрокаДерева)
	Для Каждого Стр Из СтрокаДерева.Строки Цикл
		ОбработкаПрерыванияПользователя();
		Если Стр.ПутьТекОбъект<>"" тогда
			НоваяСтрока=СравнениеМетаданных.Строки.Добавить();
			НоваяСтрока.СтруктураКонфигурации="<Отсутствует>"; 				
			НоваяСтрока.КартинкаКонфигурации=117;
			НоваяСтрока.ЕстьИзменения=2;
			НоваяСтрока.СтруктураОбновления=Стр.Синоним;
			НоваяСтрока.КартинкаОбновления=Стр.ИндексКартинки;
		КонецЕсли;
		ОбратныйПереборДляПостроенияСписка(Стр);	
	КонецЦикла;
КонецПроцедуры

Процедура ВыводТрехуровневогоСравнения()
	
	Если ДеревоCf.Строки.Количество()<>0 тогда
		НоваяСтрока=ТрехуровневоеСравнение.Строки.Добавить();
		НоваяСтрока.СтруктураПервогоФайла=ДеревоCf.Строки[0].Наименование;
		НоваяСтрока.КартинкаПервогоФайла=ДеревоCf.Строки[0].ИндексКартинки;
		СтрокаСравнения=ДеревоМетаданных.Строки[0];
		НоваяСтрока.СтруктураВторогоФайла=СтрокаСравнения.Наименование;
		НоваяСтрока.КартинкаВторогоФайла=СтрокаСравнения.ИндексКартинки;
		СтрокаСравненияВторая=ТретьеДерево.Строки[0];
		НоваяСтрока.СтруктураТретьегоФайла=СтрокаСравненияВторая.Наименование;
		НоваяСтрока.КартинкаТретьегоФайла=СтрокаСравненияВторая.ИндексКартинки;
		Если РежимВыбораОбъекта<>4 Тогда
			ДвоичныеДанныеПервогоФайла=Новый ДвоичныеДанные(КаталогДляРаспаковкиКонфигурации+"\"+ДеревоCf.Строки[0].ПутьТекОбъект);
			ДвоичныеДанныеВторогоФайла=Новый ДвоичныеДанные(КаталогДляРаспаковкиОбновления+"\"+СтрокаСравнения.ПутьТекОбъект);
			ДвоичныеДанныеТретьегоФайла=Новый ДвоичныеДанные(КаталогТретий+"\"+СтрокаСравненияВторая.ПутьТекОбъект);
			Если  ДвоичныеДанныеПервогоФайла<>ДвоичныеДанныеВторогоФайла тогда
				НоваяСтрока.ИзмененияПервыйВторой=1;
			КонецЕсли;
			Если  ДвоичныеДанныеПервогоФайла<>ДвоичныеДанныеТретьегоФайла тогда
				НоваяСтрока.ИзмененияПервыйТретий=1;
			КонецЕсли;
			Если  ДвоичныеДанныеВторогоФайла<>ДвоичныеДанныеТретьегоФайла тогда
				НоваяСтрока.ИзмененияВторойТретий=1;
			КонецЕсли;
			НоваяСтрока.ПутьТекОбъектПервый=ДеревоCf.Строки[0].ПутьТекОбъект;
			НоваяСтрока.ПутьТекОбъектВторой=СтрокаСравнения.ПутьТекОбъект;
			НоваяСтрока.ПутьТекОбъектТретий=СтрокаСравненияВторая.ПутьТекОбъект;
			Уровень=0;
			Если ФильтрТрехуровневый=1 или ФильтрТрехуровневый=3 тогда
				ПереборТрехуровневыйИерархический(ДеревоCf.Строки[0],Уровень,НоваяСтрока,СтрокаСравнения,СтрокаСравненияВторая);
			Иначе
				ПереборДереваТрехуровневый(ДеревоCf.Строки[0],Уровень,СтрокаСравнения,СтрокаСравненияВторая);
			КонецЕсли;
			ЭлементыФормы.ТрехуровневоеСравнение.НачальноеОтображениеДерева=НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
		Иначе
			ПервыйФайл=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\form");
			ФайлМодуляПервойФормы=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\module");
			РазмерПервогоФайла=ПервыйФайл.Размер()+ФайлМодуляПервойФормы.Размер();
			
			ВторойФайл=Новый Файл(КаталогДляРаспаковкиОбновления+"\form");
			ФайлМодуляВторойФормы=Новый Файл(КаталогДляРаспаковкиОбновления+"\module");
			РазмерВторогоФайла=ВторойФайл.Размер()+ФайлМодуляВторойФормы.Размер();
			
			ТретийФайл=Новый Файл(КаталогТретий+"\form");
			ФайлМодуляТретьейФормы=Новый Файл(КаталогТретий+"\module");
			РазмерТретьегоФайла=ТретийФайл.Размер()+ФайлМодуляТретьейФормы.Размер();
			
			
			Если РазмерПервогоФайла<>РазмерВторогоФайла Тогда
				НоваяСтрока.ИзмененияПервыйВторой=1;
			КонецЕсли;
			Если РазмерПервогоФайла<>РазмерТретьегоФайла  Тогда
				НоваяСтрока.ИзмененияПервыйТретий=1;
			КонецЕсли;
			Если РазмерВторогоФайла<>РазмерТретьегоФайла Тогда
				НоваяСтрока.ИзмененияВторойТретий=1;
			КонецЕсли;
			Если ВыборDiff<>Неопределено Тогда
				СтрокаЗапуска = ""+ВыборDiff.СтрокаЗапуска;
				СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "синоним%1", "Форма");
				СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "синоним%2", "Форма");
				СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "синоним%3", "Форма");
				СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "%1", КаталогДляРаспаковкиКонфигурации+"\module"); СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "%2", КаталогДляРаспаковкиОбновления+"\module"); СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, "%3", КаталогТретий+"\module");
				Попытка
					ЗапуститьПриложение(СтрокаЗапуска);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПереборДереваТрехуровневый(СтрокаДерева,Уровень,СтрокаСравнения,СтрокаСравненияВторая)
	Для Каждого Стр Из СтрокаДерева.Строки Цикл
		НоваяСтрокаСравнения=Неопределено;
		НоваяСтрокаСравненияВторая=Неопределено;
		ОбработкаПрерыванияПользователя();
		Если  СтрокаСравнения<>Неопределено ИЛИ СтрокаСравненияВторая<>Неопределено тогда
			
			Если Стр.ПутьТекОбъект<>"" тогда
				ПервыйФайл=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект);
				Если ПервыйФайл.ЭтоКаталог() тогда
					ПервыйФайл=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект+?(Стр.ИндексКартинки=42,"\text",?(Стр.ИндексКартинки=115,"\form","\image")));
					Если ПервыйФайл.Имя<>"form" тогда
						РазмерПервогоФайла=ПервыйФайл.Размер();
					Иначе ФайлМодуляПервойФормы=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект+"\module");
						РазмерПервогоФайла=ПервыйФайл.Размер()+ФайлМодуляПервойФормы.Размер();
					КонецЕсли;
				Иначе РазмерПервогоФайла=ПервыйФайл.Размер();	
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокаСравнения<>Неопределено тогда
				НоваяСтрокаСравнения=СтрокаСравнения.Строки.Найти(Стр.Синоним,"Синоним");
				Если НоваяСтрокаСравнения<>Неопределено тогда
					Если НоваяСтрокаСравнения.ПутьТекОбъект<>"" тогда
						ВторойФайл=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект);
						Если ВторойФайл.ЭтоКаталог() тогда
							ВторойФайл=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект+?(НоваяСтрокаСравнения.ИндексКартинки=42,"\text",?(НоваяСтрокаСравнения.ИндексКартинки=115,"\form","\image")));
							Если ВторойФайл.Имя<>"form" тогда
								РазмерВторогоФайла=ВторойФайл.Размер();
							Иначе ФайлМодуляВторойФормы=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект+"\module");
								РазмерВторогоФайла=ВторойФайл.Размер()+ФайлМодуляВторойФормы.Размер();
							КонецЕсли;
						Иначе РазмерВторогоФайла=ВторойФайл.Размер();	
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокаСравненияВторая<>Неопределено тогда
				НоваяСтрокаСравненияВторая=СтрокаСравненияВторая.Строки.Найти(Стр.Синоним,"Синоним");
				Если НоваяСтрокаСравненияВторая<>Неопределено тогда
					Если НоваяСтрокаСравненияВторая.ПутьТекОбъект<>"" тогда
						ТретийФайл=Новый Файл(КаталогТретий+"\"+НоваяСтрокаСравненияВторая.ПутьТекОбъект);
						Если ТретийФайл.ЭтоКаталог() тогда
							ТретийФайл=Новый Файл(КаталогТретий+"\"+НоваяСтрокаСравненияВторая.ПутьТекОбъект+?(НоваяСтрокаСравненияВторая.ИндексКартинки=42,"\text",?(НоваяСтрокаСравненияВторая.ИндексКартинки=115,"\form","\image")));
							Если ТретийФайл.Имя<>"form" тогда
								РазмерТретьегоФайла=ТретийФайл.Размер();
							Иначе ФайлМодуляТретьейФормы=Новый Файл(КаталогТретий+"\"+НоваяСтрокаСравненияВторая.ПутьТекОбъект+"\module");
								РазмерТретьегоФайла=ТретийФайл.Размер()+ФайлМодуляТретьейФормы.Размер();
							КонецЕсли;
						Иначе РазмерТретьегоФайла=ТретийФайл.Размер();	
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокаСравнения<>Неопределено и СтрокаСравненияВторая<>Неопределено тогда
				Если НоваяСтрокаСравнения<>Неопределено и НоваяСтрокаСравненияВторая<>Неопределено и Стр.ПутьТекОбъект<>"" тогда
					Если ФильтрТрехуровневый=2 тогда
						Если РазмерПервогоФайла<>РазмерВторогоФайла и РазмерПервогоФайла<>РазмерТретьегоФайла и  РазмерВторогоФайла<>РазмерТретьегоФайла тогда
							НоваяСтрока=ТрехуровневоеСравнение.Строки[0].Строки.Добавить();
							НоваяСтрока.СтруктураПервогоФайла=Стр.Синоним;
							НоваяСтрока.КартинкаПервогоФайла=Стр.ИндексКартинки;
							НоваяСтрока.СтруктураВторогоФайла=НоваяСтрокаСравнения.Синоним;
							НоваяСтрока.КартинкаВторогоФайла=НоваяСтрокаСравнения.ИндексКартинки;
							НоваяСтрока.СтруктураТретьегоФайла=НоваяСтрокаСравненияВторая.Синоним;
							НоваяСтрока.КартинкаТретьегоФайла=НоваяСтрокаСравненияВторая.ИндексКартинки;
							НоваяСтрока.ПутьТекОбъектПервый=Стр.ПутьТекОбъект;
							НоваяСтрока.ПутьТекОбъектВторой=НоваяСтрокаСравнения.ПутьТекОбъект;
							НоваяСтрока.ПутьТекОбъектТретий=НоваяСтрокаСравненияВторая.ПутьТекОбъект;
							НоваяСтрока.ИзмененияПервыйВторой=1;
							НоваяСтрока.ИзмененияПервыйТретий=1;
							НоваяСтрока.ИзмененияВторойТретий=1;
						КонецЕсли;
					ИначеЕсли РазмерПервогоФайла<>РазмерВторогоФайла или РазмерПервогоФайла<>РазмерТретьегоФайла или  РазмерВторогоФайла<>РазмерТретьегоФайла тогда
						НоваяСтрока=ТрехуровневоеСравнение.Строки[0].Строки.Добавить();
						НоваяСтрока.СтруктураПервогоФайла=Стр.Синоним;
						НоваяСтрока.КартинкаПервогоФайла=Стр.ИндексКартинки;
						НоваяСтрока.СтруктураВторогоФайла=НоваяСтрокаСравнения.Синоним;
						НоваяСтрока.КартинкаВторогоФайла=НоваяСтрокаСравнения.ИндексКартинки;
						НоваяСтрока.СтруктураТретьегоФайла=НоваяСтрокаСравненияВторая.Синоним;
						НоваяСтрока.КартинкаТретьегоФайла=НоваяСтрокаСравненияВторая.ИндексКартинки;
						НоваяСтрока.ПутьТекОбъектПервый=Стр.ПутьТекОбъект;
						НоваяСтрока.ПутьТекОбъектВторой=НоваяСтрокаСравнения.ПутьТекОбъект;
						НоваяСтрока.ПутьТекОбъектТретий=НоваяСтрокаСравненияВторая.ПутьТекОбъект;
						Если РазмерПервогоФайла<>РазмерВторогоФайла тогда
							НоваяСтрока.ИзмененияПервыйВторой=1;
						Иначе
							НоваяСтрока.ИзмененияПервыйВторой=0;
						КонецЕсли;
						Если РазмерПервогоФайла<>РазмерТретьегоФайла тогда
							НоваяСтрока.ИзмененияПервыйТретий=1;
						Иначе
							НоваяСтрока.ИзмененияПервыйТретий=0;
						КонецЕсли;
						Если  РазмерВторогоФайла<>РазмерТретьегоФайла тогда
							НоваяСтрока.ИзмененияВторойТретий=1;
						Иначе
							НоваяСтрока.ИзмененияВторойТретий=0;
						КонецЕсли;
					Иначе
						//изменений нет - строку не создаем
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		ПереборДереваТрехуровневый(Стр,Уровень+1,НоваяСтрокаСравнения,НоваяСтрокаСравненияВторая);
	КонецЦикла;
КонецПроцедуры

Процедура ПереборТрехуровневыйИерархический(СтрокаДерева,Уровень,СтрокаНовогоДерева,СтрокаСравнения,СтрокаСравненияВторая)
	Для Каждого Стр Из СтрокаДерева.Строки Цикл
		НоваяСтрока=Неопределено;
		НоваяСтрокаСравнения=Неопределено;
		НоваяСтрокаСравненияВторая=Неопределено;
		ЕстьИзменения=0;
		ОбработкаПрерыванияПользователя();
		
		Если  СтрокаСравнения<>Неопределено ИЛИ СтрокаСравненияВторая<>Неопределено тогда
			
			Если Стр.ПутьТекОбъект<>"" тогда
				ПервыйФайл=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект);
				Если ПервыйФайл.ЭтоКаталог() тогда
					ПервыйФайл=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект+?(Стр.ИндексКартинки=42,"\text",?(Стр.ИндексКартинки=115,"\form","\image")));
					Если ПервыйФайл.Имя<>"form" тогда
						РазмерПервогоФайла=ПервыйФайл.Размер();
					Иначе ФайлМодуляПервойФормы=Новый Файл(КаталогДляРаспаковкиКонфигурации+"\"+Стр.ПутьТекОбъект+"\module");
						РазмерПервогоФайла=ПервыйФайл.Размер()+ФайлМодуляПервойФормы.Размер();
					КонецЕсли;
				Иначе РазмерПервогоФайла=ПервыйФайл.Размер();	
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокаСравнения<>Неопределено тогда
				НоваяСтрокаСравнения=СтрокаСравнения.Строки.Найти(Стр.Синоним,"Синоним");
				Если НоваяСтрокаСравнения<>Неопределено тогда
					Если НоваяСтрокаСравнения.ПутьТекОбъект<>"" тогда
						ВторойФайл=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект);
						Если ВторойФайл.ЭтоКаталог() тогда
							ВторойФайл=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект+?(НоваяСтрокаСравнения.ИндексКартинки=42,"\text",?(НоваяСтрокаСравнения.ИндексКартинки=115,"\form","\image")));
							Если ВторойФайл.Имя<>"form" тогда
								РазмерВторогоФайла=ВторойФайл.Размер();
							Иначе ФайлМодуляВторойФормы=Новый Файл(КаталогДляРаспаковкиОбновления+"\"+НоваяСтрокаСравнения.ПутьТекОбъект+"\module");
								РазмерВторогоФайла=ВторойФайл.Размер()+ФайлМодуляВторойФормы.Размер();
							КонецЕсли;
						Иначе РазмерВторогоФайла=ВторойФайл.Размер();	
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокаСравненияВторая<>Неопределено тогда
				НоваяСтрокаСравненияВторая=СтрокаСравненияВторая.Строки.Найти(Стр.Синоним,"Синоним");
				Если НоваяСтрокаСравненияВторая<>Неопределено тогда
					Если НоваяСтрокаСравненияВторая.ПутьТекОбъект<>"" тогда
						ТретийФайл=Новый Файл(КаталогТретий+"\"+НоваяСтрокаСравненияВторая.ПутьТекОбъект);
						Если ТретийФайл.ЭтоКаталог() тогда
							ТретийФайл=Новый Файл(КаталогТретий+"\"+НоваяСтрокаСравненияВторая.ПутьТекОбъект+?(НоваяСтрокаСравненияВторая.ИндексКартинки=42,"\text",?(НоваяСтрокаСравненияВторая.ИндексКартинки=115,"\form","\image")));
							Если ТретийФайл.Имя<>"form" тогда
								РазмерТретьегоФайла=ТретийФайл.Размер();
							Иначе ФайлМодуляТретьейФормы=Новый Файл(КаталогТретий+"\"+НоваяСтрокаСравненияВторая.ПутьТекОбъект+"\module");
								РазмерТретьегоФайла=ТретийФайл.Размер()+ФайлМодуляТретьейФормы.Размер();
							КонецЕсли;
						Иначе РазмерТретьегоФайла=ТретийФайл.Размер();	
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если СтрокаСравнения<>Неопределено и СтрокаСравненияВторая<>Неопределено тогда
				Если НоваяСтрокаСравнения<>Неопределено и НоваяСтрокаСравненияВторая<>Неопределено  тогда
					НоваяСтрока=СтрокаНовогоДерева.Строки.Добавить();
					НоваяСтрока.СтруктураПервогоФайла=Стр.Наименование;
					НоваяСтрока.КартинкаПервогоФайла=Стр.ИндексКартинки;
					НоваяСтрока.СтруктураВторогоФайла=НоваяСтрокаСравнения.Наименование;
					НоваяСтрока.КартинкаВторогоФайла=НоваяСтрокаСравнения.ИндексКартинки;
					НоваяСтрока.СтруктураТретьегоФайла=НоваяСтрокаСравненияВторая.Наименование;
					НоваяСтрока.КартинкаТретьегоФайла=НоваяСтрокаСравненияВторая.ИндексКартинки;
					НоваяСтрока.ПутьТекОбъектПервый=Стр.ПутьТекОбъект;
					НоваяСтрока.ПутьТекОбъектВторой=НоваяСтрокаСравнения.ПутьТекОбъект;
					НоваяСтрока.ПутьТекОбъектТретий=НоваяСтрокаСравненияВторая.ПутьТекОбъект;
					Если Стр.ПутьТекОбъект<>"" тогда
						Если ФильтрТрехуровневый=3 тогда
							Если РазмерПервогоФайла<>РазмерВторогоФайла и РазмерПервогоФайла<>РазмерТретьегоФайла и  РазмерВторогоФайла<>РазмерТретьегоФайла тогда
								ЕстьИзменения=1;
								НоваяСтрока.ИзмененияПервыйВторой=1;
								НоваяСтрока.ИзмененияПервыйТретий=1;
								НоваяСтрока.ИзмененияВторойТретий=1;
							КонецЕсли;
						ИначеЕсли РазмерПервогоФайла<>РазмерВторогоФайла или РазмерПервогоФайла<>РазмерТретьегоФайла или  РазмерВторогоФайла<>РазмерТретьегоФайла тогда
							ЕстьИзменения=1;
							Если РазмерПервогоФайла<>РазмерВторогоФайла тогда
								НоваяСтрока.ИзмененияПервыйВторой=1;
							Иначе
								НоваяСтрока.ИзмененияПервыйВторой=0;
							КонецЕсли;
							Если РазмерПервогоФайла<>РазмерТретьегоФайла тогда
								НоваяСтрока.ИзмененияПервыйТретий=1;
							Иначе
								НоваяСтрока.ИзмененияПервыйТретий=0;
							КонецЕсли;
							Если  РазмерВторогоФайла<>РазмерТретьегоФайла тогда
								НоваяСтрока.ИзмененияВторойТретий=1;
							Иначе
								НоваяСтрока.ИзмененияВторойТретий=0;
							КонецЕсли;
						Иначе
							ЕстьИзменения=0;
							//изменений нет - строку не создаем
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		ПереборТрехуровневыйИерархический(Стр,Уровень+1,НоваяСтрока,НоваяСтрокаСравнения,НоваяСтрокаСравненияВторая);
		Если НоваяСтрока<>Неопределено и НоваяСтрока.Строки.Количество()=0 и ЕстьИзменения=0 тогда
			НоваяСтрока.Родитель.Строки.Удалить(НоваяСтрока);
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

//==============================================================================================================================================
// ПРОЦЕДУРЫ ДЛЯ СРАВНЕНИЯ 
//==============================================================================================================================================

Процедура СравнитьОбъекты(ПервыйОбъектДляСравнения,ВторойОбъектДляСравнения,ПроизвольноеСравнение=Ложь)
	ФайлСтроки = Новый Файл(ПервыйОбъектДляСравнения.ПутьОбъекта);
	ФайлДляСравнения = Новый Файл(ВторойОбъектДляСравнения.ПутьОбъекта);
	Если ФайлСтроки.ЭтоФайл() тогда
		Если ПервыйОбъектДляСравнения.ВидОбъекта="Ф" И ФайлСтроки.Расширение <> "" тогда
			ПерваяФорма = ПервыйОбъектДляСравнения.ПутьОбъекта;
			ВтораяФорма = ВторойОбъектДляСравнения.ПутьОбъекта;
			Если ПроизвольноеСравнение=Истина Тогда
				Синоним=ПервыйОбъектДляСравнения.Синоним + " vs " + ВторойОбъектДляСравнения.Синоним;
				ПервыйВидМетаданных = ПервыйОбъектДляСравнения.ВидМетаданных;
				ВторойВидМетаданных = ВторойОбъектДляСравнения.ВидМетаданных;
			Иначе
				СтрокаФормы = ДеревоМетаданных.Строки.Найти(ФайлДляСравнения.Имя,"ПутьТекОбъект",Истина);
				Синоним = СтрокаФормы.Синоним;
				Если СтрокаФормы.Родитель.ВидМетаданных="ОбщаяФорма" Тогда
					ПервыйВидМетаданных = "ОбщаяФорма";
					ВторойВидМетаданных = "ОбщаяФорма";
				Иначе
					ПервыйВидМетаданных = СтрокаФормы.Родитель.Родитель.Родитель.ВидМетаданных;
					ВторойВидМетаданных = ПервыйВидМетаданных;
				КонецЕсли;
			КонецЕсли;
			СравнениеФорм(ПерваяФорма,ВтораяФорма,Синоним,ПервыйВидМетаданных,ВторойВидМетаданных,ПроизвольноеСравнение);
		ИначеЕсли ПервыйОбъектДляСравнения.ВидОбъекта = "Р" Тогда
			ПерваяРоль = ПервыйОбъектДляСравнения.ПутьОбъекта;
			ВтораяРоль = ВторойОбъектДляСравнения.ПутьОбъекта;
			Если ПроизвольноеСравнение=Истина Тогда
				ЗаголовокДляСравнения="роли " + ПервыйОбъектДляСравнения.Синоним + " с ролью " + ВторойОбъектДляСравнения.Синоним;
				ПервоеДеревоСравнения=ПервыйОбъектДляСравнения.Дерево;
				ВтороеДеревоСравнения=ВторойОбъектДляСравнения.Дерево;
			Иначе
				ЗаголовокДляСравнения="роли "+ ДеревоМетаданных.Строки.Найти(ФайлДляСравнения.Имя,"ПутьТекОбъект",Истина).Родитель.Наименование + " в различных версиях конфигурации";
				ПервоеДеревоСравнения=ДеревоCf;
				ВтороеДеревоСравнения=ДеревоМетаданных;
			КонецЕсли;
			СравнениеРолей(ПерваяРоль,ВтораяРоль,ЗаголовокДляСравнения,ПервоеДеревоСравнения,ВтороеДеревоСравнения);
		ИначеЕсли ПервыйОбъектДляСравнения.ВидОбъекта = "МОД" Тогда
			СравнениеФайлов = Новый СравнениеФайлов;
			СравнениеФайлов.ПервыйФайл = ПервыйОбъектДляСравнения.ПутьОбъекта;
			Если ФайлДляСравнения.ЭтоФайл() Тогда
				СравнениеФайлов.ВторойФайл = ВторойОбъектДляСравнения.ПутьОбъекта;
			Иначе
				СравнениеФайлов.ВторойФайл = ВторойОбъектДляСравнения.ПутьОбъекта+"\text";
			КонецЕсли;
			СравнениеФайлов.ИгнорироватьПустоеПространство = Истина;
			СравнениеФайлов.УчитыватьРегистр = Истина;
			СравнениеФайлов.СпособСравнения = СпособСравненияФайлов.ТекстовыйДокумент;
			Если НЕ СравнениеФайлов.Сравнить() Тогда
				Если СтруктурноеСравнениеМодулей=Истина  Тогда
					ФормаСтруктурногоСравнения = ПолучитьФорму("ФормаСтруктурногоСравненияМодуля",ЭтаФорма);
					ФормаСтруктурногоСравнения.ПервыйМодуль=ПервыйОбъектДляСравнения.ПутьОбъекта;
					Если ПроизвольноеСравнение=Истина Тогда
						ФормаСтруктурногоСравнения.Модуль=ПервыйОбъектДляСравнения.Синоним + " vs " + ВторойОбъектДляСравнения.Синоним;
					Иначе
						СтрокаМодуля = ДеревоМетаданных.Строки.Найти(ФайлДляСравнения.Имя,"ПутьТекОбъект",Истина);
						ФормаСтруктурногоСравнения.Модуль=СтрокаМодуля.Синоним;
					КонецЕсли;
					Если ФайлДляСравнения.ЭтоФайл() Тогда
						ФормаСтруктурногоСравнения.ВторойМодуль = ВторойОбъектДляСравнения.ПутьОбъекта;
					Иначе
						ФормаСтруктурногоСравнения.ВторойМодуль = ВторойОбъектДляСравнения.ПутьОбъекта + "\text";
					КонецЕсли;
					ФормаСтруктурногоСравнения.Открыть();
				Иначе
					СравнениеФайлов.ПоказатьРазличия();
				КонецЕсли;
			Иначе
				СравнениеФайлов.ПоказатьРазличия();
			КонецЕсли;
		Иначе
			СравнениеФайлов = Новый СравнениеФайлов;
			СравнениеФайлов.ПервыйФайл = ПервыйОбъектДляСравнения.ПутьОбъекта;
			СравнениеФайлов.ВторойФайл = ВторойОбъектДляСравнения.ПутьОбъекта;
			СравнениеФайлов.ИгнорироватьПустоеПространство = Истина;
			СравнениеФайлов.УчитыватьРегистр = Истина;
			Попытка
				СравнениеФайлов.СпособСравнения = СпособСравненияФайлов.ТекстовыйДокумент;
				СравнениеФайлов.ПоказатьРазличия();
			Исключение
				Попытка
					СравнениеФайлов.СпособСравнения = СпособСравненияФайлов.ТабличныйДокумент;
					СравнениеФайлов.ПоказатьРазличия();
				Исключение
					ПервыйТекст = Новый ТекстовыйДокумент;
					ПервыйТекст.Прочитать(ПервыйОбъектДляСравнения.ПутьОбъекта,КодировкаТекста.UTF8);
					ПервыйТекст.УдалитьСтроку(1);
					ВторойТекст = Новый ТекстовыйДокумент;
					ВторойТекст.Прочитать(ВторойОбъектДляСравнения.ПутьОбъекта,КодировкаТекста.UTF8);
					ВторойТекст.УдалитьСтроку(1);
					СравнениеФайлов = ТекстовоеСравнениеВоВременныхФайлах(ПервыйТекст.ПолучитьТекст(),ВторойТекст.ПолучитьТекст());
					СравнениеФайлов.ПоказатьРазличия();
				КонецПопытки;
			КонецПопытки;
		КонецЕсли;
	Иначе
		Если ПервыйОбъектДляСравнения.ВидОбъекта="Ф" Тогда
			МодульОбъекта = "module";
			СравнениеФорм = истина;
		ИначеЕсли ПервыйОбъектДляСравнения.ВидОбъекта="МОД1" Тогда 
			МодульОбъекта="image";
		Иначе
			МодульОбъекта = "text";
		КонецЕсли;
		Если СравнениеФорм <> истина тогда
			Если МодульОбъекта="text" и СтруктурноеСравнениеМодулей=Истина Тогда
				ФормаСтруктурногоСравнения = ПолучитьФорму("ФормаСтруктурногоСравненияМодуля",ЭтаФорма);
				ФормаСтруктурногоСравнения.ПервыйМодуль=ПервыйОбъектДляСравнения.ПутьОбъекта + "\text";
				Если ПроизвольноеСравнение=Истина Тогда
					ФормаСтруктурногоСравнения.Модуль=ПервыйОбъектДляСравнения.Синоним + " vs " + ВторойОбъектДляСравнения.Синоним;
				Иначе
					СтрокаМодуля = ДеревоМетаданных.Строки.Найти(ФайлДляСравнения.Имя,"ПутьТекОбъект",Истина);
					ФормаСтруктурногоСравнения.Модуль=СтрокаМодуля.Синоним;
				КонецЕсли;
				Если ФайлДляСравнения.ЭтоФайл() Тогда
					ФормаСтруктурногоСравнения.ВторойМодуль = ВторойОбъектДляСравнения.ПутьОбъекта;
				Иначе
					ФормаСтруктурногоСравнения.ВторойМодуль = ВторойОбъектДляСравнения.ПутьОбъекта + "\text";
				КонецЕсли;
				ФормаСтруктурногоСравнения.Открыть();
			Иначе
				ФайлДляСравнения = Новый Файл(ВторойОбъектДляСравнения.ПутьОбъекта);
				СравнениеФайлов = Новый СравнениеФайлов;
				СравнениеФайлов.ПервыйФайл = ПервыйОбъектДляСравнения.ПутьОбъекта+"\"+МодульОбъекта;
				Если ФайлДляСравнения.ЭтоФайл() Тогда
					СравнениеФайлов.ВторойФайл = ВторойОбъектДляСравнения.ПутьОбъекта;
				Иначе
					СравнениеФайлов.ВторойФайл = ВторойОбъектДляСравнения.ПутьОбъекта+"\"+МодульОбъекта;
				КонецЕсли;
				СравнениеФайлов.ИгнорироватьПустоеПространство = Истина;
				СравнениеФайлов.УчитыватьРегистр = Истина;
				СравнениеФайлов.СпособСравнения = СпособСравненияФайлов.ТекстовыйДокумент;
				СравнениеФайлов.ПоказатьРазличия();
				
			КонецЕсли;
		Иначе 
			ПерваяФорма = ПервыйОбъектДляСравнения.ПутьОбъекта;
			ВтораяФорма = ВторойОбъектДляСравнения.ПутьОбъекта;
			Если ПроизвольноеСравнение=Истина Тогда
				Синоним=ПервыйОбъектДляСравнения.Синоним + " vs " + ВторойОбъектДляСравнения.Синоним;
				ПервыйВидМетаданных = ПервыйОбъектДляСравнения.ВидМетаданных;
				ВторойВидМетаданных = ВторойОбъектДляСравнения.ВидМетаданных;
			Иначе
				СтрокаФормы=ДеревоМетаданных.Строки.Найти(ФайлДляСравнения.Имя,"ПутьТекОбъект",Истина);
				Синоним = СтрокаФормы.Синоним;
				Если СтрокаФормы.Родитель.ВидМетаданных="ОбщаяФорма" Тогда
					ПервыйВидМетаданных = "ОбщаяФорма";
					ВторойВидМетаданных = "ОбщаяФорма";
				Иначе
					ПервыйВидМетаданных = СтрокаФормы.Родитель.Родитель.Родитель.ВидМетаданных;
					ВторойВидМетаданных = ПервыйВидМетаданных;
				КонецЕсли;
			КонецЕсли;
			СравнениеФорм(ПерваяФорма,ВтораяФорма,Синоним,ПервыйВидМетаданных,ВторойВидМетаданных,ПроизвольноеСравнение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СравнениеФорм(ПутьПервойФормы,ПутьВторойФормы,Синоним,ПервыйВидМетаданных,ВторойВидМетаданных,ПроизвольноеСравнение)
	
	Форм = ПолучитьФорму("РазборФормы");
	
	ФайлФормы = Новый Файл(ПутьПервойФормы);
	ФайлВторойФормы = Новый Файл(ПутьВторойФормы);
	
	Форм.ГиперссылкаФормы = Синоним;
	Форм.ВидМетаданныхОбъекта = ПервыйВидМетаданных;
	
	Форм.СравнениеФорм = истина;
	
	Если ФайлФормы.ЭтоКаталог()=Истина тогда
		
		ДиалогПервойФормы = ПутьПервойФормы+"\form";
		МодульПервойФормы = ПутьПервойФормы+"\module";
		ТекстПервойФормы  = Новый ТекстовыйДокумент;
		ТекстПервойФормы.Прочитать(ДиалогПервойФормы);
		ПерваяФормаСтрокой = "{""#"",5c83cba4-7a20-4102-a5be-add0ee74f6a1,"+Символы.ПС+ТекстПервойФормы.ПолучитьТекст()+Символы.ПС+"}";
		
		Попытка
			ПерваяФорма      = ЗначениеИзСтрокиВнутр(ПерваяФормаСтрокой);
			КопияПервойФормы = ЗначениеИзСтрокиВнутр(ПерваяФормаСтрокой);
		Исключение
			Возврат;
		КонецПопытки;
		
		Форм.ФормаСтрокой    = ДиалогПервойФормы;
		Форм.ФайлПервойФормы = ДиалогПервойФормы;
		Форм.МодульФормы     = МодульПервойФормы;
		
		Если ФайлВторойФормы.ЭтоКаталог() тогда
			ДиалогВторойФормы = ПутьВторойФормы+"\form";
			МодульВторойФормы = ПутьВторойФормы+"\module";
			ТекстВторойФормы  = Новый ТекстовыйДокумент;
			ТекстВторойФормы.Прочитать(ДиалогВторойФормы);
			ВтораяФормаСтрокой = "{""#"",5c83cba4-7a20-4102-a5be-add0ee74f6a1,"+Символы.ПС+ТекстВторойФормы.ПолучитьТекст()+Символы.ПС+"}";
			
			Попытка
				ВтораяФорма      = ЗначениеИзСтрокиВнутр(ВтораяФормаСтрокой);
				КопияВторойФормы = ЗначениеИзСтрокиВнутр(ВтораяФормаСтрокой);
			Исключение
				Возврат;
			КонецПопытки;
			
			СравнениеМодулейФорм = Новый СравнениеФайлов;
			СравнениеМодулейФорм.ПервыйФайл = МодульПервойФормы;
			СравнениеМодулейФорм.ВторойФайл = МодульВторойФормы;
			СравнениеМодулейФорм.УчитыватьРегистр = Истина;
			СравнениеМодулейФорм.ИгнорироватьПустоеПространство = Истина;
			Если СравнениеМодулейФорм.Сравнить() = истина Тогда
				Форм.МодулиРазличны = ложь;
				СравнениеФайловФорм = Новый СравнениеФайлов;
				СравнениеФайловФорм.ПервыйФайл = ДиалогПервойФормы;
				СравнениеФайловФорм.ВторойФайл = ДиалогВторойФормы;
				Если СравнениеФайловФорм.Сравнить() = истина Тогда
					Предупреждение("Формы полностью идентичны!");
					Возврат;
				КонецЕсли; 
			Иначе Форм.МодулиРазличны = истина;	
			КонецЕсли; 
			
			Форм.РасширенныйАнализ = истина;
			Форм.Открыть();
			
			Форм.СформироватьСписокРеквизитовФормы(Форм.СписокРеквизитов,ПерваяФорма);
			Форм.ПостроитьДерево(КопияПервойФормы,ПерваяФорма,Форм.ДеревоЭлементовФормы);
			
			Форм.ФормаСтрокой      = ДиалогВторойФормы;
			Форм.МодульВторойФормы = МодульВторойФормы;
			Форм.ВидМетаданныхПервогоОбъекта = ПервыйВидМетаданных;
			Форм.ВидМетаданныхОбъекта = ВторойВидМетаданных;
			
			Форм.СформироватьСписокРеквизитовДляСравнения(ВтораяФорма);
			Форм.ПостроитьДеревоДляСравнения(КопияВторойФормы,ВтораяФорма);
			
			Форм.ПостроитьДеревоСравнения();
			Форм.ЗаполнитьТаблицуСравненияПроцедурМодулейФорм();
			
			
		Иначе Предупреждение("Не предусмотрено сравнение обычных форм с управляемыми!");
		КонецЕсли;
	ИначеЕсли ФайлВторойФормы.ЭтоФайл() Тогда
		
		СравнениеФайловФорм=Новый СравнениеФайлов;
		СравнениеФайловФорм.ПервыйФайл=ПутьПервойФормы;
		СравнениеФайловФорм.ВторойФайл=ПутьВторойФормы;
		СравнениеФайловФорм.ИгнорироватьПустоеПространство=Истина;
		СравнениеФайловФорм.УчитыватьРегистр=Истина;
		Если СравнениеФайловФорм.Сравнить()=истина Тогда
			Предупреждение("Формы полностью идентичны!");
			Возврат;
		КонецЕсли; 
		
		Форм.РасширенныйАнализ=ложь;
		Форм.ФормаСтрокой=ПутьПервойФормы;
		Форм.ФайлПервойФормы=ПутьПервойФормы;
		
		Форм.Открыть();
		
		Форм.ПостроитьДеревоУправляемойФормы(Форм.ДеревоЭлементовФормы);
		
		Форм.ФормаСтрокой=ПутьВторойФормы;
		Форм.ВидМетаданныхПервогоОбъекта = ПервыйВидМетаданных;
		Форм.ВидМетаданныхОбъекта = ВторойВидМетаданных;
		Форм.ПостроитьДеревоДляСравненияУправляемойФормы();
		
	Иначе 
		Предупреждение("Не предусмотрено сравнение обычных форм с управляемыми!");
	КонецЕсли;
	
КонецПроцедуры

Процедура СравнениеРолей(ПутьПервойРоли,ПутьВторойРоли,ЗаголовокФормы,ПервоеДеревоСравнения,ВтороеДеревоСравнения)
	
	Форм = ПолучитьФорму("ФормаДляРолей",ЭтаФорма);
	
	ТекстПервойРоли = Новый ТекстовыйДокумент;
	ТекстПервойРоли.Прочитать(ПутьПервойРоли);
	ТекстВторойРоли = Новый ТекстовыйДокумент;
	ТекстВторойРоли.Прочитать(ПутьВторойРоли);
	
	Если ПервоеДеревоСравнения=ДеревоCf Тогда
		Форм.СоответствиеСтрок = СоответствиеСтрокПервогоДерева;
	ИначеЕсли ПервоеДеревоСравнения=ДеревоМетаданных и РежимСравнения=0 Тогда	
		Форм.СоответствиеСтрок = СоответствиеСтрокПервогоДерева;
	ИначеЕсли ПервоеДеревоСравнения=ДеревоМетаданных Тогда
		Форм.СоответствиеСтрок=СоответствиеСтрокВторогоДерева;
	Иначе
		Форм.СоответствиеСтрок=СоответствиеСтрокТретьегоДерева;
	КонецЕсли;
	Если ВтороеДеревоСравнения=ДеревоCf Тогда
		Форм.СоответствиеСтрокВторое=СоответствиеСтрокВторогоДерева;
	ИначеЕсли ВтороеДеревоСравнения=ДеревоМетаданных и РежимСравнения=0 Тогда
		Форм.СоответствиеСтрокВторое=СоответствиеСтрокПервогоДерева;
	ИначеЕсли ВтороеДеревоСравнения=ДеревоМетаданных Тогда
		Если РежимВыбораОбъекта=2 Тогда
			ВремСоответствие=Новый Соответствие;
			Для каждого Пл Из СоответствиеСтрокПервогоДерева Цикл
				ВремСоответствие.Вставить(Пл.Ключ,СоответствиеСтрокПервогоДерева.Получить(Пл.Ключ));
			КонецЦикла;
			Для каждого Эл Из СоответствиеСтрокВторогоДерева Цикл
				ВремСоответствие.Вставить(Эл.Ключ,СоответствиеСтрокВторогоДерева.Получить(Эл.Ключ));
			КонецЦикла;
			Форм.СоответствиеСтрокВторое = ВремСоответствие;
		Иначе
			Форм.СоответствиеСтрокВторое = СоответствиеСтрокВторогоДерева;
		КонецЕсли;
	Иначе 
		Форм.СоответствиеСтрокВторое = СоответствиеСтрокТретьегоДерева;	
	КонецЕсли;
	Форм.Текст1С            = ТекстПервойРоли.ПолучитьТекст();
	Форм.Текст2С            = ТекстВторойРоли.ПолучитьТекст();
	Форм.Дерево             = ПервоеДеревоСравнения;
	Форм.ДеревоДляСравнения = ВтороеДеревоСравнения;
	Форм.ЗаголовокФормы     = ЗаголовокФормы;
	Форм.СравнениеРолей     = Истина;
	Форм.Открыть();
	
КонецПроцедуры

//==============================================================================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//==============================================================================================================================================

Функция ОпределитьОбъектОбновления()
	РегулярноеВыражениеОО=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеОО.Multiline=истина;
	РегулярноеВыражениеОО.IgnoreCase=истина;
	РегулярноеВыражениеОО.Global=истина;
	РегулярноеВыражениеОО.Pattern="\{\d,(\d)((,""(([^\},\{\n])+)"",""(([^\},\{\n])+)"",""(([^\},\{\n])+)"",(\w{8}-\w{4}-\w{4}-\w{4}-\w{12}))+),((([^\},\{\n])+,)+)""(([^\},\{\n])+)"",""(([^\},\{\n])+)"",""(([^\},\{\n])+)"",(([^\},\{\n])+),\n";
	Matches=РегулярноеВыражениеОО.Execute(ТекстСтрокой);
	Для Каждого Match Из Matches цикл
	КонецЦикла;
	ПолученныйЗаголовок="Обновление "+Match.Submatches(17)+" для конфигурации "+Match.Submatches(13);
	ВывестиИнформациюНаПанель(КаталогДляРаспаковкиОбновления,ПолученныйЗаголовок);
	Если РежимСравнения=1 тогда
		ЭлементыФормы.ПоддерживаемыеРелизы1.Заголовок="Подходит для обновления релиз";
	Иначе
		ЭлементыФормы.ПоддерживаемыеРелизы.Заголовок="Подходит для обновления релиз";
	КонецЕсли;
	РегЭксп=Новый COMОбъект("VBScript.RegExp");
	РегЭксп.Multiline=истина;
	РегЭксп.IgnoreCase=истина;
	РегЭксп.Global=истина;
	РегЭксп.Pattern=",""([^\},\{\n]+)"",""([^\},\{\n]+)"",""([^\},\{\n]+)"",(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})";
	Матчес=РегЭксп.Execute(Match.Submatches(1));
	Если РежимСравнения=1 тогда
		ЭлементыФормы.ПоддерживаемыеРелизы1.Заголовок=ЭлементыФормы.ПоддерживаемыеРелизы1.Заголовок+?(Матчес.Count>1,"ов ","а ");	
	Иначе
		ЭлементыФормы.ПоддерживаемыеРелизы.Заголовок=ЭлементыФормы.ПоддерживаемыеРелизы.Заголовок+?(Матчес.Count>1,"ов ","а ");	
	КонецЕсли;
	Для каждого Матч из Матчес цикл
		Если РежимСравнения=1 тогда
			ЭлементыФормы.ПоддерживаемыеРелизы1.Заголовок=ЭлементыФормы.ПоддерживаемыеРелизы1.Заголовок+Матч.Submatches(2)+?(Матчес.Count>1,", "," ")	
		Иначе
			ЭлементыФормы.ПоддерживаемыеРелизы.Заголовок=ЭлементыФормы.ПоддерживаемыеРелизы.Заголовок+Матч.Submatches(2)+?(Матчес.Count>1,", "," ")	
		КонецЕсли;
	КонецЦикла;
	Возврат Match.Submatches(13);
КонецФункции

Процедура ПолучитьДанныеМассиваЗначений(Текст,МассивЗначений)
	Matches=РегулярноеВыражениеX.Execute(Текст);
	Для каждого Match Из Matches Цикл
		МассивЗначений[0]=Match.SubMatches(0);
		МассивЗначений[1]=Match.SubMatches(1);
	КонецЦикла;
КонецПроцедуры

Процедура ОбработатьФайлПоРасширению(ТекКаталог,СтрокаРодителя,м,Режим,ч)
	Если ТекКаталог.Расширение=".und" тогда
		ТекФайл=Новый файл(ТекКаталог.Путь+ТекКаталог.ИмяБезРасширения);
		Расширение=ТекФайл.Расширение;
	Иначе Расширение=ТекКаталог.Расширение;	
	КонецЕсли;
	//Макет=ЭтотОбъект.ПолучитьМакет("МакетРасширений");
	Если МакетРасширений.Области.Найти(СтрокаРодителя.ВидМетаданных)<>Неопределено Тогда
		ОбластьМакета=МакетРасширений.Области.Найти(СтрокаРодителя.ВидМетаданных);
	Иначе	ОбластьМакета=МакетРасширений.Область("Остальные");
	КонецЕсли;
	Ячейка=МакетРасширений.НайтиТекст(Расширение,,ОбластьМакета,Истина,Истина);
	Поз=Найти(Ячейка.Имя,"C");
	ЗначениеЯчейки=Лев(Ячейка.Имя,Поз)+Строка(Число(Прав(Ячейка.Имя,СтрДлина(Ячейка.Имя)-Поз))+1);
	ЗначениеЯчейкиСинонима=Лев(Ячейка.Имя,Поз)+Строка(Число(Прав(Ячейка.Имя,СтрДлина(Ячейка.Имя)-Поз))+4);
	ЗначениеЯчейкиИндексаКартинки=Лев(Ячейка.Имя,Поз)+Строка(Число(Прав(Ячейка.Имя,СтрДлина(Ячейка.Имя)-Поз))+3);
	ЗначениеЯчейкиОбъекта=Лев(Ячейка.Имя,Поз)+Строка(Число(Прав(Ячейка.Имя,СтрДлина(Ячейка.Имя)-Поз))+2);
	НашаСтрока=СтрокаРодителя.Строки.Найти(МакетРасширений.Область(ЗначениеЯчейки).Текст,"Наименование");
	Если НашаСтрока=Неопределено тогда
		ПодчиненнаяСтрока=СтрокаРодителя.Строки.Добавить();
		ПодчиненнаяСтрока.Наименование=МакетРасширений.Область(ЗначениеЯчейки).Текст;
		ПодчиненнаяСтрока.Объект=МакетРасширений.Область(ЗначениеЯчейкиОбъекта).Текст;
		Если ПодчиненнаяСтрока.Объект="Ф" тогда 		
			ПодчиненнаяСтрока.Синоним=СтрокаРодителя.Синоним;
		Иначе ПодчиненнаяСтрока.Синоним=СтрокаРодителя.Синоним+"."+МакетРасширений.Область(ЗначениеЯчейкиСинонима).Текст;
		КонецЕсли;
		ПодчиненнаяСтрока.ИндексКартинки=МакетРасширений.Область(ЗначениеЯчейкиИндексаКартинки).Текст;
		Если ПодчиненнаяСтрока.ИндексКартинки=0 Тогда
			ПодчиненнаяСтрока.ИндексКартинки=СтрокаРодителя.ИндексКартинки
		КонецЕсли;
		Если СтрокаРодителя.ВидМетаданных="Макет" Тогда
			ТекстМакета=Новый ТекстовыйДокумент();
			ТекстМакета.Прочитать(ТекКаталог.Путь+"\"+СтрокаРодителя.ПутьТекОбъект);
			ТекстПараметра=ТекстМакета.ПолучитьТекст();
			МакетСтрока=Сред(ТекстПараметра,8,1);
			ПодчиненнаяСтрока.Объект=ПодчиненнаяСтрока.Объект+МакетСтрока;
		ИначеЕсли  СтрокаРодителя.ВидМетаданных="ОбщийМакет" Тогда
			ТекстМакета=Новый ТекстовыйДокумент();
			ТекстМакета.Прочитать(ТекКаталог.Путь+"\"+СтрокаРодителя.ПутьТекОбъект);
			ТекстПараметра=ТекстМакета.ПолучитьТекст();
			МакетСтрока=ОпределитьТипОбщегоМакета(ТекстПараметра);
			ПодчиненнаяСтрока.Объект=ПодчиненнаяСтрока.Объект+МакетСтрока;
		КонецЕсли;
		Если ФайлПрограммыРаспаковки=Неопределено тогда
			Инициализация();
		КонецЕсли;
		Если Режим<>"ТолькоДерево" тогда
			КоманднаяСтрокаUnpack = """" + ФайлПрограммыРаспаковки.ПолноеИмя + """ -parse """ + ТекКаталог.ПолноеИмя + """ """ + ТекКаталог.ПолноеИмя + ".und""";
			WshShell.Run(КоманднаяСтрокаUnpack, 0, Истина);
		КонецЕсли;
		Файл=Новый Файл(ТекКаталог.Путь+"\"+ТекКаталог.Имя+".und");
		Если Файл.Существует() тогда
			СоответствиеИдентификаторов.Вставить(ТекКаталог.Имя, ПодчиненнаяСтрока.Синоним);
			НужноеСоответствие.Вставить(ТекКаталог.Имя,ПодчиненнаяСтрока);
			ПодчиненнаяСтрока.ПутьТекОбъект=ТекКаталог.Имя+".und";
			ТекКаталог=Файл;
		Иначе 	ПодчиненнаяСтрока.ПутьТекОбъект=ТекКаталог.Имя;
		КонецЕсли;
		Если ТекКаталог.Расширение<>"" Тогда
			СоответствиеИдентификаторов.Вставить(ПодчиненнаяСтрока.ПутьТекОбъект, ПодчиненнаяСтрока.Синоним);
			НужноеСоответствие.Вставить(ПодчиненнаяСтрока.ПутьТекОбъект,ПодчиненнаяСтрока);
			м=м+1;
			ч=ч+1;
		КонецЕсли;
		Если НЕ ТекКаталог.ЭтоФайл() Тогда
			СписокФайлов=НайтиФайлы(ТекКаталог.ПолноеИмя+"\","*");
			Модуль="";
			Для т=0 по СписокФайлов.Количество()-1 Цикл
				ТекФайл=СписокФайлов.Получить(т);
				Если (СтрокаРодителя.ВидМетаданных="ОбщаяФорма") ИЛИ (СтрокаРодителя.ВидМетаданных="Форма") Тогда
					МодульОбъекта="module";
				Иначе МодульОбъекта="text";
				КонецЕсли;
				Если текФайл.Имя=МодульОбъекта Тогда
					Модуль=Модуль+МодульОбъекта;
				ИначеЕсли текФайл.Имя="image" Тогда
					Модуль=Модуль+"image";
				КонецЕсли;
			КонецЦикла;
			Если Модуль<>"module" Тогда
				Если Модуль=МодульОбъекта Тогда 
					ПодчиненнаяСтрока.ИндексКартинки=42;
				ИначеЕсли Модуль="image" Тогда 
					ПодчиненнаяСтрока.ИндексКартинки=43;
					ПодчиненнаяСтрока.Объект="МОД1"
				Иначе ПодчиненнаяСтрока.ИндексКартинки=41;
					ПодчиненнаяСтрока.Объект="МОД1"
				КонецЕсли;
			КонецЕсли;
			Модуль="";
		КонецЕсли;
	конецЕсли;
КонецПроцедуры

Функция ОпределитьТипОбщегоМакета(ТекстПараметра)
	РегулярноеВыражение=Новый COMОбъект("VBScript.Regexp");
	РегулярноеВыражение.Multiline=истина;
	РегулярноеВыражение.IgnoreCase=истина;
	РегулярноеВыражение.Pattern="\{0,0,\w{8}-\w{4}-\w{4}-\w{4}-\w{12}\},""(.*)""[^{]*\{(\d(,""\w\w"",""(.*)"")*)\},""(.*)""\},(\d)";
	Matches=РегулярноеВыражение.Execute(ТекстПараметра);
	Для каждого Match из Matches Цикл
	КонецЦикла;
	ТипМакета=Match.Submatches(5);
	Возврат ТипМакета;
КонецФункции

Функция ПолучитьНазваниеПараметра(ИдентификаторПараметра,СтрокиРеквизитов,НужныйКаталог) Экспорт
	ТекстОписанияОбъекта = Новый ТекстовыйДокумент();
	ТекстОписанияОбъекта.Прочитать(НужныйКаталог + "\" + ИдентификаторПараметра);
	Текст=ТекстОписанияОбъекта.ПолучитьТекст();
	МассивЗначений=Новый Массив(2);
	ПолучитьДанныеМассиваЗначений(Текст,МассивЗначений);
	ИмяОбъекта=МассивЗначений[1];
	Возврат ИмяОбъекта;
КонецФункции

Процедура ОткрытьФайлСправки(Текст)
	т=0;
	Форм=ЭтотОбъект.ПолучитьФорму("ФормаHTML");
	РегулярноеВыражение=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражение.Multiline=истина;
	РегулярноеВыражение.IgnoreCase=истина;
	РегулярноеВыражение.Global=истина;
	РегулярноеВыражение.Pattern="(""(.*)""|\d),.{1,4},\s\{#base64:(([^\}]*(\s)*[^\}]*)*)\}";
	Matches=РегулярноеВыражение.Execute(Текст.ПолучитьТекст());
	д=0;
	Для каждого Match Из Matches Цикл
		т=т+1;
		Если т=1 Тогда
			Текст=Match.SubMatches(2);
			ТекстHTML=Base64Значение(текст);
			ТекстHTML.Записать(КаталогВременныхФайлов()+"текст.html");
			ВременныйФайл = Новый Файл(КаталогВременныхФайлов()+"текст.html");
			КоллекцияВременныхФайлов.Добавить(ВременныйФайл);
			Текст1=Новый ТекстовыйДокумент;
			Текст1.Прочитать(КаталогВременныхФайлов()+"текст.html",КодировкаТекста.UTF8);
			Текст1.ПолучитьТекст();
		Иначе Рисунок=Match.SubMatches(2);
			Наименование=Match.SubMatches(1);
			РисунокЗначение=Base64Значение(Рисунок);
			ИмяКаталогаРисунков=КаталогВременныхФайлов()+"038b5c85-fb1c-4082-9c4c-e69f8928bf3a_files\";
			КаталогРисунков=Новый файл(ИмяКаталогаРисунков);
			Если  НЕ КаталогРисунков.Существует() Тогда
				FSO=Новый COMОбъект("Scripting.FileSystemObject");
				FSO.CreateFolder(ИмяКаталогаРисунков);
			КонецЕсли;
			РисунокЗначение.Записать(КаталогВременныхФайлов()+"038b5c85-fb1c-4082-9c4c-e69f8928bf3a_files\"+Наименование);
			ВременныйФайл=Новый Файл(КаталогВременныхФайлов()+"038b5c85-fb1c-4082-9c4c-e69f8928bf3a_files\"+Наименование);
			КоллекцияВременныхФайлов.Добавить(ВременныйФайл);
			д=д+1;
		КонецЕсли;
	КонецЦикла;
	Форм.Открыть();
	Форм.ЭлементыФормы.ПолеHTMLДокумента.Перейти(КаталогВременныхФайлов()+"текст.html");
КонецПроцедуры

Процедура ОткрытьКартинку(Текст)
	РегулярноеВыражение=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражение.Multiline=истина;
	РегулярноеВыражение.IgnoreCase=истина;
	РегулярноеВыражение.Pattern="\{#base64:((.*(\s)*)*)\}";
	Matches=РегулярноеВыражение.Execute(Текст.ПолучитьТекст());
	Для каждого Match Из Matches Цикл
		Текст=Match.SubMatches(0);
	КонецЦикла;
	Если Match=Неопределено тогда
		РегулярноеВыражение.Pattern="\{#data:((.*(\s)*)*)\}\n\}\n\}";
		Matches=РегулярноеВыражение.Execute(Текст.ПолучитьТекст());
		Для каждого Match Из Matches Цикл
			Текст=Match.SubMatches(0);
		КонецЦикла;
	КонецЕсли;
	ТекстHTML=Base64Значение(текст);
	ТекстHTML.Записать(КаталогВременныхФайлов()+"рисунок");
	ФайлТекстHTML = Новый Файл(КаталогВременныхФайлов()+"рисунок");
	КоллекцияВременныхФайлов.Добавить(ФайлТекстHTML);
	Путь=ФайлТекстHTML.ПолноеИмя;
	Форм=ЭтотОбъект.ПолучитьФорму("ФормаКартинки");
	Форм.реквизит=Путь;
	Форм.Открыть();
КонецПроцедуры

Процедура ОткрытьРоль(Текст,Дерево,ЗаголовокФормы)
	
	Форм = ПолучитьФорму("ФормаДляРолей",ЭтаФорма);
	Если Дерево=ДеревоCf  Тогда
		Форм.СоответствиеСтрок = СоответствиеСтрокПервогоДерева;
	ИначеЕсли Дерево=ДеревоМетаданных И РежимСравнения=0 Тогда	
		Форм.СоответствиеСтрок = СоответствиеСтрокПервогоДерева;
	ИначеЕсли Дерево=ДеревоМетаданных Тогда
		Форм.СоответствиеСтрок = СоответствиеСтрокВторогоДерева;
	ИначеЕсли Дерево=ТретьеДерево Тогда
		Форм.СоответствиеСтрок = СоответствиеСтрокТретьегоДерева;
	КонецЕсли;
	Форм.Текст1С        = Текст.ПолучитьТекст();
	Форм.Дерево         = Дерево;
	Форм.ЗаголовокФормы = ЗаголовокФормы;
	Форм.СравнениеРолей = Ложь;
	Форм.Открыть();
	
КонецПроцедуры

Процедура ОткрытьФормуДвоичныхДанных(ВыбраннаяСтрока,Текст)
	РегулярноеВыражение=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражение.Multiline=истина;
	РегулярноеВыражение.IgnoreCase=истина;
	РегулярноеВыражение.Pattern="\{#base64:((.*(\s)*)*)\}";
	Matches=РегулярноеВыражение.Execute(Текст.ПолучитьТекст());
	Для каждого Match Из Matches Цикл
		Текст=Match.SubMatches(0);
	КонецЦикла;
	ТекстФайла=Base64Значение(текст);
	форм=ЭтотОбъект.ПолучитьФорму("ФормаДвоичныхДанных");
	Форм.реквизит=ТекстФайла;
	Форм.ИмяФайла=ВыбраннаяСтрока.Родитель.Наименование;
	Форм.Открыть();
КонецПроцедуры

Процедура УправлениеВидимостьюКнопок()
	МассивВключаемыхКнопок=Новый Массив;
	Если РежимСравнения=0 тогда
		Если КаталогДляРаспаковкиОбновления="" тогда
			ЭлементыФормы.Выполнить3.Видимость=истина;
			ЭлементыФормы.Выполнить3.Доступность=Истина;
			МассивВключаемыхКнопок.Добавить(ЭлементыФормы.Выполнить3);
			ОтключитьОстальные(МассивВключаемыхКнопок);
		Иначе ЭлементыФормы.Выполнить1.Видимость=истина;
			ЭлементыФормы.Выполнить1.Доступность=Истина;
			МассивВключаемыхКнопок.Добавить(ЭлементыФормы.Выполнить1);
			ЭлементыФормы.Выполнить2.Видимость=истина;
			ЭлементыФормы.Выполнить2.Доступность=Истина;
			МассивВключаемыхКнопок.Добавить(ЭлементыФормы.Выполнить2);
			ОтключитьОстальные(МассивВключаемыхКнопок);
		КонецЕсли;
	Иначе
		Если КаталогДляРаспаковкиКонфигурации="" тогда
			ЭлементыФормы.Выполнить6.Видимость=Истина;
			ЭлементыФормы.Выполнить6.Доступность=Истина;
			МассивВключаемыхКнопок.Добавить(ЭлементыФормы.Выполнить6);
			ОтключитьОстальные(МассивВключаемыхКнопок);
		Иначе ЭлементыФормы.Выполнить4.Видимость=Истина;
			ЭлементыФормы.Выполнить4.Доступность=Истина;
			МассивВключаемыхКнопок.Добавить(ЭлементыФормы.Выполнить4);
			ЭлементыФормы.Выполнить5.Видимость=Истина;
			ЭлементыФормы.Выполнить5.Доступность=Истина;
			МассивВключаемыхКнопок.Добавить(ЭлементыФормы.Выполнить5);
			ОтключитьОстальные(МассивВключаемыхКнопок);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура УправлениеЗаголовками()
	//Управление отображением заголовков полей ввода
	Если РежимВыбораОбъекта=0 тогда
		Если РежимСравнения=0 тогда
			ЭлементыФормы.НадписьИмяФайла.Заголовок="Файл cf:";
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu.Заголовок="Дерево cf";
			Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы конфигурации";
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Верх;
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
			КонецЕсли;
		Иначе 
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf.Заголовок="Первый cf";
			ЭлементыФормы.НадписьИмяФайла1.Заголовок="Файл первого cf:";
			ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураКонфигурации.ТекстШапки="Структура первой конфигурации";
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu.Заголовок="Второй cf";
			ЭлементыФормы.НадписьИмяФайла.Заголовок="Файл второго cf:";	
			ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураОбновления.ТекстШапки="Структура второй конфигурации";
			Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первой конфигурации";
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второй конфигурации";
				Если РежимСравнения=2 тогда
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления2.Заголовок="Файлы третьей конфигурации";
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Нет;
				Иначе
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Видимость=Истина;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
				КонецЕсли;
			КонецЕсли;
			Если РежимСравнения=2 тогда
				ЭлементыФормы.НадписьИмяФайла2.Заголовок="Файл третьего cf:";
				ЭлементыФормы.ПанельДляДерева.Страницы.ТретьеДерево.Заголовок="Третий cf";
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли РежимВыбораОбъекта=1 тогда
		Если РежимСравнения=0 тогда
			ЭлементыФормы.НадписьИмяФайла.Заголовок="Файл epf:";
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu.Заголовок="Дерево epf:";
			Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы обработки";
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Верх;
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
			КонецЕсли;
		Иначе
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf.Заголовок="Первый epf";
			ЭлементыФормы.НадписьИмяФайла1.Заголовок="Файл первого epf:";
			ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураКонфигурации.ТекстШапки="Структура первой обработки";
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu.Заголовок="Второй epf";
			ЭлементыФормы.НадписьИмяФайла.Заголовок="Файл второго epf:";
			ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураОбновления.ТекстШапки="Структура второй обработки";
			Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первой обработки";
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второй обработки";
				Если РежимСравнения=2 тогда
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления2.Заголовок="Файлы третьей обработки";
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Нет;
				Иначе
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Видимость=Истина;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
				КонецЕсли;
			КонецЕсли;
			Если РежимСравнения=2 тогда
				ЭлементыФормы.НадписьИмяФайла2.Заголовок="Файл третьего epf:";
				ЭлементыФормы.ПанельДляДерева.Страницы.ТретьеДерево.Заголовок="Третий epf";
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли РежимВыбораОбъекта=3 тогда
		Если РежимСравнения=0 тогда
			ЭлементыФормы.НадписьИмяФайла.Заголовок="Файл erf:";
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu.Заголовок="Дерево erf:";
			Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы отчета";
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Верх;
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
			КонецЕсли;
		Иначе
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf.Заголовок="Первый erf";
			ЭлементыФормы.НадписьИмяФайла1.Заголовок="Файл первого erf:";
			ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураКонфигурации.ТекстШапки="Структура первого отчета";
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu.Заголовок="Второй erf";
			ЭлементыФормы.НадписьИмяФайла.Заголовок="Файл второго erf:";
			ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураОбновления.ТекстШапки="Структура второго отчета";
			Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первого отчета";
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второго отчета";
				Если РежимСравнения=2 тогда
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления2.Заголовок="Файлы третьего отчета";
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Нет;
				Иначе
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Видимость=Истина;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
				КонецЕсли;
			КонецЕсли;
			Если РежимСравнения=2 тогда
				ЭлементыФормы.НадписьИмяФайла2.Заголовок="Файл третьего erf:";
				ЭлементыФормы.ПанельДляДерева.Страницы.ТретьеДерево.Заголовок="Третий erf";
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли РежимВыбораОбъекта=2 тогда
		ЭлементыФормы.НадписьИмяФайла.Заголовок="Файл cfu:";
		ЭлементыФормы.НадписьИмяФайла1.Заголовок="Файл cf:";
		ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf.Заголовок="Дерево cf";
		ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu.Заголовок="Дерево cfu";
		ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураКонфигурации.ТекстШапки="Структура конфигурации";
		ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураОбновления.ТекстШапки="Структура обновления";
		Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
			ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы конфигурации";
			ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы обновления конфигурации";
			Если РежимСравнения=2 тогда
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Верх;
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
			Иначе
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Видимость=Истина;
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если РежимСравнения=0 тогда
			ЭлементыФормы.НадписьИмяФайла.Заголовок="Файл формы:";
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu.Заголовок="Дерево формы:";
			Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы формы";
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Верх;
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
			КонецЕсли;
		Иначе
			ЭлементыФормы.НадписьИмяФайла.Заголовок="Первая форма:";
			ЭлементыФормы.НадписьИмяФайла1.Заголовок="Вторая форма:";
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCf.Заголовок="1-я форма";
			ЭлементыФормы.ПанельДляДерева.Страницы.ДеревоCfu.Заголовок="2-я форма";
			ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураКонфигурации.ТекстШапки="Структура первой формы";
			ЭлементыФормы.СравнениеМетаданных.Колонки.СтруктураОбновления.ТекстШапки="Структура второй формы";
			Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления1.Заголовок="Файлы первой формы";
				ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления.Заголовок="Файлы второй формы";
				Если РежимСравнения=2 тогда
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.НадписьФайлыОбновления2.Заголовок="Файлы третьей формы";
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Нет;
				Иначе
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Видимость=Истина;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель1.Свертка=РежимСверткиЭлементаУправления.Нет;
					ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.Панель2.Свертка=РежимСверткиЭлементаУправления.Низ;
				КонецЕсли;
			КонецЕсли;
			Если РежимСравнения=2 тогда
				ЭлементыФормы.НадписьИмяФайла2.Заголовок="Третья форма:";
				ЭлементыФормы.ПанельДляДерева.Страницы.ТретьеДерево.Заголовок="3-я форма";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиИнформациюНаПанель(КаталогРаспаковки,ПолученныйЗаголовок)
	Если РежимСравнения=1 тогда
		ЭлементыФормы.ПанельОтчета.ТекущаяСтраница=ЭлементыФормы.ПанельОтчета.Страницы.Страница2;
		Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации тогда
			Индекс="1";
		Иначе Индекс="2";
		КонецЕсли;
	Иначе 
		ЭлементыФормы.ПанельОтчета.ТекущаяСтраница=ЭлементыФормы.ПанельОтчета.Страницы.Страница1;
		Индекс="";
	КонецЕсли;
	ЭлементыФормы["Объект"+Индекс].Заголовок=ПолученныйЗаголовок;
	Если Версия="v8_0" Тогда   
		ЭлементыФормы["Версия"+Индекс].Заголовок="для платформы 8.0";
	ИначеЕсли Версия="v8_1" Тогда   
		ЭлементыФормы["Версия"+Индекс].Заголовок="для платформы 8.1";
	Иначе   
		ЭлементыФормы["Версия"+Индекс].Заголовок="для платформы 8.2";
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтключитьОстальные(МассивВключаемыхКнопок)
	Для н=1 по 6 цикл
		Если МассивВключаемыхКнопок.Найти(ЭлементыФормы["Выполнить"+н])<>Неопределено тогда
			Продолжить;
		Иначе ЭлементыФормы["Выполнить"+н]["Видимость"]=ложь;
			ЭлементыФормы["Выполнить"+н]["Доступность"]=ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОчиститьТекущиеДанные()
	
	//очищаем панель дерева метаданных (все три вкладки)
	ЭлементыФормы.ДеревоМетаданных.Значение.Строки.Очистить();
	ЭлементыФормы.ДеревоМетаданных.ОбновитьСтроки();
	Если ЭлементыФормы.ДеревоCf.Значение.Строки.Количество()<>0  тогда
		ЭлементыФормы.ДеревоCf.Значение.Строки.Очистить();
		ЭлементыФормы.ДеревоCf.ОбновитьСтроки();
	КонецЕсли;
	Если ЭлементыФормы.ТретьеДерево.Значение.Строки.Количество()<>0 тогда
		ЭлементыФормы.ТретьеДерево.Значение.Строки.Очистить();
		ЭлементыФормы.ТретьеДерево.ОбновитьСтроки();
	КонецЕсли;
	
	//удаляем сохраненные деревья файлов и очищаем содержимое формы навигатора файлов (все три панели)
	Если ДеревоОбъектовОбновления<>Неопределено и ДеревоОбъектовОбновления.Строки.Количество()<>0 Тогда
		ДеревоОбъектовОбновления.Строки.Очистить();
	КонецЕсли;
	Если ДеревоОбъектовКонфигурации<>Неопределено и ДеревоОбъектовКонфигурации.Строки.Количество()<>0 Тогда
		ДеревоОбъектовКонфигурации.Строки.Очистить();
	КонецЕсли;
	Если ТретьеДеревоОбъектов<>Неопределено и ТретьеДеревоОбъектов.Строки.Количество()<>0 Тогда
		ТретьеДеревоОбъектов.Строки.Очистить();
	КонецЕсли;
	Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).Открыта() тогда
		ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.ДеревоОбъектов.ОбновитьСтроки();
		ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.ОбъектМетаданных.Заголовок="";
		Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ДеревоОбъектов1.Строки.Количество()<>0 тогда
			ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.ДеревоОбъектов1.ОбновитьСтроки();
			ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.ОбъектМетаданных1.Заголовок="";
		КонецЕсли;
		Если ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ДеревоОбъектов2.Строки.Количество()<>0 тогда
			ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.ДеревоОбъектов2.ОбновитьСтроки();
			ПолучитьФорму("НавигаторПоФайлам",ЭтаФорма).ЭлементыФормы.ОбъектМетаданных2.Заголовок="";
		КонецЕсли;
	КонецЕсли;
	
	//очищаем поле просмотра модуля
	ЭлементыФормы.ПолеТекстовогоДокумента1.Очистить();
	
	//очищаем панель отчета об объектах анализа/сравнения
	ЭлементыФормы.Объект.Заголовок="";
	ЭлементыФормы.ПоддерживаемыеРелизы.Заголовок="";
	ЭлементыФормы.Версия.Заголовок="";
	ЭлементыФормы.Объект1.Заголовок="";
	ЭлементыФормы.ПоддерживаемыеРелизы1.Заголовок="";
	ЭлементыФормы.Версия1.Заголовок="";
	ЭлементыФормы.Объект2.Заголовок="";
	ЭлементыФормы.Версия2.Заголовок="";
	СтрокаОтчетаОбАнализе="";
	
	//очищаем панель сравнения (два табличных поля)
	СравнениеМетаданных.Строки.Очистить();
	ЭлементыФормы.СравнениеМетаданных.ОбновитьСтроки();
	ТрехуровневоеСравнение.Строки.Очистить();
	ЭлементыФормы.ТрехуровневоеСравнение.ОбновитьСтроки();
	
	
	//удаляем каталоги распаковки, если распаковка во временных файлах
	Файл=Новый Файл(КаталогДляРаспаковкиОбновления);
	Если Файл.Путь=КаталогВременныхФайлов() тогда
		УдалитьФайлы(КаталогДляРаспаковкиОбновления);
		КаталогДляРаспаковкиОбновления="";
	КонецЕсли;	
	Файл=Новый Файл(КаталогДляРаспаковкиКонфигурации);
	Если Файл.Путь=КаталогВременныхФайлов() тогда
		УдалитьФайлы(КаталогДляРаспаковкиКонфигурации);
		КаталогДляРаспаковкиКонфигурации="";
	КонецЕсли;
	Файл=Новый Файл(КаталогТретий);
	Если Файл.Путь=КаталогВременныхФайлов() тогда
		УдалитьФайлы(КаталогТретий);
		КаталогТретий="";
	КонецЕсли;
	
	
	//определяем, что нам делать с доступностью/видимостью кнопок и поведением табличных полей
	УправлениеВидимостьюКнопок();
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.ОткрытьНавигаторФайлов.Доступность=Ложь;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие.Доступность=Ложь;
	ЭлементыФормы.УправляющаяКоманднаяПанель.Кнопки.Действие1.Доступность=Ложь;
	ЭлементыФормы.ДеревоCf.КонтекстноеМеню=Неопределено;
	ЭлементыФормы.ДеревоМетаданных.КонтекстноеМеню=Неопределено;
	ЭлементыФормы.ТретьеДерево.КонтекстноеМеню=Неопределено;
	
	//Самая главная операция
	СоответствиеИдентификаторов.Очистить();
	ЭтаФорма.Обновить();
	
КонецПроцедуры

Процедура СохранитьЗначениеКаталогаРаспаковки(Каталог,СохраняемоеИмя)
	Файл=Новый Файл(Каталог);
	Если Файл.Существует() тогда
		Если Файл.Путь=КаталогВременныхФайлов() тогда
			УдалитьФайлы(Каталог); 	
			СохранитьЗначение(СохраняемоеИмя,"");
		Иначе СохранитьЗначение(СохраняемоеИмя,Каталог);
		КонецЕсли;
	Иначе СохранитьЗначение(СохраняемоеИмя,"");	
	КонецЕсли;
КонецПроцедуры

Функция ПодтвердитьПерезаполнение()
	Если СоответствиеИдентификаторов.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ОКОтмена;
		Ответ = Вопрос("Текущие данные будут очищены. Продолжить?",Режим,0);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда Возврат Ложь;
		КонецЕсли;
		ОчиститьТекущиеДанные();
		Возврат Истина;
	КонецЕсли;
КонецФункции

Функция ПроверитьКорректностьЗначения(ПроверяемыйФайл,ДобавляемаяСтрока)
	
	Если Не ЗначениеЗаполнено(ПроверяемыйФайл) Тогда 
		Предупреждение("Не выбран "+ДобавляемаяСтрока);
		Возврат Ложь;
	Иначе	ФайлДляРаспаковки = Новый Файл(ПроверяемыйФайл);
		Если ФайлДляРаспаковки.Существует()=Ложь тогда
			Предупреждение("Файл "+ФайлДляРаспаковки.ПолноеИмя+" не существует!");
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Процедура ПроверкаВторогоИТретьегоОбъектов(РазбиратьФайлОбновления);
	
	//Определяемся что нам делать со вторым объектом сравнения
	Если КаталогДляРаспаковкиОбновления<>"" тогда
		//Если каталог распаковки задан - надо определиться, есть ли там распакованная конфигурация/обработка/отчет/обновление
		Если РежимВыбораОбъекта=2 тогда
			ФайлОписанияОбновления=Новый Файл(КаталогДляРаспаковкиОбновления+"\UpdateInfo.inf");
		ИначеЕсли РежимВыбораОбъекта=4 Тогда
			ФайлОписанияОбновления=Новый Файл(КаталогДляРаспаковкиОбновления+"\form");
		Иначе
			ФайлОписанияОбновления=Новый Файл(КаталогДляРаспаковкиОбновления+"\root");
		КонецЕсли;
		Если ФайлОписанияОбновления.Существует() тогда
			//Во второй папке распакованная конфигурация/обработка/отчет/обновление
			//Второй файл распаковывать не нужно
			РазбиратьФайлОбновления=ложь;
		Иначе 
			//Каталог распаковки второго файла не содержит разобранной конфигурации/обработки/отчета/обновления.
			//Второй файл распаковывать нужно
			//Для этого проверяем поле второго распаковываемого файла на заполнение и сам файл на существование
			Если  ПроверитьКорректностьЗначения(ФайлОбновления,"второй файл для сравнения!")=Ложь Тогда
				Возврат;
			КонецЕсли;
			РазбиратьФайлОбновления=истина;
		КонецЕсли;
	Иначе 
		//Каталог распаковки не задан. Распаковка нужна.	
		РазбиратьФайлОбновления=истина;
	КонецЕсли;
	
	//для режима 3-way diff
	//Определяемся что нам делать с третьим объектом сравнения
	Если РежимСравнения=2 тогда
		Если КаталогТретий<>"" тогда
			//Если каталог распаковки задан - надо определиться, есть ли там распакованная конфигурация/обработка/отчет/обновление
			Если РежимВыбораОбъекта=4  Тогда
				ФайлОписанияТретий=Новый Файл(КаталогТретий+"\form");
			Иначе
				ФайлОписанияТретий=Новый Файл(КаталогТретий+"\root");
			КонецЕсли;
			Если Не ФайлОписанияТретий.Существует() тогда
				//Каталог распаковки третьего файла не содержит разобранной конфигурации/обработки/отчета
				//Проверяем поле третьего распаковываемого файла на заполнение и сам файл на существование
				Если  ПроверитьКорректностьЗначения(ФайлТретий,"третий файл для сравнения!")=Ложь Тогда
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьЗаголовокDiff() Экспорт
	
	Попытка
		ФайлDiff=Новый Файл(ВыборDiff.ПутьПрограммы);
		Если ФайлDiff.Существует() тогда
			ЭлементыФормы.НастройкаDiff.ЦветТекста=WebЦвета.Синий;
			Если ФайлDiff.Имя="kdiff3.exe" тогда
				Программа="KDiff3"
			ИначеЕсли ФайлDiff.Имя="sgdm.exe" тогда
				Программа="SourceGear DiffMerge"
			Иначе
				Программа=ФайлDiff.Имя;
			КонецЕсли;
			ЭлементыФормы.НастройкаDiff.Заголовок="Для трехуровневого сравнения файлов используется программа "+Программа+"";
		КонецЕсли;
	Исключение
		ЭлементыФормы.НастройкаDiff.ЦветТекста=WebЦвета.Красный;
		ЭлементыФормы.НастройкаDiff.Заголовок="Необходимо настроить вызов программы для трехуровневого сравнения";
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьСоответствиеИдентификаторов(КаталогРаспаковки)
	Если КаталогРаспаковки=КаталогДляРаспаковкиКонфигурации тогда
		Дерево=ДеревоCf;
	ИначеЕсли КаталогРаспаковки=КаталогДляРаспаковкиОбновления тогда
		Дерево=ДеревоМетаданных;
	Иначе
		Дерево=ТретьеДерево;
	КонецЕсли;
	МассивСтрок = Дерево.Строки.НайтиСтроки(Новый Структура("Счетчик",""),Истина);
	ВсегоСтрок=МассивСтрок.Количество()-1;
	НомерСтроки=1;
	Для каждого ТекущаяСтрока из Дерево.Строки Цикл
		СоответствиеИдентификаторов.Вставить(ТекущаяСтрока.Идентификатор, ТекущаяСтрока.Синоним);
		НужноеСоответствие.Вставить(ТекущаяСтрока.Идентификатор,ТекущаяСтрока);
		Уровень=ТекущаяСтрока.Уровень();
		ПереборДляСоответствия(ТекущаяСтрока,Уровень,НомерСтроки,ВсегоСтрок);
	КонецЦикла;
КонецПроцедуры

Процедура ПереборДляСоответствия (СтрокаДерева,Уровень,НомерСтроки,ВсегоСтрок)
	Если СтрокаДерева.Идентификатор<>"" Тогда
		СоответствиеИдентификаторов.Вставить(СтрокаДерева.Идентификатор,СтрокаДерева.Синоним);
		НужноеСоответствие.Вставить(СтрокаДерева.Идентификатор,СтрокаДерева);
		Если СтрокаДерева.Объект="О" и СтрокаДерева.СсылкиОбъектов<>Неопределено Тогда
			Для каждого СтрокаСоответствия Из СтрокаДерева.СсылкиОбъектов Цикл
				СоответствиеИдентификаторов.Вставить(СтрокаСоответствия.Ключ,СтрокаСоответствия.Значение);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Стр Из СтрокаДерева.Строки Цикл
		ОбработкаПрерыванияПользователя();
		СтрокаДляВыводаСостояния="Заполнение соответствия идентификаторов.        ";
		//Состояние("Заполнение соответствия идентификаторов. Обрабатывается строка: " + НомерСтроки + "");
		ИзобразитьИндикаторВСтрокеСостояния(СтрокаДляВыводаСостояния,НомерСтроки,ВсегоСтрок);
		НомерСтроки=НомерСтроки+1;	
		ПереборДляСоответствия(Стр,Уровень+1,НомерСтроки,ВсегоСтрок);
	КонецЦикла;
КонецПроцедуры  

Процедура ИзобразитьИндикаторВСтрокеСостояния(Строка,Счетчик,Максимум) //Идея из публикации http://infostart.ru/public/59581/ от Шепота Теней
	Строка=Строка+СтрЗаменить(Лев(СтрокаИндикатора,Цел(Счетчик / (Максимум / 100))),"'","|")+Прав(СтрокаИндикатора,100-Цел(Счетчик / (Максимум / 100)));
	Состояние(Строка);
КонецПроцедуры

//==============================================================================================================================================
// ИНИЦИАЛИЗАЦИЯ
//==============================================================================================================================================

Процедура ИнициализацияРегЭкспов()
	
	WshShell = Новый COMОбъект("WScript.Shell");
	
	МакетРасширений=ЭтотОбъект.ПолучитьМакет("МакетРасширений");
	
	РегулярноеВыражениеX=Новый COMОбъект("VBScript.RegExp");     //для получения из текстового файла объекта пары идентификатор/наименование
	РегулярноеВыражениеX.Multiline=истина;
	РегулярноеВыражениеX.Pattern="\{\d,[\d]+,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?";
	
	РегулярноеВыражениеДляФМ=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеДляФМ.Multiline=истина;
	РегулярноеВыражениеДляФМ.IgnoreCase=истина;
	
	РегулярноеВыражение0=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражение0.Multiline=истина;
	РегулярноеВыражение0.IgnoreCase=истина;
	РегулярноеВыражение0.Global=истина;
	РегулярноеВыражение0.Pattern="\{(\w{8}-\w{4}-\w{4}-\w{4}-\w{12}),(\d+)((,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12}))*)";
	
	РегулярноеВыражение1=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражение1.Multiline=истина;
	РегулярноеВыражение1.IgnoreCase=истина;
	РегулярноеВыражение1.Global=истина;
	РегулярноеВыражение1.Pattern="(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})";
	
	РегулярноеВыражениеN=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеN.Multiline=истина;
	РегулярноеВыражениеN.IgnoreCase=истина;
	РегулярноеВыражениеN.Global=Истина;
	
	РегулярноеВыражениеП=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеП.Multiline=истина;
	РегулярноеВыражениеП.IgnoreCase=истина;
	РегулярноеВыражениеП.Global=истина;
	РегулярноеВыражениеП.Pattern="(,\n\{\n\{\d,\n\{\d,\n\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(.*)"",\n\{(\d(,""\w\w"",""(.*)"")*)\},""(.*)""\},\d\},\d,\n)*\{37f2fa9a-b276-11d4-9435-004095e12fc7,(\d+)((\}\n*)*)";
	
	РегулярноеВыражениеП1=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеП1.Multiline=истина;
	РегулярноеВыражениеП1.IgnoreCase=истина;
	РегулярноеВыражениеП1.Global=истина;
	РегулярноеВыражениеП1.Pattern="\}";
	
	РегулярноеВыражениеП2=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеП2.IgnoreCase=истина;
	РегулярноеВыражениеП2.Pattern="37f2fa9a-b276-11d4-9435-004095e12fc7,\d+(,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12}))*";
	
	РегулярноеВыражениеК1=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеК1.Multiline=истина;
	РегулярноеВыражениеК1.IgnoreCase=истина;
	РегулярноеВыражениеК1.Global=истина;
	
	РегулярноеВыражениеР1=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеР1.Multiline=истина;
	РегулярноеВыражениеР1.IgnoreCase=истина;
	РегулярноеВыражениеР1.Global=истина;
	
	РегулярноеВыражениеР3=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеР3.Multiline=истина;
	РегулярноеВыражениеР3.IgnoreCase=истина;
	РегулярноеВыражениеР3.Global=истина;
	
	РегулярноеВыражениеР4=Новый COMОбъект("VBScript.RegExp");
	РегулярноеВыражениеР4.Multiline=истина;
	РегулярноеВыражениеР4.IgnoreCase=истина;
	РегулярноеВыражениеР4.Global=истина;
	РегулярноеВыражениеР4.Pattern="\{\n\{\d,\n\{[12]\d,\n\{2,\n\{\d,\n\{0,0,(\w{8}-\w{4}-\w{4}-\w{4}-\w{12})\},""(\S+?)"",\n?\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},"".*""(,0,0)?\},\n\{""Pattern""(,\n\{""[#DSNBU]"".*\})*\n?\}\n\}(\n\}\n?|,\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\d,"".*"",\d,\n\{""[#DSNBU]"".*\},\n\{""[#DSNBU]"".*\},\d,\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\d,\d,\n\{5004(,0|,\d+(,"".*"",\d(,\n\{(-\d+|0(,\w{8}-\w{4}-\w{4}-\w{4}-\w{12})?)\})+,\d)+)\},\n\{3,(0,0|\d(,\n\{.*\})*,\d)\},\n\{0,(0|\d(,"".*"",\n(\{""[DSNBU]"".*|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n\{\d+(,\n\{""[DSNBU]"".*|,\n\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\})+\n\}\n)\})+\n)\},\d,\n\{(0|\d(,[^,]*,""(""""|[^""]*)*"")+)\},\n(\{""[DSNBU]"".*\}|\{""#"",\w{8}-\w{4}-\w{4}-\w{4}-\w{12},\n.*\n\}))";
	
КонецПроцедуры

Процедура Инициализация()
	ДвоичныеДанныеПрограммыРаспаковки = ЭтотОбъект.ПолучитьМакет("UnpackV8");
	ПроверкаФайла = Новый Файл(КаталогВременныхФайлов()+"UnpackV8.exe");
	Если ПроверкаФайла.Существует() Тогда
		ФайлПрограммыРаспаковки = Новый Файл(КаталогВременныхФайлов()+"UnpackV8.exe");
	Иначе
		ДвоичныеДанныеПрограммыРаспаковки.Записать(КаталогВременныхФайлов()+"UnpackV8.exe");
		ФайлПрограммыРаспаковки = Новый Файл(КаталогВременныхФайлов()+"UnpackV8.exe");
	КонецЕсли;
КонецПроцедуры

//==============================================================================================================================================
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ВЫЗОВА ИЗ СКРИПТОВ (проекты v8diff - http://infostart.ru/public/118207/ и precommit - https://github.com/xDrivenDevelopment/precommit1c от pumbaE)
//==============================================================================================================================================

// Пример строки запуска для v8diff - "diff;E:\ИмяФайлаСПутямиКДвумФайлам.txt;shutdownAfterClose"
//	"C:\Program Files (x86)\1cv82\8.2.18.96\bin\1cv8c.exe" /DisableStartupMessages /F "E:\v8Diff\IBService" /Out "E:\difflog.txt"  /Execute E:\v8Diff\V8Reader.epf /C "diff;E:\ИмяФайлаСПутямиКДвумФайлам.txt;shutdownAfterClose" /LogUI
// Пример строки запуска для precommit - "decompile;pathtocf;E:\ПутьКФайлуКоторыйНадоРазобратьНаИсходники;pathout;E:\ПутьКПапкеИсходников;shutdownAfterClose"
//	"C:\Program Files (x86)\1cv82\8.2.18.96\bin\1cv8c.exe" /DisableStartupMessages /F "E:\precommit\IBService" /Out "E:\difflog.txt"  /Execute E:\precommit\V8Reader.epf /C "decompile;pathtocf;E:\ПутьКФайлуКоторыйНадоРазобратьНаИсходники;pathout;E:\ПутьКПапкеИсходников;shutdownAfterClose" /LogUI

Процедура ОбработатьПараметрыЗапуска(СтрокаПараметровЗапуска)
	
	естьКоманда_Сравнения = Ложь;
	естьКоманда_Анализа = Ложь;
	естьКоманда_РазложитьПоПапкам = Ложь;
	лЗавершитьРаботуПосле = Ложь;
	ЗавершитьРаботу1СПослеЗакрытия = Ложь;
	
	КаталогВыгрузки = ""; ПутьКФайлуКонфигурации="";
	Путь1 = ""; Путь2 = ""; Путь3 = "";
	
	Если ПустаяСтрока(СтрокаПараметровЗапуска) Тогда
		Возврат ;
	КонецЕсли;
	
	СоответствиеВидовФайлов = Новый Соответствие;
	СоответствиеВидовФайлов.Вставить("cf", 0);
	СоответствиеВидовФайлов.Вставить("cfu", 2);
	СоответствиеВидовФайлов.Вставить("epf", 1);
	СоответствиеВидовФайлов.Вставить("erf", 3);
	СоответствиеВидовФайлов.Вставить("ssf", 4);
	СоответствиеВидовФайлов.Вставить("form", 4);
	СоответствиеВидовФайлов.Вставить("mxl", 100);
	СоответствиеВидовФайлов.Вставить("txt", 101);
	СоответствиеВидовФайлов.Вставить("xml", 102);
	
	параметрыЗапуска = ПолучитьМассивПараметровЗапуска(СтрокаПараметровЗапуска);
	
	МаксимальныйИндекс = параметрыЗапуска.ВГраница();
	
	Для Номер = 0 По МаксимальныйИндекс Цикл
		ЭлементМассива = параметрыЗапуска.Получить(Номер);
		
		Если ПустаяСтрока(ЭлементМассива) Тогда
			Продолжить;
		КонецЕсли;
		ОчереднаяКоманда = НРег(ЭлементМассива);
		НомерМеньшеМаксимальногоИндекса = Номер < МаксимальныйИндекс;
		
		Если ОчереднаяКоманда = НРег("ЗавершитьРаботуПосле") или ОчереднаяКоманда = НРег("shutdown") Тогда
			лЗавершитьРаботуПосле = Истина;
			Продолжить;
		КонецЕсли;
		
		Если ОчереднаяКоманда = НРег("ЗавершитьРаботу1СПослеЗакрытия") или ОчереднаяКоманда = НРег("shutdownAfterClose") Тогда
			ЗавершитьРаботу1СПослеЗакрытия = Истина;
			Продолжить;
		КонецЕсли;
		
		Если ОчереднаяКоманда = НРег("decompile") Тогда
			естьКоманда_РазложитьПоПапкам = Истина;
		КонецЕсли;
		
		Если ОчереднаяКоманда = НРег("diff") И НомерМеньшеМаксимальногоИндекса Тогда
			Путь = параметрыЗапуска.Получить(Номер+1);
			Попытка
				Файл = Новый Файл(Путь);
				Если Файл.Существует() Тогда
					Если СоответствиеВидовФайлов.Получить(Сред(Файл.Расширение,2)) = Неопределено Тогда
						естьКоманда_Сравнения = Истина;
						ТекстДокумент = Новый ТекстовыйДокумент;
						ТекстДокумент.Прочитать(Файл.ПолноеИмя);
						// в принципе, предполагаем, что 2 строки будет, первая Путь1, вторая Путь2
						КоличествоСтрок = ТекстДокумент.КоличествоСтрок();
						Для НомерСтроки = 1 По КоличествоСтрок Цикл
							
							ТекстСтроки = ТекстДокумент.ПолучитьСтроку(НомерСтроки);
							Попытка
								Выполнить("Путь"+НомерСтроки+" = ТекстСтроки;");
							Исключение
							КонецПопытки;
							
						КонецЦикла;
						//чтобы не копить мусор во временных файлах
						УдалитьФайлы(Путь);
					КонецЕсли;
				Иначе 
					естьКоманда_Анализа = Истина;
					Путь1 = Файл.ПолноеИмя;
				КонецЕсли;
			Исключение
				//Сообщить(НСтр("ru = '"+ОписаниеОшибки()+"'"), СтатусСообщения.Внимание);
			КонецПопытки;
			
		ИначеЕсли ОчереднаяКоманда = НРег("pathToCF") И НомерМеньшеМаксимальногоИндекса Тогда
			Путь = параметрыЗапуска.Получить(Номер+1);
			Файл = Новый Файл(Путь);
			Если НЕ Файл.Существует() ИЛИ НЕ Файл.ЭтоФайл() Тогда
				ПутьКФайлуКонфигурации = "";
			Иначе
				ПутьКФайлуКонфигурации = Путь;
			КонецЕсли;
			
		ИначеЕсли ОчереднаяКоманда = НРег("pathOut") И НомерМеньшеМаксимальногоИндекса Тогда
			
			Путь = параметрыЗапуска.Получить(Номер+1);
			Файл = Новый Файл(Путь);
			Если НЕ Файл.Существует() ИЛИ НЕ Файл.ЭтоКаталог() Тогда
				Попытка
					СоздатьКаталог(Путь);
					КаталогВыгрузки = Путь; //ПутьККаталогуДляВыгрузки
				Исключение
					КаталогВыгрузки = ""; //ПутьККаталогуДляВыгрузки
				КонецПопытки;
			Иначе
				КаталогВыгрузки = Путь; //ПутьККаталогуДляВыгрузки
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//КонецЕсли;
	
	Если Не естьКоманда_Анализа И НЕ естьКоманда_Сравнения И НЕ естьКоманда_РазложитьПоПапкам Тогда
		Возврат ;
	КонецЕсли;
	
	Файл1 = Новый Файл(Путь1);
	Файл2 = Новый Файл(Путь2);
	Файл3 = Новый Файл(Путь3);
	
	Если естьКоманда_Анализа ИЛИ естьКоманда_Сравнения Тогда
		
		//{ Расширение файлов и режим разбора Определим расширение файла и порядок выбора. 
		Если Файл2.Существует() Тогда
			Расширение = НРег(Сред(Файл2.Расширение, 2))
		ИначеЕсли Файл1.Существует() Тогда
			Расширение = НРег(Сред(Файл1.Расширение, 2));	
		Иначе
			Расширение = "";
		КонецЕсли;
			
		Если СоответствиеВидовФайлов.Получить(Расширение) <> Неопределено Тогда
			РежимВыбораОбъекта = СоответствиеВидовФайлов.Получить(Расширение);
		Иначе 
			РежимВыбораОбъекта = 100;
		КонецЕсли; 
		//}
		
		Если естьКоманда_Сравнения Тогда
			
			ФайлКонфигурации = ?(Файл1.Существует(), Файл1.ПолноеИмя, Путь1);
			ФайлОбновления = ?(Файл2.Существует(), Файл2.ПолноеИмя, Путь2);
			ФайлТретий = ?(Файл3.Существует(), Файл3.ПолноеИмя, Путь3);
			
			Если Файл1.Существует() И Файл2.Существует() И НЕ Файл3.Существует() Тогда
				РежимСравнения = 1;
			ИначеЕсли Файл1.Существует() И Файл2.Существует() И Файл3.Существует() Тогда
				РежимСравнения = 2;
			ИначеЕсли Файл1.Существует() Тогда
				РежимСравнения = 0;
			КонецЕсли;
		ИначеЕсли естьКоманда_Анализа Тогда
			ФайлОбновления = ?(Файл1.Существует(), Файл1.ПолноеИмя, Путь1);
			РежимСравнения = 0;
			
		КонецЕсли;
			
		Если РежимВыбораОбъекта < 9 Тогда
			РежимАнализаПриИзменении();
			КнопкаВыполнитьНажатиеКомплекс(Неопределено);
			Если РежимВыбораОбъекта = 4 Тогда
				Форм = ПолучитьФорму("РазборФормы", ЭтаФорма);
				Форм.ЗакрыватьПриЗакрытииВладельца = Ложь;
				ЗавершитьРаботу1СПослеЗакрытия = Ложь;
				ЭтаФорма.Закрыть();
				ЗавершитьРаботу1СПослеЗакрытия = Истина;
			КонецЕсли;
		Иначе
			Если СоответствиеВидовФайлов.Получить(Расширение) = 102 Тогда
				Попытка
					ПервыйВременныйФайлРаспаковки = ПолучитьИмяВременногоФайла("mxl");
					ВторойВременныйФайлРаспаковки = ПолучитьИмяВременногоФайла("mxl");
					
					ЧтениеХМЛ1 =  Новый ЧтениеXML;
					ЧтениеХМЛ1.ОткрытьФайл(Путь1);				
					ТабДок1 = СериализаторXDTO.ПрочитатьXML(ЧтениеХМЛ1, Тип("ТабличныйДокумент"));
					ТабДок1.Записать(ПервыйВременныйФайлРаспаковки);
					
					ЧтениеХМЛ2 =  Новый ЧтениеXML;
					ЧтениеХМЛ2.ОткрытьФайл(Путь2);	
					ТабДок2 = СериализаторXDTO.ПрочитатьXML(ЧтениеХМЛ2, Тип("ТабличныйДокумент"));
					ТабДок2.Записать(ВторойВременныйФайлРаспаковки);
					
					СравнениеВременныхФайлов = Новый СравнениеФайлов;
					СравнениеВременныхФайлов.ПервыйФайл = ПервыйВременныйФайлРаспаковки;
					СравнениеВременныхФайлов.ВторойФайл = ВторойВременныйФайлРаспаковки;
					СравнениеВременныхФайлов.СпособСравнения = СпособСравненияФайлов.ТабличныйДокумент;
					СравнениеВременныхФайлов.УчитыватьРегистр = Истина;
					СравнениеВременныхФайлов.ИгнорироватьПустоеПространство = Истина;
					СравнениеВременныхФайлов.ПоказатьРазличияМодально();
					
				Исключение
					Предупреждение("Неподдерживаемый формат xml-файла");
				КонецПопытки;
			Иначе
				СравнениеПроизвольныхФайлов(Путь1, Путь2);
			КонецЕсли;
			ЭтаФорма.Закрыть();
		КонецЕсли;
		
	ИначеЕсли естьКоманда_РазложитьПоПапкам Тогда
		
		Файл1 = Новый Файл(ПутьКФайлуКонфигурации);
		
		Если Файл1.Существует() Тогда
			
			Расширение = Сред(Файл1.Расширение, 2);	
			Если СоответствиеВидовФайлов.Получить(Расширение) <> Неопределено Тогда
				РежимВыбораОбъекта = СоответствиеВидовФайлов.Получить(Расширение);
			Иначе 
				РежимВыбораОбъекта = 100;
			КонецЕсли; 
			РежимСравнения = 0;
			ФайлОбновления = Файл1.ПолноеИмя;	
			
			РежимАнализаПриИзменении();
			КнопкаВыполнитьНажатие(Неопределено);
			
			РазложитьПоПапкамСогласноИерархииМетаданных(КаталогДляРаспаковкиОбновления, ДеревоМетаданных, КаталогВыгрузки)
			
		КонецЕсли;
		
		Если лЗавершитьРаботуПосле Тогда
			ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьМассивПараметровЗапуска(СтрокаПараметровЗапуска)
	
	Если ПустаяСтрока(СтрокаПараметровЗапуска) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыЗапуска = РазложитьСтрокуВМассивПодстрок(СтрокаПараметровЗапуска, ";");
	
	Возврат ПараметрыЗапуска;
	
КонецФункции

Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено) 
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

Процедура СравнениеПроизвольныхФайлов(Путь1, Путь2) 
	
		Сравнение = Новый СравнениеФайлов;
		Сравнение.ПервыйФайл = ФайлКонфигурации;
		Сравнение.ВторойФайл = ФайлОбновления;
		Сравнение.ИгнорироватьПустоеПространство = Истина;
		Сравнение.УчитыватьРегистр = Истина;
		
		Попытка
			Сравнение.СпособСравнения = СпособСравненияФайлов.ТекстовыйДокумент;
			Сравнение.ПоказатьРазличияМодально();
		Исключение
			Попытка
				Сравнение.СпособСравнения = СпособСравненияФайлов.ТабличныйДокумент;
				Сравнение.ПоказатьРазличияМодально();
			Исключение
				Сравнение.СпособСравнения = СпособСравненияФайлов.Двоичное;
				Сравнение.ПоказатьРазличияМодально();
			КонецПопытки;
		КонецПопытки;
		Возврат;
	
КонецПроцедуры

Процедура РазложитьПоПапкамСогласноИерархииМетаданных(ПутьРаспаковки, ДеревоОбъектов, Знач ПутьКСохранению)
	
	Если Прав(ПутьКСохранению, 1) <> "\" Тогда
		ПутьКСохранению = ПутьКСохранению + "\";
	КонецЕсли;
	
	Переименования = Новый ТаблицаЗначений;
	Переименования.Колонки.Добавить("Источник", Новый ОписаниеТипов("Строка", ,Новый КвалификаторыСтроки(500, ДопустимаяДлина.Переменная)));
	Переименования.Колонки.Добавить("Приемник", Новый ОписаниеТипов("Строка", ,Новый КвалификаторыСтроки(500, ДопустимаяДлина.Переменная)));
	
	МассивФайлов = НайтиФайлы(ПутьРаспаковки, "*");
	
	ФайлКаталога = Новый Файл(ПутьКСохранению + "und");
	Если НЕ ФайлКаталога.Существует() Тогда
		СоздатьКаталог(ФайлКаталога.ПолноеИмя);
	КонецЕсли;
	
	ФайлыИсключений = Новый Массив();
	
	Для каждого ЭлементМассива Из МассивФайлов Цикл
		Если ФайлыИсключений.Найти(ЭлементМассива) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаМетаданного = ДеревоОбъектов.Строки.Найти(ЭлементМассива.Имя, "ПутьТекОбъект", Истина);
		Если СтрокаМетаданного = Неопределено Тогда
			НовыйПуть = ПутьКСохранению + "und\" + ЭлементМассива.Имя;
			Если ЭлементМассива.ЭтоФайл() Тогда
				КопироватьФайл(ЭлементМассива.ПолноеИмя, НовыйПуть);
			Иначе //Это каталог
				НовыйФайл = Новый Файл(НовыйПуть);
				Если НовыйФайл.Существует() Тогда
					УдалитьФайлы(НовыйПуть);
				КонецЕсли;
				
				СоздатьКаталог(НовыйПуть);
				МассивФайловПодкаталога = НайтиФайлы(ЭлементМассива.ПолноеИмя, "*");
				Для каждого ЭлементМассиваПодкаталога Из МассивФайловПодкаталога Цикл
					КопироватьФайл(ЭлементМассиваПодкаталога, НовыйПуть + "\" + ЭлементМассиваПодкаталога.Имя);
				КонецЦикла;
			КонецЕсли;
			НоваяСтрока = Переименования.Добавить();
			НоваяСтрока.Источник = ЭлементМассива.Имя;
			НоваяСтрока.Приемник = СтрЗаменить(НовыйПуть, ПутьКСохранению, "");
		Иначе
			
			Если СтрокаМетаданного.Объект = "МОД" Тогда
				//Получим текст модуля и его запишем, остальное в переместим в сырые данные. 
				МассивФайловВКаталоге = НайтиФайлы(ЭлементМассива.ПолноеИмя, "*");
				Для каждого ЭлементМассиваКаталогаМодуля Из МассивФайловВКаталоге Цикл
					Если ЭлементМассиваКаталогаМодуля.Имя <> "text" Тогда
						НовоеИмя = ПутьКСохранению + "und\" + ЭлементМассива.Имя + "\" + ЭлементМассиваКаталогаМодуля.Имя;
						ФайлНовый = Новый Файл(НовоеИмя);
						ФайлКаталогаНовый = Новый Файл(ФайлНовый.Путь);
						Если НЕ ФайлКаталогаНовый.Существует() Тогда
							СоздатьКаталог(ФайлКаталогаНовый.ПолноеИмя);
						КонецЕсли;
						
						КопироватьФайл(ЭлементМассиваКаталогаМодуля.ПолноеИмя, НовоеИмя);
						
						НоваяСтрока = Переименования.Добавить();
						НоваяСтрока.Источник = ЭлементМассива.Имя + "\" + ЭлементМассиваКаталогаМодуля.Имя;
						НоваяСтрока.Приемник = СтрЗаменить(НовоеИмя, ПутьКСохранению, "");
					Иначе
						
						НовоеИмя = ПутьКСохранению + "ObjectModule.txt";
						ФайлНовый = Новый Файл(НовоеИмя);
						ФайлКаталогаНовый = Новый Файл(ФайлНовый.Путь);
						Если НЕ ФайлКаталогаНовый.Существует() Тогда
							СоздатьКаталог(ФайлКаталогаНовый.ПолноеИмя);
						КонецЕсли;
						
						КопироватьФайл(ЭлементМассиваКаталогаМодуля.ПолноеИмя, НовоеИмя);
						
						НоваяСтрока = Переименования.Добавить();
						НоваяСтрока.Источник = ЭлементМассива.Имя + "\" + ЭлементМассиваКаталогаМодуля.Имя;
						НоваяСтрока.Приемник = СтрЗаменить(НовоеИмя, ПутьКСохранению, "");
						
					КонецЕсли;
				КонецЦикла;
				
				Продолжить;
				
			КонецЕсли;
			
			Если СтрокаМетаданного.Объект = "М" Тогда
				
				Если СтрокаМетаданного.Строки.Количество() = 0 Тогда
					
					НовыйПуть = ПутьКСохранению + "und\" + ЭлементМассива.Имя;
					Если ЭлементМассива.ЭтоФайл() Тогда
						КопироватьФайл(ЭлементМассива.ПолноеИмя, НовыйПуть);
					Иначе //Это каталог
						НовыйФайл = Новый Файл(НовыйПуть);
						Если НовыйФайл.Существует() Тогда
							УдалитьФайлы(НовыйПуть);
						КонецЕсли;
						
						СоздатьКаталог(НовыйПуть);
						МассивФайловПодкаталога = НайтиФайлы(ЭлементМассива.ПолноеИмя, "*");
						Для каждого ЭлементМассиваПодкаталога Из МассивФайловПодкаталога Цикл
							КопироватьФайл(ЭлементМассиваПодкаталога, НовыйПуть + "\" + ЭлементМассиваПодкаталога.Имя);
						КонецЦикла;
					КонецЕсли;
					НоваяСтрока = Переименования.Добавить();
					НоваяСтрока.Источник = ЭлементМассива.Имя;
					НоваяСтрока.Приемник = СтрЗаменить(НовыйПуть, ПутьКСохранению, "");
				Иначе
					
					ФайлМакетаИсходный = Новый Файл(ПутьРаспаковки + "\" + СтрокаМетаданного.Строки[0].ПутьТекОбъект);
					
					ИмяМакета = СтрокаМетаданного.Наименование;
					ФайлМакетов = Новый Файл(ПутьКСохранению + "Макеты");
					Если НЕ ФайлМакетов.Существует() Тогда
						СоздатьКаталог(ФайлМакетов.ПолноеИмя);
					КонецЕсли;
					
					//КаталогМакета = ФайлМакетов.ПолноеИмя+"\"+ИмяМакета;
					//ФайлМакета = Новый Файл(КаталогМакета);
					//Если НЕ ФайлМакета.Существует() Тогда
					//	СоздатьКаталог(ФайлМакета.ПолноеИмя);
					//КонецЕсли;
					//
					//СоздатьКаталог(ФайлМакета.ПолноеИмя);
					
					//НовыйПутьМакетаБезРасширения = ФайлМакета.ПолноеИмя+"\T"; // ПутьНовый = ФайлМакета.ПолноеИмя+"\"+ИмяМакета+".txt";
					
					ТипМакетаФайла = СтрокаМетаданного.Строки[0].Объект;
					Если ТипМакетаФайла = "М6" Тогда //Компоновка
						КаталогМакета = ФайлМакетов.ПолноеИмя + "\" + ИмяМакета;
						ФайлМакета = Новый Файл(КаталогМакета);
						Если НЕ ФайлМакета.Существует() Тогда
							СоздатьКаталог(ФайлМакета.ПолноеИмя);
						КонецЕсли;
						
						ПутьНовый = ФайлМакета.ПолноеИмя+"\T.xml";
						
						ТекстовыйДокумент = Новый ТекстовыйДокумент;
						ТекстовыйДокумент.Прочитать(ФайлМакетаИсходный.ПолноеИмя, КодировкаТекста.UTF8);
						XMLСтрокаМакета = ТекстовыйДокумент.ПолучитьТекст();
						XMLСтрокаМакета = Прав(XMLСтрокаМакета, СтрДлина(XMLСтрокаМакета) - Найти(XMLСтрокаМакета, "<?xml version=""1.0"" encoding=""UTF-8""?>") + 1);
						ТекстовыйДокумент.УстановитьТекст(XMLСтрокаМакета);
						
						ТекстовыйДокумент.Записать(ПутьНовый);
					Иначе
						НовыйПутьМакетаБезРасширения = ФайлМакетов.ПолноеИмя+"\"+ИмяМакета;
						Если ТипМакетаФайла = "М0" Тогда //Табличный документ
							ПутьНовый = НовыйПутьМакетаБезРасширения + ".mxl";
						ИначеЕсли ТипМакетаФайла = "М4" Тогда //Табличный документ
							ПутьНовый = НовыйПутьМакетаБезРасширения + ".txt";
						Иначе
							ПутьНовый = НовыйПутьМакетаБезРасширения + ".txt";
						КонецЕсли;
						
						КопироватьФайл(ФайлМакетаИсходный.ПолноеИмя, ПутьНовый);
					КонецЕсли;
					
					
					
					НоваяСтрока = Переименования.Добавить();
					НоваяСтрока.Источник = ФайлМакетаИсходный.Имя;
					НоваяСтрока.Приемник = СтрЗаменить(ПутьНовый, ПутьКСохранению, "");
					
					ФайлыИсключений.Добавить(ФайлМакетаИсходный);
					
				КонецЕсли;
				
				
				НовыйПуть = ПутьКСохранению + "und\" + ЭлементМассива.Имя;
				Если ЭлементМассива.ЭтоФайл() Тогда
					КопироватьФайл(ЭлементМассива.ПолноеИмя, НовыйПуть);
				Иначе //Это каталог
					НовыйФайл = Новый Файл(НовыйПуть);
					Если НовыйФайл.Существует() Тогда
						УдалитьФайлы(НовыйПуть);
					КонецЕсли;
					
					СоздатьКаталог(НовыйПуть);
					МассивФайловПодкаталога = НайтиФайлы(ЭлементМассива.ПолноеИмя, "*");
					Для каждого ЭлементМассиваПодкаталога Из МассивФайловПодкаталога Цикл
						КопироватьФайл(ЭлементМассиваПодкаталога, НовыйПуть + "\" + ЭлементМассиваПодкаталога.Имя);
					КонецЦикла;
				КонецЕсли;
				НоваяСтрока = Переименования.Добавить();
				НоваяСтрока.Источник = ЭлементМассива.Имя;
				НоваяСтрока.Приемник = СтрЗаменить(НовыйПуть, ПутьКСохранению, "");
				//СтрокаТаблицы.Хеш = ПолучитьХешМодуля(СтрокаТаблицы.ПутьКОбъекту);
				//КонецЕсли;
				
				Продолжить;
				
				
			КонецЕсли;
			
			Если СтрокаМетаданного.Объект = "Ф" И НЕ ЭлементМассива.ЭтоКаталог() И Не ПустаяСтрока(ЭлементМассива.Расширение) Тогда 
				
				//Если ПустаяСтрока(ТекущийФайл.Расширение) Тогда
				//			
				//			ФайлПроверка = Новый Файл(ТекущийФайл.ПолноеИмя + ".0");
				//			Если ФайлПроверка.ЭтоКаталог() Тогда
				//				СтрокаТаблицы.ПутьКОбъекту = ТекущийФайл.ПолноеИмя + ".0\module";
				//				ТекстовыйДокумент = Новый ТекстовыйДокумент;
				//				ТекстовыйДокумент.Прочитать(СтрокаТаблицы.ПутьКОбъекту, КодировкаТекста.UTF8);
				//			Иначе
				//				СтрокаТаблицы.ПутьКОбъекту = ТекущийФайл.ПолноеИмя + ".0";
				ТекстовыйДокумент = Новый ТекстовыйДокумент;
				ТекстовыйДокумент.Прочитать(ЭлементМассива.ПолноеИмя, КодировкаТекста.UTF8);
				XMLТело = СтрокаВнутрВХМЛТело(ТекстовыйДокумент.ПолучитьТекст());
				ТекстовыйДокумент.УстановитьТекст(ПолучитьТекстМодуля(XMLТело));
				
				
				ИмяФормы = СтрокаМетаданного.Родитель.Наименование;
				ФайлForms = Новый Файл(ПутьКСохранению + "Form");
				Если НЕ ФайлForms.Существует() Тогда
					СоздатьКаталог(ФайлForms.ПолноеИмя);
				КонецЕсли;
				
				КаталогФормы = ФайлForms.ПолноеИмя + "\" + ИмяФормы;
				ФайлФормы = Новый Файл(КаталогФормы);
				Если ФайлФормы.Существует() Тогда
					УдалитьФайлы(ФайлФормы.ПолноеИмя);
				КонецЕсли;
				
				СоздатьКаталог(ФайлФормы.ПолноеИмя);
				НовыйПутьМодуляУправляемойФормы = ФайлФормы.ПолноеИмя + "\" + "Форма.txt";
				ТекстовыйДокумент.Записать(НовыйПутьМодуляУправляемойФормы);
				
				НоваяСтрока = Переименования.Добавить();
				НоваяСтрока.Источник = ЭлементМассива.Имя;
				НоваяСтрока.Приемник = СтрЗаменить(НовыйПутьМодуляУправляемойФормы, ПутьКСохранению, "");
				
				
				НовыйПуть = ПутьКСохранению + "und\" + ЭлементМассива.Имя;
				Если ЭлементМассива.ЭтоФайл() Тогда
					КопироватьФайл(ЭлементМассива.ПолноеИмя, НовыйПуть);
				КонецЕсли;
				НоваяСтрока = Переименования.Добавить();
				НоваяСтрока.Источник = ЭлементМассива.Имя;
				НоваяСтрока.Приемник = СтрЗаменить(НовыйПуть, ПутьКСохранению, "");
				
				//			КонецЕсли;
				//			СтрокаТаблицы.Хеш = ПолучитьХешМодуля(СтрокаТаблицы.ПутьКОбъекту)
				//			
				//		КонецЕсли;
				
			КонецЕсли;
			
			
			Если ЭлементМассива.ЭтоКаталог() Тогда
				//Тут два варианта - форма, тогда полностью имя или же модуль объекта. 
				Если СтрокаМетаданного.Объект = "Ф" Тогда 
					ИмяФормы = СтрокаМетаданного.Родитель.Наименование;
					ФайлForms = Новый Файл(ПутьКСохранению + "Form");
					Если НЕ ФайлForms.Существует() Тогда
						СоздатьКаталог(ФайлForms.ПолноеИмя);
					КонецЕсли;
					
					КаталогФормы = ФайлForms.ПолноеИмя + "\" + ИмяФормы;
					ФайлФормы = Новый Файл(КаталогФормы);
					Если ФайлФормы.Существует() Тогда
						УдалитьФайлы(ФайлФормы.ПолноеИмя);
					КонецЕсли;
					
					СоздатьКаталог(ФайлФормы.ПолноеИмя);
					
					МассивФайловПодкаталога = НайтиФайлы(ЭлементМассива.ПолноеИмя, "*");
					Для каждого ЭлементМассиваПодкаталога Из МассивФайловПодкаталога Цикл
						КопироватьФайл(ЭлементМассиваПодкаталога.ПолноеИмя, ФайлФормы.ПолноеИмя + "\" + ЭлементМассиваПодкаталога.Имя);
					КонецЦикла;
					
					НоваяСтрока = Переименования.Добавить();
					НоваяСтрока.Источник = ЭлементМассива.Имя;
					НоваяСтрока.Приемник = СтрЗаменить(ФайлФормы.ПолноеИмя, ПутьКСохранению, "");
					
				КонецЕсли;
			Иначе
				НовыйПуть = ПутьКСохранению + "und\" + ЭлементМассива.Имя;
				
				КопироватьФайл(ЭлементМассива.ПолноеИмя, НовыйПуть);
				НоваяСтрока = Переименования.Добавить();
				НоваяСтрока.Источник = ЭлементМассива.Имя;
				НоваяСтрока.Приемник = СтрЗаменить(НовыйПуть, ПутьКСохранению, "");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Переименования.Сортировать("Источник");
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	Для каждого ЭлементСтроки Из Переименования Цикл
		ТекстовыйДокумент.ДобавитьСтроку(ЭлементСтроки.Источник + "-->" + ЭлементСтроки.Приемник);
	КонецЦикла;
	ТекстовыйДокумент.Записать(ПутьКСохранению + "renames.txt");
	
	//+Володькин добавим возможность выполнить какие-то действия после того, как декомпилировали файл
	_Файл = Новый Файл(ЭтотОбъект.ИспользуемоеИмяФайла);
	ОбработкаТекста = ВнешниеОбработки.Создать(_Файл.Путь+"\OrdinaryFormArrange.epf");
	ОбработкаТекста.ПостОбработка(ПутьКСохранению);
	//-Володькин
	
КонецПроцедуры

Процедура УправляющаяКоманднаяПанельДействиеСохранить(Кнопка)
	СисИнфо = Новый СистемнаяИнформация;
	Режим=РежимДиалогаВопрос.ОКОтмена;
	Если СтрЗаменить(СисИнфо.ВерсияПриложения,".",Символы.ПС) < СтрЗаменить("8.2.15.294",".",Символы.ПС) Тогда
		Ответ = Вопрос("Эта возможность корректно работает только для версий платформы от 8.2.14 и выше. Продолжить?",Режим,0);	
		Если Ответ=КодВозвратаДиалога.Отмена Тогда Возврат;
		КонецЕсли;
	КонецЕсли;
	ВыбКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если ВыбКаталога.Выбрать() = Истина Тогда
		Путь = ВыбКаталога.Каталог;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Путь) Тогда
		РазложитьПоПапкамСогласноИерархииМетаданных(КаталогДляРаспаковкиОбновления, ДеревоМетаданных, Путь);
	Иначе
		Сообщить("Не выбран путь для сохранения");
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТекстМодуля(XMLСтрокаФормы)
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(XMLСтрокаФормы);
	ЧтениеXML.Прочитать();
	ЧтениеXML.Прочитать();
	ЧтениеXML.Пропустить();
	ЧтениеXML.Пропустить();
	ЧтениеXML.Пропустить();
	ЧтениеXML.Прочитать();
	ЧтениеXML.Прочитать();	
	ТекстМодуля = Прав(ЧтениеXML.Значение, СтрДлина(ЧтениеXML.Значение) - 1);
	ТекстМодуля = Лев(ТекстМодуля, СтрДлина(ТекстМодуля) - 1);
	ТекстМодуля = СтрЗаменить(ТекстМодуля, """""", """");
	Возврат ТекстМодуля;
	
КонецФункции

Процедура ФайлКонфигурацииПриИзменении(Элемент)
	Файл = Новый Файл(Элемент.Значение);
	Если Файл.Существует() Тогда
		Если Файл.Расширение=".cf" и РежимВыбораОбъекта <> 0 Тогда
			РежимВыбораОбъекта = 0;
		ИначеЕсли Файл.Расширение=".epf" И РежимВыбораОбъекта <> 1 Тогда
			РежимВыбораОбъекта = 1;
		ИначеЕсли Файл.Расширение=".erf" И РежимВыбораОбъекта <> 3 Тогда
			РежимВыбораОбъекта = 3;
		ИначеЕсли Файл.Расширение = ".cfu" И РежимВыбораОбъекта <> 2 Тогда
			РежимВыбораОбъекта = 2;
		ИначеЕсли (Файл.Расширение = ".ssf" или Файл.Расширение = ".Form") И РежимВыбораОбъекта <> 4 Тогда
			РежимВыбораОбъекта = 4;
		Иначе
			Возврат;
		КонецЕсли;
		РежимCfПриИзменении();
	КонецЕсли;
КонецПроцедуры



//+Володькин
//функция для отладки. При открытии формы автоматически выполняет декомпиляцию внешней обработки
//и обратную сборку из полученных исходников с проверкой успешности.
Процедура ВыполнитьРазборкуИСборкуДляОтладки()
	
	//еще раз получим параметры запуска и поймем, запущена обработка из precommit1c или вручную
	параметрыЗапуска = ПолучитьМассивПараметровЗапуска(ПараметрЗапуска);
	Для Номер = 0 По параметрыЗапуска.ВГраница() Цикл
		ЭлементМассива = параметрыЗапуска.Получить(Номер);
		
		Если ПустаяСтрока(ЭлементМассива) Тогда
			Продолжить;
		КонецЕсли;
		ОчереднаяКоманда = НРег(ЭлементМассива);
		Если ОчереднаяКоманда = НРег("ЗавершитьРаботуПосле") или ОчереднаяКоманда = НРег("shutdown") Тогда
			лЗавершитьРаботуПосле = Истина;
			Продолжить;
		КонецЕсли;
	КонецЦикла;	
	
	
	Если лЗавершитьРаботуПосле=Истина Тогда Возврат КонецЕсли; 
	
	ФайлОбновления = "C:\temp\git\v8_precommit\KonturEDI_2.epf";//что пересобираем
	
	_Файл = Новый Файл(ФайлОбновления);
	
	КаталогДляРаспаковки = _Файл.Путь+"src\"+_Файл.ИмяБезРасширения;   //TODO надо ли учитывать плагин с переопределением папки src?
	УдалитьФайлы(КаталогДляРаспаковки);//почистим принудительно
	
    //типовой кусок
	Файл1 = Новый Файл(ФайлОбновления);
	СоответствиеВидовФайлов = Новый Соответствие;
	СоответствиеВидовФайлов.Вставить("cf", 0);
	СоответствиеВидовФайлов.Вставить("cfu", 2);
	СоответствиеВидовФайлов.Вставить("epf", 1);
	СоответствиеВидовФайлов.Вставить("erf", 3);
	СоответствиеВидовФайлов.Вставить("ssf", 4);
	СоответствиеВидовФайлов.Вставить("form", 4);
	СоответствиеВидовФайлов.Вставить("mxl", 100);
	СоответствиеВидовФайлов.Вставить("txt", 101);
	СоответствиеВидовФайлов.Вставить("xml", 102);
	
	Если Файл1.Существует() Тогда
		
		Расширение = Сред(Файл1.Расширение, 2);	
		Если СоответствиеВидовФайлов.Получить(Расширение) <> Неопределено Тогда
			РежимВыбораОбъекта = СоответствиеВидовФайлов.Получить(Расширение);
		Иначе 
			РежимВыбораОбъекта = 100;
		КонецЕсли; 
		РежимСравнения = 0;
		ФайлОбновления = Файл1.ПолноеИмя;	
		
		РежимАнализаПриИзменении();
		КнопкаВыполнитьНажатие(Неопределено);
		
		РазложитьПоПапкамСогласноИерархииМетаданных(КаталогДляРаспаковкиОбновления, ДеревоМетаданных, КаталогДляРаспаковки)
		
	КонецЕсли;
	
	
	ТД = Новый ТекстовыйДокумент;
	
	ПутьКРепозиторию = "c:\temp\git\v8_precommit\";//TODO определять по ФайлОбновления
	
	ТД.УстановитьТекст(
	"cd "+ПутьКРепозиторию+"
	|python .git\hooks\pyv8unpack.py --compile ""src\"+_Файл.ИмяБезРасширения+""" """+_Файл.ИмяБезРасширения+"_compiled.epf""
	|"
	);
	ИмяВФ = ПолучитьИмяВременногоФайла("bat");
	//"c:\temp\git\v8_precommit\run.bat";
	ТД.Записать(ИмяВФ,КодировкаТекста.ANSI);
	ЗапуститьПриложение(ИмяВФ,,Истина);
	
	Попытка
		Обр = ВнешниеОбработки.Создать(_Файл.Путь+_Файл.ИмяБезРасширения+"_compiled.epf");
		Предупреждение("Сборка удалась");
	Исключение
		Предупреждение("Сборка не удалась");
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	УдалитьФайлы(ИмяВФ);
	
КонецПроцедуры
//-Володькин


//==============================================================================================================================================
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//==============================================================================================================================================

СоответствиеИдентификаторов=Новый Соответствие();
СоответствиеСтрокПервогоДерева=Новый Соответствие();
СоответствиеСтрокВторогоДерева=Новый Соответствие();
СоответствиеСтрокТретьегоДерева=Новый Соответствие();
КоллекцияВременныхФайлов=Новый Массив();
СтрокаОтчетаОбАнализе="";
СтрокаИндикатора="''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''";
